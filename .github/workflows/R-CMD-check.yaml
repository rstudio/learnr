on:
  push:
    branches:
      - master
      - ghactions
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'devel'}
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-16.04, r: 'release', rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-18.04, r: 'release', rspm: "https://demo.rstudiopm.com/all/__linux__/bionic/latest"}
          - {os: ubuntu-18.04, r: '3.6', rspm: "https://demo.rstudiopm.com/all/__linux__/bionic/latest"}
          - {os: ubuntu-18.04, r: '3.5', rspm: "https://demo.rstudiopm.com/all/__linux__/bionic/latest"}
          - {os: ubuntu-18.04, r: '3.4', rspm: "https://demo.rstudiopm.com/all/__linux__/bionic/latest"}
          - {os: ubuntu-18.04, r: '3.3', rspm: "https://demo.rstudiopm.com/all/__linux__/bionic/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v1

      - uses: r-lib/actions/setup-r@master
        id: install-r
        with:
          r-version: ${{ matrix.config.r }}
      - name: R Options
        shell: bash
        run: |
          echo 'MAKEFLAGS=-j2' >> .Renviron


      - uses: r-lib/actions/setup-pandoc@master

      - name: Install pak and query dependencies
        shell: Rscript {0}
        run: |
          install.packages("pak", repos = "https://r-lib.github.io/p/pak/dev/")
          saveRDS(pak::pkg_deps_tree("local::.", dependencies = TRUE), ".github/r-depends.rds")

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ matrix.config.os }}-${{ steps.install-r.outputs.installed-r-version }}-1-${{ hashFiles('.github/r-depends.rds') }}
          restore-keys: ${{ matrix.config.os }}-${{ steps.install-r.outputs.installed-r-version }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        shell: Rscript {0}
        run: |
          pak::local_system_requirements(execute = TRUE)

      - name: Install libcurl
        if: runner.os == 'Linux'
        run: |
          sudo -s apt-get update
          sudo -s apt-get install -y libcurl4-openssl-dev

      # Use a shorter temp directory for pak installations, due to filename
      # length issues on Windows. https://github.com/r-lib/pak/issues/252
      - name: Windows temp dir
        if: runner.os == 'Windows'
        run: |
          New-Item -Path "C:\" -Name "tmp" -ItemType Directory
          echo "TMPDIR=c:\tmp" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Install dependencies
        shell: Rscript {0}
        run: |
          pak::local_install_dev_deps(upgrade = TRUE)
          pak::pkg_install("rcmdcheck")

      - name: Check
        shell: Rscript {0}
        run: |
          rcmdcheck::rcmdcheck(args = '--no-manual', error_on = 'note', check_dir = 'check')

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.config.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Test coverage
        if: false
        # if: matrix.config.os == 'macOS-latest' && matrix.config.r == '3.6'
        run: >
          Rscript
          -e 'covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")'



  deploy:
    if: github.repository == 'rstudio/learnr' && github.event_name == 'push'
    runs-on: ${{ matrix.config.os }}

    name: "Deploy to shinyapps.io"
    needs: [R-CMD-check]

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-18.04, r: 'release', rspm: "https://packagemanager.rstudio.com/all/__linux__/bionic/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}

    steps:
      - uses: actions/checkout@v1

      - uses: r-lib/actions/setup-r@master
        id: install-r
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Install pak and query dependencies
        shell: Rscript {0}
        run: |
          install.packages("pak", repos = "https://r-lib.github.io/p/pak/dev/")
          saveRDS(pak::pkg_deps_tree("local::.", dependencies = TRUE), ".github/r-depends.rds")

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ matrix.config.os }}-${{ steps.install-r.outputs.installed-r-version }}-1-${{ hashFiles('.github/r-depends.rds') }}
          restore-keys: ${{ matrix.config.os }}-${{ steps.install-r.outputs.installed-r-version }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        shell: Rscript {0}
        run: |
          pak::local_system_requirements(execute = TRUE)

      - name: Install libcurl
        if: runner.os == 'Linux'
        run: |
          sudo -s apt-get update
          sudo -s apt-get install -y libcurl4-openssl-dev

      # Use a shorter temp directory for pak installations, due to filename
      # length issues on Windows. https://github.com/r-lib/pak/issues/252
      - name: Windows temp dir
        if: runner.os == 'Windows'
        run: |
          New-Item -Path "C:\" -Name "tmp" -ItemType Directory
          echo "TMPDIR=c:\tmp" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Install dependencies
        shell: Rscript {0}
        run: |
          pak::local_install_dev_deps(upgrade = TRUE)
          pak::pkg_install("sortable")
          pak::pkg_install("reticulate")

      - name: Deploy
        env:
          SHINYAPPS_NAME: ${{ secrets.SHINYAPPS_NAME }}
          SHINYAPPS_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
          SHINYAPPS_SECRET: ${{ secrets.SHINYAPPS_SECRET }}
        run: >
          Rscript 'tools/deploy_tutorials_on_ci.R'
