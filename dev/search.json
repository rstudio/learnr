[{"path":"https://pkgs.rstudio.com/learnr/dev/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing","title":"Contributing","text":"welcome contributions learnr package! submit contribution: Fork repository make changes. Ensure signed individual corporate contributor agreement appropriate. can send signed copy contribute@rstudio.com, cc’ing barret@rstudio.com. Submit pull request. generally merge pull requests update included web libraries (Bootstrap jQuery) difficult us verify update done correctly; prefer update libraries .","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://pkgs.rstudio.com/learnr/dev/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright 2023 Posit Software, PBC  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://pkgs.rstudio.com/learnr/dev/PULL_REQUEST_TEMPLATE.html","id":"pull-request","dir":"","previous_headings":"","what":"Pull Request","title":"NA","text":"submit pull request, please following: Add entry NEWS concisely describing changed. Add unit tests tests/testthat directory. Run Build->Check Package RStudio IDE, devtools::check(), make sure change add messages, warnings, errors. things make easier learnr development team evaluate pull request. Even , may still decide modify code even merge . Factors may prevent us merging pull request include: breaking backward compatibility adding feature consider relevant learnr hard understand hard maintain future computationally expensive intuitive people use try responsive provide feedback case decide merge pull request.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/PULL_REQUEST_TEMPLATE.html","id":"minimal-reproducible-example","dir":"","previous_headings":"","what":"Minimal reproducible example","title":"NA","text":"Finally, please include minimal reprex. goal reprex make easy possible recreate problem can fix . ’ve never heard reprex , start reading https://github.com/jennybc/reprex#---reprex, follow advice page. include session info unless ’s explicitly asked , ’ve used reprex::reprex(..., si = TRUE) hide away. Due nature learnr interactive, reprex possible, please include minimal learnr tutorial RMarkdown file can called rmarkdown::run produce error display error fixed. Delete instructions read . Brief description original problem approach behind solution. PR task list: - [ ] Update NEWS - [ ] Add tests (possible) - [ ] Update documentation devtools::document()","code":"reprex::reprex({   library(learnr)   # insert minimal reprex here }) # insert reprex here"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/examples.html","id":"complete-tutorials","dir":"Articles","previous_headings":"","what":"Complete Tutorials","title":"learnr Tutorial Examples","text":"tutorials designed showcase features learnr package — teach learners use R! Try working tutorials get sense look feel learnr tutorial. check source code see tutorials made! tutorial featuring videos interactive questions guide new R user installation set everything need get started R. example tutorial teaching common data transformation: filtering rows data frame dplyr::filter(). example tutorial learners introduced dplyr::summarise(). Along way, learners also gain practice pipe operator, %>%, dplyr::group_by().","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/examples.html","id":"demo-tutorials","dir":"Articles","previous_headings":"","what":"Demo Tutorials","title":"learnr Tutorial Examples","text":"’s lot learnr can . tutorials showcase specific learnr features show possibilities build packages designed work R Markdown learnr. brief introduction types interactive questions can use learnr tutorial learnr::question() learnr::quiz() functions. learnr tutorials can even used slides! example tutorial short presentation showcases interactive exercise produces interactive visualizations htmlwidgets. can use learnr teach students work databases using interactive SQL exercises. example, describe create SQL exercises using gradethis package check student's query. sortable package allows create custom HTML widgets drag--drop capabilities can even use learnr tutorials. tutorial shows possible sortable add drag--drop questions tutorials.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/examples.html","id":"community-showcase","dir":"Articles","previous_headings":"","what":"Community Showcase","title":"learnr Tutorial Examples","text":"learnr’s community built excellent tutorials resources learning data science programming. just highlights. (Please suggest favorite learnr resources.) Department Statistical Sciences (DoSS) toolkit free series open source online modules written undergraduates, fellow students public can use learn essentials R. Learn tidymodels browser locally RStudio IDE! package contains learnr tutorials based Quantitative Social Science: Introduction Kosuke Imai Princeton University Press. betweenthepipes R package two tutorials, useful learning tidyverse basics hockey data. growing collection interactive learnr tutorials learning spatial data analytics making African maps. RTLedu contains learnr tutorials accompany RTL R package @risktoollib.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Interactive Exercises","text":"Exercises interactive R code chunks allow readers directly execute R code see results.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"exercise-options","dir":"Articles","previous_headings":"Overview","what":"Exercise Options","title":"Interactive Exercises","text":"many options associated tutorial exercises (described detail ): Note options can specified either globally per-chunk. example, following code sets global default options using setup chunk also sets local options addition chunk:","code":"```{r setup, include=FALSE} library(learnr) tutorial_options(exercise.timelimit = 60) ```  ```{r addition, exercise=TRUE, exercise.timelimit = 60} 1 + 1 ```"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"exercise-support-chunks","dir":"Articles","previous_headings":"Overview","what":"Exercise Support Chunks","title":"Interactive Exercises","text":"also specialized chunks can used exercise chunk. chunks linked together Exercise -setup chunks enable execute code setup environment immediately prior executing submitted code. Exercise -solution chunks enable provide solution exercise can optionally viewed users tutorial. Exercise -hint chunks used provide series hints help user progress exercise. Exercise -check, -code-check, -error-check chunks used provide logic checking user’s attempt solve exercise. Finally, exercise -tests chunks can store test cases testing code related exercise. use special chunks also described detail .","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"exercise-evaluation","dir":"Articles","previous_headings":"","what":"Exercise Evaluation","title":"Interactive Exercises","text":"default, exercise code chunks pre-evaluated (.e initial output displayed ). However, cases may want show initial exercise output (especially exercises like ones user asked modify code rather write new code scratch). can arrange exercise pre-evaluated (output shown) using exercise.eval chunk option. option can also set either globally per-chunk:","code":"```{r setup, include=FALSE} library(learnr) tutorial_options(exercise.eval = TRUE) ```  ```{r filter, exercise=TRUE, exercise.eval=FALSE} # Change the filter to select February rather than January filter(nycflights, month == 1) ```"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"exercise-setup","dir":"Articles","previous_headings":"","what":"Exercise Setup","title":"Interactive Exercises","text":"Code chunks exercise=TRUE evaluated within standalone environments. means don’t access previous computations within document. constraint imposed users can execute exercises order (.e. correct execution one exercise never depends completion prior exercise).","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"exercise-setup-chunks","dir":"Articles","previous_headings":"Exercise Setup","what":"Exercise Setup Chunks","title":"Interactive Exercises","text":"can arrange setup code run evaluation exercise ensure environment primed correctly. three ways provide setup code exercise: Add code global setup chunk Create shared setup chunk Create exercise-specific setup chunk described detail . Note may also chain setup chunks, particularly helpful exercises build upon .","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"setup-global","dir":"Articles","previous_headings":"Exercise Setup > Exercise Setup Chunks","what":"Add code to the global setup chunk","title":"Interactive Exercises","text":"Code global setup chunk run startup tutorial shared exercises within tutorial. example:","code":"```{r setup, include=FALSE} nycflights"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"setup-shared","dir":"Articles","previous_headings":"Exercise Setup > Exercise Setup Chunks","what":"Create a shared setup chunk","title":"Interactive Exercises","text":"don’t want rely global setup rather create setup code ’s used handful exercises can use exercise.setup chunk attribute provide label another chunk perform setup tasks. illustrate, ’ll re-write previous example use shared setup chunk named prepare-flights:","code":"```{r prepare-flights} nycflights"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"setup-exercise-specific","dir":"Articles","previous_headings":"Exercise Setup > Exercise Setup Chunks","what":"Create an exercise-specific -setup chunk","title":"Interactive Exercises","text":"learnr automatically associate chunk label format <exercise>-setup setup chunk specifically associated <exercise>, <exercise> replaced label exercise chunk. example, filter-setup chunk used setup chunk filter exercise:","code":"```{r filter-setup} nycflights"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"setup-chained","dir":"Articles","previous_headings":"Exercise Setup > Exercise Setup Chunks","what":"Chained setup chunks","title":"Interactive Exercises","text":"may also chain setup chunks setup chunk inherits parent setup chunk using exercise.setup chunk option. (Note: must use exercise.setup chaining. rely -setup suffix labeling scheme.) learnr keep following trail exercise.setup chunks chunks found. demonstrate, can convert first exercise examples another setup chunk called filtered-flights exercise.setup=prepare-flights. now filter data store can referenced inside arrange exercise: can chain use exercise chunks setup chunk chain, keep mind code appears R Markdown source used serve setup code, user input. example, turned filtered-flights back exercise, pre-filled code used setup arrange exercise use setup:","code":"```{r prepare-flights} nycflights ```{r prepare-flights} nycflights"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"using-files-in-exercises","dir":"Articles","previous_headings":"Exercise Setup","what":"Using Files in Exercises","title":"Interactive Exercises","text":"Occasionally, may write exercise requires users interact files disk, data files .csv .rds format. learnr look folder named data/ directory tutorial source , present, make directory available users exercises tutorial. ensure consistency evaluation user’s code, users interact temporary copy original directory. way, users overwrite delete original files. Additionally, exercise, directory always called data/. three ways authors can include files use exercises: Store files data/ directory directory tutorial. Use setup chunk download write files data/ directory. Use tutorial.data_dir global option TUTORIAL_DATA_DIR environment variables specify path data directory. example , global setup chunk used write data/flights_jan.csv users asked load file read_csv().","code":"```{r setup} library(tidyverse)  flights_jan %    filter(month == 2)    dir.create(\"data\",  showWarnings = FALSE) write_csv(flights_jan, \"data/flights_jan.csv\") ```  ```{r read-flights, exercise=TRUE} read_csv(\"data/flights_jan.csv\") ```"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"hints-and-solutions","dir":"Articles","previous_headings":"","what":"Hints and Solutions","title":"Interactive Exercises","text":"can optionally provide hint solution exercise can optionally displayed users. Hints can based either R code snippets custom markdown/HTML content.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"r-code-hints","dir":"Articles","previous_headings":"Hints and Solutions","what":"R Code Hints","title":"Interactive Exercises","text":"create hint solution based R code simply create new code chunk “-hint” “-solution” chunk label suffix. example: “Hint” “Solution” button added left side exercise header region:","code":"```{r filter, exercise=TRUE} # Change the filter to select February rather than January nycflights"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"markdown-hints","dir":"Articles","previous_headings":"Hints and Solutions","what":"Markdown Hints","title":"Interactive Exercises","text":"create hint based custom markdown content simply add <div> tag id attribute marks hint exercise (e.g. “filter-hint”). example: content within <div> displayed underneath R code editor exercise whenever user presses “Hint” button.","code":"```{r filter, exercise=TRUE} # filter the flights table to include only United and American flights flights ```   **Hint:** You may want to use the dplyr `filter` function."},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"multiple-hints","dir":"Articles","previous_headings":"Hints and Solutions","what":"Multiple Hints","title":"Interactive Exercises","text":"R code hints can provide sequence hints reveal progressively solution desired user. create sequence indexed hint chunks (e.g. “-hint-1”, “-hint-2,”-hint-3”, etc.) exercise chunk. example:","code":"```{r filter, exercise=TRUE} # filter the flights table to include only United and American flights flights ```  ```{r filter-hint-1} filter(flights, ...) ```  ```{r filter-hint-2} filter(flights, UniqueCarrier==\"AA\") ```  ```{r filter-hint-3} filter(flights, UniqueCarrier==\"AA\" | UniqueCarrier==\"UA\") ```"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"hiding-solutions","dir":"Articles","previous_headings":"Hints and Solutions","what":"Hiding Solutions","title":"Interactive Exercises","text":"default, exercise solution made available user “Solution” “Hint” button (hints appear first). prefer reveal solution exercise, can disable revealing solution adding exercise.reveal_solution = FALSE chunk options either exercise corresponding *-solution chunk. can also set option globally global setup chunk tutorial_options(). set way, chunk-level option take precedence global option can choose always reveal hide solution particular exercise. current default reveal exercise solutions, future version learnr default behavior change hide solutions.","code":"```{r filter, exercise=TRUE} # filter the flights table to include only United and American flights flights ```  ```{r filter-hint-1} filter(flights, ...) ```  ```{r filter-hint-2} filter(flights, UniqueCarrier==\"AA\") ```  ```{r filter-solution, exercise.reveal_solution = FALSE} filter(flights, UniqueCarrier==\"AA\" | UniqueCarrier==\"UA\") ```"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"progressive-reveal","dir":"Articles","previous_headings":"","what":"Progressive Reveal","title":"Interactive Exercises","text":"might want users tutorials see one sub-topic time work material (can helpful reduce distractions maintain focus current task). specify progressive option Level 3 headings (###) revealed progressively. example: can also specify option per topic basis using data-progressive attribute. example, following code enables progressive rendering single topic: can also use data-progressive=FALSE disable progressive rendering individual topic global progressive option TRUE. Progressive reveal provides easy way cue exercises one time: place exercise Level 3 header (###). can useful second exercises builds first, giving away answer first. Note feature available using learnr::tutorial R Markdown format (custom formats may internal mechanisms progressive reveal).","code":"--- title: \"Hello, Tutorial!\" output:    learnr::tutorial:     progressive: true runtime: shiny_prerendered --- ## Topic 1  {data-progressive=TRUE}"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"exercise-skipping","dir":"Articles","previous_headings":"Progressive Reveal","what":"Exercise Skipping","title":"Interactive Exercises","text":"progressive option set true, tutorial require students complete exercises sub-section advancing next sub-section. may want allow users tutorials skip exercises can’t quite figure . might especially true want users able optionally see next exercise even haven’t completed prior one. specify allow_skip option students able advance sub-section without completing exercises. example: can also specify option per sub-topic basis using data-allow-skip attribute. example, following code enables exercise skipping within single sub-topic: can also use data-allow-skip=FALSE disable exercise skipping rendering individual sub-topic global allow-skip option TRUE.","code":"--- title: \"Hello, Tutorial!\" output:    learnr::tutorial:     progressive: true     allow_skip: true runtime: shiny_prerendered --- ### Exercise 2 {data-allow-skip=TRUE}"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"exercise-checking","dir":"Articles","previous_headings":"","what":"Exercise Checking","title":"Interactive Exercises","text":"learnr provides allows full control feedback provided exercise submissions via exercise.checker tutorial_options(). ’ll eventually cover implement custom exercise.checker, sake demonstration, section uses gradethis’s approach exercise checking, doesn’t require knowledge exercise.checker (NOTE: gradethis still work--progress. may want consider alternatives checkr). use gradethis’s approach exercise checking inside learnr, just call gradethis_setup() setup chunk, set tutorial_options(exercise.checker = gradethis::grade_learnr) (among things).","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"checking-results","dir":"Articles","previous_headings":"Exercise Checking","what":"Checking Results","title":"Interactive Exercises","text":"Checking exercise results may done *-check chunk. gradethis setup, results can graded grade_result(), like : exercise *-check chunk provided, learnr provides additional “Submit Answer” button, allows users experiment various answers formally submitting answer:","code":"```{r setup, include=FALSE} library(learnr) gradethis::gradethis_setup() ```  * Submit `1+1` to receive a correct grade.  ```{r exercise1, exercise = TRUE}  ```   ```{r exercise1-check} grade_result(   pass_if(~identical(.result, 2)) ) ```"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"checking-code","dir":"Articles","previous_headings":"Exercise Checking","what":"Checking Code","title":"Interactive Exercises","text":"Checking exercise code may done *-code-check chunk. gradethis setup, supply *-solution chunk call grade_code() inside *-code-check, get detection differences R syntax submitted exercise code solution code.  ’s worth noting , *-code-check chunk supplied, check done prior evaluation exercise submission, meaning *-code-check chunk returns feedback, feedback displayed, exercise code evaluated, result check performed.","code":"```{r setup, include=FALSE} library(learnr) gradethis::gradethis_setup() ```  * Submit `1+1` to receive a correct grade.  ```{r exercise1, exercise = TRUE}  ```  ```{r exercise1-solution} 1+1 ```   ```{r exercise1-code-check} grade_code() ```"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"checking-blanks","dir":"Articles","previous_headings":"Exercise Checking","what":"Checking Blanks","title":"Interactive Exercises","text":"Occasionally, may include blanks pre-filled code exercise prompts — sections code exercise prompt students fill . default, learnr detect sequences three underscores, e.g. ____ blanks, regardless appear user’s submitted code.  can choose blank pattern setting exercise.blanks chunk option regular expression identifies blanks. may also set exercise.blanks = TRUE use default learnr blank pattern, exercise.blanks = FALSE skip blank checking altogether. Globally tutorial_options() can used set value argument exercises. Submitted code blanks still evaluated, exercise checks performed. lets student see output code—may produce valid result—still draws student’s attention code needs completed.","code":"Fill in the blank to create an expression that adds up to **4**.  ```{r blank, exercise = TRUE, exercise.blanks = \"___+\"} 1 + ____ ```  ```{r blank-solution} 1 + 3 ```"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"checking-errors","dir":"Articles","previous_headings":"Exercise Checking","what":"Checking Errors","title":"Interactive Exercises","text":"event exercise submission generates error, checking code (result, error condition) may done either *-error-check chunk global exercise.error.check.code option. *-error-check chunk provided, must also include *-check chunk, typically provide feedback case submission doesn’t generate error. gradethis setup, exercise.error.check.code set grade_code(). means , default, users receive intelligent feedback submission generates error using *-solution chunk, one provided.  learn grading exercises gradethis, see grading demo (gradethis::gradethis_demo()).","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"custom-checking","dir":"Articles","previous_headings":"Exercise Checking","what":"Custom Checking","title":"Interactive Exercises","text":"need custom exercise checking logic isn’t already provided grading packages like gradethis, may want write exercise.checker function. function called exercise submission whenever *-check *-code-check chunks exist. called, function receives information learnr knows exercise time checking, including user_code, solution_code, check_code, exercise environments, last_value (), stage checking. Checking can performed three different time points, values supplied can differ depending time point: stage \"code_check\". check_code contains *-code-check chunk code. envir_result, evaluate_result, last_value NULL. stage \"error_check\". check_code contains *-error-check chunk code. last_value contains error condition object. stage \"check\". check_code contains *-check chunk code. last_value contains last printed value. , one stages, feedback provided, exercise.checker return R list , least, correct flag feedback message: rough sketch one might implement exercise.checker function. See table full description arguments supplied exercise.checker.","code":"```r custom_checker"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"test-code-or-cases","dir":"Articles","previous_headings":"Exercise Checking","what":"Test Code or Cases","title":"Interactive Exercises","text":"cases, may want record test cases — examples alternative solutions, common mistakes made students, edge cases missed checking code, etc. can place test code *-tests chunk. preserved tutorial’s R Markdown source stored learnr’s internal data exercise, won’t appear tutorial text. learnr doesn’t currently provide mechanism testing exercises, support exercise testing roadmap future development.","code":"```{r addition, exercise = TRUE}  ```  ```{r addition-solution} 1 + 1 ```  ```{r addition-tests} 1 + 1  # one plus two ---- 1 + 2  # one plus three ---- 1 + 3  # one equals three ---- 1 = 3  # 2 minus one ---- 2 - 1 ```"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"exercise-caption","dir":"Articles","previous_headings":"","what":"Exercise Caption","title":"Interactive Exercises","text":"default exercises displayed caption “Code”. However, cases may want either custom per-chunk caption generic caption different connotation (e.g. “Exercise” “Sandbox”). example:","code":"```{r setup, include=FALSE} library(learnr) tutorial_options(exercise.cap = \"Sandbox\") ```"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"code-assistance","dir":"Articles","previous_headings":"","what":"Code Assistance","title":"Interactive Exercises","text":"default, code completions automatically provided users type within exercise editor:  can optionally disable code completion (either globally per-chunk basis) using exercise.completion option. example, following illustrates turning completions globally enabling individual chunk: Similarly, simple code diagnostics can also provided, inform users errors R code written exercise editors. Diagnostics can controlled (either globally per-chunk basis) using exercise.diagnostics option.","code":"```{r setup, include=FALSE} library(learnr) tutorial_options(exercise.completion = FALSE) ```  ```{r histogram-plot, exercise=TRUE, exercise.completion=TRUE}  ```"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"editor-size","dir":"Articles","previous_headings":"","what":"Editor Size","title":"Interactive Exercises","text":"default, size exercise editor provided users match number lines code chunk (minimum 2 lines). user adds additional lines course editing editor grow vertically 15 lines, display scrollbar. can also specify number lines explicitly using exercise.lines chunk option (can done per-chunk global basis). example, following chunk specifies exercise code editor 15 lines high:","code":"```{r add-function, exercise=TRUE, exercise.lines=15} # Write a function to add two numbers together add_numbers"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/exercises.html","id":"time-limits","dir":"Articles","previous_headings":"","what":"Time Limits","title":"Interactive Exercises","text":"mediate problem code takes longer expected run can specify exercise.timelimit chunk option alternatively global tutorial.exercise.timelimit option. following demonstrates setting 10 second time limit global option, document level option, chunk level option: Since tutorials highly interactive format general designing exercises take longer 5 10 seconds execute. Correspondingly, default value tutorial.exercise.timelimit otherwise specified 30 seconds.","code":"options(tutorial.exercise.timelimit = 10)  ```{r setup, include=FALSE} tutorial_options(exercise.timelimit = 10) ```  ```{r exercise1, exercise=TRUE, exercise.timelimit=10} ```"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/formats.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Tutorial Formats","text":"learnr package designed used wide variety R Markdown formats. tutorial simply directory containing R Markdown document : Loads learnr package. Includes one interactive components (exercises, quiz questions, etc.). Uses runtime: shiny_prerendered directive YAML header. Uses format inherits html_document_base format marked boostrap_compatible (parameter html_document_base indicates ’s safe inject Booststrap CSS document). means can use learnr html_document, ioslides_presentation, slidy_presentation formats well many others. ’ve shown plenty examples default format, ’s example embedding tutorial within slidy_presentation:  can run live version example :","code":"learnr::run_tutorial(\"slidy\", package = \"learnr\")"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/formats.html","id":"tutorial-format","dir":"Articles","previous_headings":"","what":"Tutorial Format","title":"Tutorial Formats","text":"learnr package includes learnr::tutorial R Markdown format provides default layout behavior (including progress tracking) ’ll likely want use many tutorials. format also includes features progressively revealing sections allowing users optionally skip exercises trouble (features described ). can create new learnr::tutorial document template via New R Markdown dialog RStudio:  benefits using learnr::tutorial format include: appropriate defaults provided various things including figure sizes data frame printing. floating table contents easy navigation sections provided default. Visual adornments added table contents indicating parts tutorial completed. “Start ” button added table contents region allow users clear previous work within tutorial. ’s learnr::tutorial document looks like default:","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/formats.html","id":"custom-formats","dir":"Articles","previous_headings":"","what":"Custom Formats","title":"Tutorial Formats","text":"learnr package exposes JavaScript API can used create new R Markdown formats include progress tracking similar provided learnr::tutorial format. implementation learnr::tutorial format extremely straightforward provides template creating additional new formats via API: tutorial-format.R file includes definition custom R Markdown format function. tutorial-format.js file demonstrates use tutor JavaScript API add progress tracking features default R Markdown floating table contents. inst/rmarkdown/templates/tutorial directory includes files configuration required make format available custom R Markdown template within RStudio IDE.","code":""},{"path":[]},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/learnr.html","id":"installation","dir":"Articles","previous_headings":"Getting Started","what":"Installation","title":"Get Started with learnr","text":"Install latest version learnr GitHub remotes package: can install learnr package CRAN: learnr works best recent version RStudio (v1.0.136 later) include tools easily running previewing tutorials.","code":"# install.packages(\"remotes\") remotes::install_github(\"rstudio/learnr\") install.packages(\"learnr\")"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/learnr.html","id":"creating-a-tutorial","dir":"Articles","previous_headings":"Getting Started","what":"Creating a Tutorial","title":"Get Started with learnr","text":"tutorial just directory contains standard R Markdown document three additional attributes: Loads learnr package, Includes one interactive components (exercises, quiz questions, etc.), Uses runtime: shiny_prerendered directive YAML header, Provides short description top-level description: field YAML header. runtime: shiny_prerendered element included YAML hints underlying implementation tutorials: simply Shiny applications use R Markdown document user-interface rather traditional ui.R file.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/learnr.html","id":"tutorial-format","dir":"Articles","previous_headings":"Getting Started > Creating a Tutorial","what":"Tutorial Format","title":"Get Started with learnr","text":"can use tutorial elements many different R Markdown formats (see article Tutorial Formats details), learnr package also includes custom learnr::tutorial format provides default layout behavior (including progress tracking) ’ll likely want use many tutorials. can create new learnr::tutorial document template via New R Markdown dialog RStudio:  YAML metadata looks like Rmd file uses tutorial format: Note tutorials aren’t just Rmd source file, rather directories contain Rmd source file well supporting files (e.g. figures images). result default behavior create new tutorials within directory.","code":"--- title: \"Hello, Tutorial!\" output: learnr::tutorial runtime: shiny_prerendered description: \"Welcome to learnr tutorials!\" ---"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/learnr.html","id":"chunk-labels","dir":"Articles","previous_headings":"Getting Started > Creating a Tutorial","what":"Chunk Labels","title":"Get Started with learnr","text":"one requirement related R code chunks contain exercises quiz questions: must unique chunk label. example, chunk labeled addition: requirement exists ensure stable identifier associated interactive component. turn makes possible save restore user work well facilitates aggregation reporting responses.","code":"```{r addition, exercise=TRUE} 1 + 1 ```"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/learnr.html","id":"running-tutorials","dir":"Articles","previous_headings":"Getting Started","what":"Running Tutorials","title":"Get Started with learnr","text":"Tutorials Shiny applications run using rmarkdown::run function rather shiny::runApp function. example: tutorial included within R package can also run via learnr::run_tutorial function. example, can run live version “Hello, Tutor” example provided :","code":"rmarkdown::run(\"tutorial.Rmd\") learnr::run_tutorial(\"hello\", package = \"learnr\")"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/learnr.html","id":"tutorial-types","dir":"Articles","previous_headings":"","what":"Tutorial Types","title":"Get Started with learnr","text":"two main types tutorial documents: Tutorials mostly narrative /video content also include runnable code chunks. documents similar vignettes principal goal communicating concepts. interactive tutorial features used allow experimentation reader. Tutorials provide structured learning experience multiple exercises, quiz questions, tailored feedback. first type tutorial course much easier author still useful. documents typically add exercise = TRUE selected code chunks also set exercise.eval = TRUE chunk output visible default. reader can simply look R code move can play reinforce understanding. second type tutorial provides much richer feedback assessment course considerably effort author. primarily interested sort tutorial many features support including exercise hints solutions, automated exercise checkers, multiple choice quizzes custom feedback. straightforward path start first type tutorial (executable chunks pre-evaluated output) move sophisticated assessment feedback time.","code":""},{"path":[]},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/learnr.html","id":"exercises","dir":"Articles","previous_headings":"Interactive Components","what":"Exercises","title":"Get Started with learnr","text":"Exercises interactive R code chunks allow readers directly execute R code see results:  Exercises can include hints solutions well custom checking code provide feedback user answers. Exercises page includes depth discussion exercises various available options behaviors.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/learnr.html","id":"questions","dir":"Articles","previous_headings":"Interactive Components","what":"Questions","title":"Get Started with learnr","text":"can include one multiple-choice quiz questions within tutorial help verify readers understand concepts presented. Questions can either single multiple correct answers. Include question calling question function within R code chunk: ’s question look like within tutorial:  Questions page includes additional information using questions within tutorials.","code":"```{r letter-a, echo=FALSE} question(\"What number is the letter A in the English alphabet?\",   answer(\"8\"),   answer(\"14\"),   answer(\"1\", correct = TRUE),   answer(\"23\") ) ```"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/learnr.html","id":"videos","dir":"Articles","previous_headings":"Interactive Components","what":"Videos","title":"Get Started with learnr","text":"can include videos published either YouTube Vimeo within tutorial using standard markdown image syntax. Note valid YouTube Vimeo URL work. example, following valid examples video embedding:","code":"![](https://youtu.be/zNzZ1PfUDNk) ![](https://www.youtube.com/watch?v=zNzZ1PfUDNk)   ![](https://vimeo.com/142172484) ![](https://player.vimeo.com/video/142172484)"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/learnr.html","id":"video-size","dir":"Articles","previous_headings":"Interactive Components > Videos","what":"Video Size","title":"Get Started with learnr","text":"Videos responsively displayed 100% container’s width (height automatically determined based 16x9 aspect ratio). can change behavior adding attributes markdown reference video. can specify alternate percentage video’s width alternate fixed width height. example:","code":"![](https://youtu.be/zNzZ1PfUDNk){width=\"90%\"}  ![](https://youtu.be/zNzZ1PfUDNk){width=\"560\" height=\"315\"}"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/learnr.html","id":"shiny-components","dir":"Articles","previous_headings":"Interactive Components","what":"Shiny Components","title":"Get Started with learnr","text":"learnr package uses runtime: shiny_prerendered turn regular R Markdown documents live tutorials. Since tutorials Shiny applications core, ’s also possible add forms interactivity using Shiny (e.g. teaching statistical concept interactively). basic technique add context=\"server\" attribute code chunks part Shiny server opposed UI definition. example: can learn reading Prerendered Shiny Documents article R Markdown website.","code":"```{r, echo=FALSE} sliderInput(\"bins\", \"Number of bins:\", min = 1, max = 50, value = 30) plotOutput(\"distPlot\") ```  ```{r, context=\"server\"} output$distPlot"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/learnr.html","id":"external-resources","dir":"Articles","previous_headings":"","what":"External Resources","title":"Get Started with learnr","text":"may wish include external resources (images, videos, CSS, etc.) within tutorial documents. Since tutorial deployed Shiny application, need ensure resources placed within one several directories reachable Shiny web server: reason files within directory main Rmd can’t referenced within web document may want files within tutorial’s directory downloadable end users. restricting files can referenced directories can control files downloadable .","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/learnr.html","id":"preserving-work","dir":"Articles","previous_headings":"","what":"Preserving Work","title":"Get Started with learnr","text":"Tutorials store various pieces work done within (exercise input output, answers questions, etc.) automatically restore users revisit . Locally run tutorials store user work local filesystem tutorials run server store user work within storage provided end user’s web browser.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/learnr.html","id":"managing-changes","dir":"Articles","previous_headings":"Preserving Work","what":"Managing Changes","title":"Get Started with learnr","text":"One thing keep mind preserved work tutorial changes significantly work restored may longer match well contents tutorial! (e.g. nature content exercises /questions may changed). Tutorial work restored using R chunk label given exercise question, chunk changes significantly can invalidate stored work changing chunk label.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/learnr.html","id":"tutorial-identifiers","dir":"Articles","previous_headings":"Preserving Work > Managing Changes","what":"Tutorial Identifiers","title":"Get Started with learnr","text":"can also invalidate stored work changing ID version tutorial. publish tutorials within R packages version automatically derived version package. can also explicitly set ID version tutorial using YAML metadata, example: Note use reversed domain name tutorial id (com.example.tutorials.-first-tutorial). ensure globally unique deployed server tutorials. also choose use Universally Unique Identifier (UUID) created using uuid package. change ID version tutorial stored work associated tutorial invalidated users tutorial start fresh accessing . ’s therefore good practice change version whenever make significant modifications exercises questions within tutorial (, occurs automatically tutorials within R packages long version R package changed).","code":"--- title: \"Hello, Tutorial!\" tutorial:   id: \"com.example.tutorials.my-first-tutorial\"   version: 2.1 output: learnr::tutorial runtime: shiny_prerendered ---"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/learnr.html","id":"publishing","dir":"Articles","previous_headings":"","what":"Publishing","title":"Get Started with learnr","text":"Tutorials can published ways Shiny applications can, including running locally end-user’s machine running Shiny Server hosting service like shinyapps.io. straightforward way deploy tutorial include within R package users run directly via learnr::run_tutorial function. Publishing page includes -depth discussion various publishing options well special considerations around resources, concurrent usage, security come play deploying tutorials server.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/multilang.html","id":"choosing-a-tutorials-language","dir":"Articles","previous_headings":"","what":"Choosing a Tutorial’s Language","title":"Internationalization","text":"change language UI element, can use following parameter YAML: Currently, 11 language translations supported: en English (default) fr French / Français es Spanish / Español pt Portuguese tr Turkish eu Basque de German ko Korean zh Chinese pl Polish Norwegian Note \"\" needs quoted reserved word YAML.","code":"output:   learnr::tutorial:     language: fr"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/multilang.html","id":"customizable-ui-elements","dir":"Articles","previous_headings":"","what":"Customizable UI elements:","title":"Internationalization","text":"many elements whose language can translated customized, identified key. Note need customize keys, UI fall back default tutorial language keys specifically customized. keys organized 2 groups: button text.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/multilang.html","id":"buttons","dir":"Articles","previous_headings":"Customizable UI elements:","what":"Buttons","title":"Internationalization","text":"following keys available translating button text:","code":"button:   runcode: Run Code   runcodetitle: $t(button.runcode) ({{kbd}})   hint: Hint   hint_plural: Hints   hinttitle: $t(button.hint)   hintnext: Next Hint   hintprev: Previous Hint   solution: Solution   solutiontitle: $t(button.solution)   copyclipboard: Copy to Clipboard   startover: Start Over   startovertitle: $t(button.startover)   continue: Continue   submitanswer: Submit Answer   submitanswertitle: $t(button.submitanswer)   previoustopic: Previous Topic   nexttopic: Next Topic   questionsubmit: $t(button.submitanswer)   questiontryagain: Try Again"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/multilang.html","id":"text","dir":"Articles","previous_headings":"Customizable UI elements:","what":"Text","title":"Internationalization","text":"following keys available translating text elements:","code":"text:   startover: Start Over   areyousure: Are you sure you want to start over? (All exercise progress will be reset)   youmustcomplete: You must complete the   exercise: exercise   exercise_plural: exercises   inthissection: in this section before continuing.   code: Code   enginecap: {{engine}} $t(text.code)   quiz: Quiz   blank: blank   blank_plural: blanks   exercisecontainsblank: This exercise contains {{count}} $t(text.blank).   pleasereplaceblank: Please replace {{blank}} with valid code.   unparsable: It looks like this might not be valid R code. R cannot determine how to turn your text into a complete command. You may have forgotten to fill in a blank, to remove an underscore, to include a comma between arguments, or to close an opening <code>&quot;<\/code>, <code>'<\/code>, <code>(<\/code> or <code>{<\/code> with a matching <code>&quot;<\/code>, <code>'<\/code>, <code>)<\/code> or <code>}<\/code>.    unparsablequotes: <p>It looks like your R code contains specially formatted quotation marks or &quot;curly&quot; quotes (<code>{{character}}<\/code>) around character strings, making your code invalid. R requires character values to be contained in straight quotation marks (<code>&quot;<\/code> or <code>'<\/code>).<\/p> {{code}} <p>Don't worry, this is a common source of errors when you copy code from another app that applies its own formatting to text. You can try replacing the code on that line with the following. There may be other places that need to be fixed, too.<\/p> {{suggestion}}    unparsableunicode: <p>It looks like your R code contains an unexpected special character (<code>{{character}}<\/code>) that makes your code invalid.<\/p> {{code}} <p>Sometimes your code may contain a special character that looks like a regular character, especially if you copy and paste the code from another app. Try deleting the special character from your code and retyping it manually.<\/p>    unparsableunicodesuggestion: <p>It looks like your R code contains an unexpected special character (<code>{{character}}<\/code>) that makes your code invalid.<\/p> {{code}} <p>Sometimes your code may contain a special character that looks like a regular character, especially if you copy and paste the code from another app. You can try replacing the code on that line with the following. There may be other places that need to be fixed, too.<\/p> {{suggestion}}    and: and   or: or   listcomma: ,    oxfordcomma: ,"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/multilang.html","id":"format-of-language-option-in-yaml-header","dir":"Articles","previous_headings":"","what":"Format of language Option in YAML Header:","title":"Internationalization","text":"several ways can use language option choose language translation customize phrasing used particular language.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/multilang.html","id":"default-language","dir":"Articles","previous_headings":"Format of language Option in YAML Header:","what":"Default Language","title":"Internationalization","text":"Chose default language tutorial. learnr currently provides complete translations \"en\", \"fr\", \"es\", \"pt\", \"tr\", \"eu\", \"de\", \"ko\", \"zh\", \"pl\", \"\". translation need available use default language, particular providing custom translation language without available complete translation. want change default language, use: also providing language customizations, first language list customizations default language.","code":"language: \"fr\""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/multilang.html","id":"customizing-a-single-language","dir":"Articles","previous_headings":"Format of language Option in YAML Header:","what":"Customizing a Single Language","title":"Internationalization","text":"customize displayed text single language, use following format. format customization applied English translation, also default language tutorial.","code":"language:   en:     button:       runcode: Run!     text:       startover: Restart!"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/multilang.html","id":"customizing-multiple-languages","dir":"Articles","previous_headings":"Format of language Option in YAML Header:","what":"Customizing Multiple Languages","title":"Internationalization","text":"provide custom display text multiple languages, provide list containing button /text custom labels. example , default tutorial language Spanish (es). Note first language customizations used rendered tutorial. future, may extend multi-language features learnr accommodate dynamic localization.","code":"language:   es:     button:       runcode: Ejecutar   en:     button:       runcode: Run!     text:       startover: Restart!"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/multilang.html","id":"store-customizations-in-a-json-file","dir":"Articles","previous_headings":"Format of language Option in YAML Header:","what":"Store Customizations in a JSON File","title":"Internationalization","text":"intend reuse custom language repeatedly, may helpful store custom language parameters JSON file simply import file. case, can set language code item path single JSON file, written structure YAML. example, write Spanish language customizations tutorial_es.json following R code: load customizations file referencing YAML header. Similarly, can store entire language list JSON file provide path JSON file language key. R code writes custom text en es languages custom_language.json, reference YAML header:","code":"jsonlite::write_json(   list(     button = list(runcode = \"Ejecutar\"),     text = list(startover = \"Empezar de nuevo\")   ),   path = \"tutorial_es.json\",   auto_unbox = TRUE ) language:   es: tutorial_es.json jsonlite::write_json(   list(     en = list(       button = list(runcode = \"Run the code\"),       text = list(startover = \"Restart the tutorial\")     ),     es = list(       button = list(runcode = \"Ejecutar\"),       text = list(startover = \"Empezar de nuevo\")     )   ),   path = \"custom_language.json\",   auto_unbox = TRUE ) language: custom_language.json"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/multilang.html","id":"complete-translations","dir":"Articles","previous_headings":"","what":"Complete Translations","title":"Internationalization","text":"Complete translations provided internal function i18n_translations(). contribute complete translation language currently provided learnr, please submit pull request github.com/rstudio/learnr updating list data-raw/i18n_translations.yml, following format described file. Note language available inside alert boxes learnr, ’ll need set language one language codes used bootbox1. language available bootbox, buttons default English.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/publishing.html","id":"r-package","dir":"Articles","previous_headings":"","what":"R Package","title":"Publishing Basics","text":"convenient way publish tutorials within R packages. Tutorials included within R packages can run via learnr::run_tutorial function. example, following functions runs “hello” “slidy” sample tutorials built learnr package: bundle tutorial R package make available running via run_tutorial function : Create tutorials directory within inst sub-directory package create directory tutorial (e.g. inst/tutorials/hello, inst/tutorials/slidy, etc.). Add .Rmd associated tutorial directory. (may see ..._files/ directory .html file periodically get generated adjacent .Rmd tutorial. can safely ignore, delete, exclude package version control. temporary artifacts produced rendering tutorial specific system aren’t likely portable environments.) ’ve done users can run tutorial follows (note sure install learnr package attempting run tutorial): Users simply install learnr directly running tutorial, example:","code":"learnr::run_tutorial(\"hello\", package = \"learnr\") learnr::run_tutorial(\"slidy\", package = \"learnr\") install.packages(\"learnr\") learnr::run_tutorial(\"introduction\", package = \"mypackage\")"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/publishing.html","id":"exercise-checkers","dir":"Articles","previous_headings":"R Package","what":"Exercise Checkers","title":"Publishing Basics","text":"Note tutorial performs exercise checking via external package sure add package use checking Imports dependency package ’s installed automatically along package. Note ’s likely learnr package eventually include depend another package provides checking functions. time though explicit installation external checking packages requirement.","code":""},{"path":[]},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/publishing.html","id":"rstudio-connect-and-shinyapps-io","dir":"Articles","previous_headings":"Tutorial deployment","what":"RStudio Connect and shinyapps.io","title":"Publishing Basics","text":"can also deploy tutorials server ’d deploy Shiny application. several ways , two : Publish shinyapps.io cloud service. Publish RStudio Connect server. methods, can use RStudio IDE’s integrated one-click publishing publish directly desktop:","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/publishing.html","id":"shiny-server-open-source-and-pro-versions","dir":"Articles","previous_headings":"Tutorial deployment","what":"Shiny Server (Open Source and Pro versions)","title":"Publishing Basics","text":"third way publishing tutorial serve .Rmd document hosted directory Shiny Server. Shiny Server fully supports interactive R Markdown documents. take advantage capability, need make sure rmarkdown installed available users. can running following command: hosted directory include app.R server.R file, Shiny Server look see contains .Rmd files. , Shiny Server host directory “R Markdown” mode using rmarkdown::run(). Particular .Rmd files can accessed referencing full path including filename, e.g., http://myserver.org/mydocs/hello.Rmd. (Note need finish url .Rmd, .html). request made directory rather particular .Rmd file, Shiny Server attempt serve file index.Rmd. file exist, user get error alerting file available.","code":"sudo su - -c \"R -e \\\"install.packages('rmarkdown')\\\"\""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/publishing.html","id":"resource-usage","dir":"Articles","previous_headings":"Tutorial deployment","what":"Resource Usage","title":"Publishing Basics","text":"Since users can execute arbitrary R code within tutorial, code can also consume arbitrary resources time! (e.g. users create infinite loop allocate available memory machine). limit time taken execution exercises can use exercise.timelimit option. see documentation Exercise Time Limits additional details. can use various features RStudio Connect Shiny Server Pro run tutorials within resource /filesystem sandbox. See also section Exercise Execution details customizing evaluation environment exercises.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/publishing.html","id":"security-considerations","dir":"Articles","previous_headings":"Tutorial deployment","what":"Security Considerations","title":"Publishing Basics","text":"Since tutorials enable end users submit R code execution server, need architect deployment tutorials code placed appropriate sandbox. variety ways accomplish including placing entire Shiny Server container Linux namespace limits ’s access filesystem /system resources. Note default running UNIX systems learnr package runs exercise code within forked child process. means ’s possible exercise code modify state parent Shiny Server process. can customize evaluation environment exercises using AppArmor system resource management facilities (see Exercise Execution section details).","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/publishing.html","id":"deployment-dependencies-not-found","dir":"Articles","previous_headings":"Tutorial deployment > Security Considerations","what":"Deployment Dependencies Not Found","title":"Publishing Basics","text":"tutorial contains broken code within exercises users fix, CRAN version packrat find dependencies install tutorial deployed. deploy tutorials containing broken exercise code, install development version packrat. version packrat able find dependencies per R chunk, allowing broken R chunks within tutorial file.","code":"devtools::install_github(\"rstudio/packrat\")"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/publishing.html","id":"hosting-services","dir":"Articles","previous_headings":"","what":"Hosting Services","title":"Publishing Basics","text":"Publishing tutorials server makes instantly accessible user web browser, requires local installation R R packages. also opens possibility collecting data user interactions tutorials (progress made, errors encountered, etc.). learnr package includes variety mechanisms intended make easy deploy within tutorial hosting service, described . writing publicly available tutorial hosting services, however hope change soon, update documentation services become available.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/publishing.html","id":"tutorial-storage","dir":"Articles","previous_headings":"Hosting Services","what":"Tutorial Storage","title":"Publishing Basics","text":"Tutorials save state inputs outputs (e.g. exercise question submissions) automatically restore users revisit tutorial. locally deployed tutorials (e.g. tutorials run within R package) state saved within local filesystem. server deployed tutorials state saved within per-domain storage provided end user’s web browser. benefit saving restoring state per-user basis without notion user authentication identity, however work within single web browser (.e. state won’t restored users accesses tutorial another machine).","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/publishing.html","id":"storage-provider","dir":"Articles","previous_headings":"Hosting Services > Tutorial Storage","what":"Storage Provider","title":"Publishing Basics","text":"Hosting services typically want provide custom implementation storage tutorial state tied tutorial provisioning user identity system. custom storage provider specified assigning R list includes storage functions tutorial.storage global option. example, “-op” storage provider: parameters passed storage provider’s functions follows (note various ID fields can customized hosting provider, see Tutorial Identifiers section details):","code":"options(tutorial.storage = list(    # save an arbitrary R object \"data\" to storage   save_object = function(tutorial_id, tutorial_version, user_id, object_id, data) {      },      # retreive a single R object from storage   get_object = function(tutorial_id, tutorial_version, user_id, object_id) {      NULL    },      # retreive a list of all R objects stored   get_objects = function(tutorial_id, tutorial_version, user_id) {      list()    },      # remove all stored R objects   remove_all_objects = function(tutorial_id, tutorial_version, user_id) {      } )"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/publishing.html","id":"exercise-execution","dir":"Articles","previous_headings":"Hosting Services","what":"Exercise Execution","title":"Publishing Basics","text":"Note default running UNIX systems learnr package runs exercise code within forked child process. means ’s possible exercise code modify state parent Shiny Server process. section describe various ways customizing exercise execution.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/publishing.html","id":"start-and-cleanup-hooks","dir":"Articles","previous_headings":"Hosting Services > Exercise Execution","what":"Start and Cleanup Hooks","title":"Publishing Basics","text":"learnr package can ’s exercise evaluation environment customized using onstart oncleanup hooks. Within hooks can use functions RAppArmor package another package provides interfaces system resource management functions. Using method can apply time limits, resource limits, filesystem limits. steps required use RAppArmor onstart oncleanup hooks: Install configure RAppArmor package described : https://github.com/jeroenooms/RAppArmor#readme Add following line /etc/apparmor.d/rapparmor.d/r-user profile (required default AppArmor profile also support calling pandoc markdown renderer): Define onstart oncleaup hooks setting tutorial.exercise.evaluator.onstart tutorial.exercise.evaluator.oncleanup global options. example: ’d likely set options within Rprofile.site another R source file evaluated prior running tutorial rmarkdown::run.","code":"/usr/lib/rstudio/bin/pandoc/* rix, options(tutorial.exercise.evaluator.onstart = function(pid) {    # import RAppArmor   require(RAppArmor, quietly = TRUE)    # set process group to pid (allows kill of entire subtree in cleanup)   setpgid();    # set nice priority   setpriority(10)    # set rlimits as appropriate   rlimit_nproc(1000)   rlimit_as(1024*1024*1024)    # change to r-user profile (see note above on required edit to r-user)   aa_change_profile(\"r-user\") })  options(tutorial.exercise.evaluator.oncleanup = function(pid) {    # import RAppArmor   require(RAppArmor, quietly = TRUE)    # kill entire process subtree. note that the second call works   # because the call to setpgid above sets our pgid (process group id)   # to our pid (process id)   kill(pid, tools::SIGKILL)   kill(-1 * pid, tools::SIGKILL) })"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/publishing.html","id":"fully-custom-evaluator","dir":"Articles","previous_headings":"Hosting Services > Exercise Execution","what":"Fully Custom Evaluator","title":"Publishing Basics","text":"can replace default exercise evaluation code entirely via tutorial.exercise.evaluator global R option. evaluator R function accepts four arguments: expression evaluate timelimit evaluation serializable representation exercise evaluated session associated request returns list functions (start, completed, result) use execution. two default evaluators (used Windows/MacOS UNIX systems, respectively, ): inline_evaluator — Evaluate exercises inline within main Shiny Server process (default Windows Mac OS systems). forked_evaluator — Evaluate exercises within forked child process (default UNIX systems). can see source code evaluators : https://github.com/rstudio/learnr/blob/main/R/evaluators.R. parameters provided evaluator may expanded future, custom evaluators permit additional arguments yet defined.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/publishing.html","id":"external-evaluator","dir":"Articles","previous_headings":"Hosting Services > Exercise Execution > Fully Custom Evaluator","what":"External Evaluator","title":"Publishing Basics","text":"versions learnr later 0.10.1, also support external_evaluator. evaluator allows exercises executed remote host rather host running Shiny process. can use evaluator specifying tutorial.external.host option setting TUTORIAL_EXTERNAL_EVALUATOR_HOST environment variable. set, learnr submit exercises HTTP specified host. given host expected fulfill OpenAPI specification. words, two HTTP endpoints: POST /learnr/ - Initiate session POST /learnr/<session ID> - Submit exercise run part session","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/publishing.html","id":"events","dir":"Articles","previous_headings":"","what":"Events","title":"Publishing Basics","text":"Learnr event system can used recording information usage, causing code run events occur. part deploying tutorial might want record various user events occur within tutorials (e.g. exercise question submissions, requests hints/solutions, etc.). event system can also used cause arbitrary code run events occur.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/publishing.html","id":"recording-events","dir":"Articles","previous_headings":"Events","what":"Recording Events","title":"Publishing Basics","text":"can capture events using custom event recorder function. function specified via tutorial.event_recorder global option. example, ’s define simple event recorder function prints stdout: following parameters passed event recorder function (note various ID fields can customized hosting provider, see Tutorial Identifiers section details): event parameter one following values: data parameter R list provides additional data varies depending event recorded.","code":"tutorial_event_recorder"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/publishing.html","id":"event-handlers","dir":"Articles","previous_headings":"Events","what":"Event handlers","title":"Publishing Basics","text":"can also useful cause code run event occurs. event_register_handler() function can used . example, cause message printed console \"section_viewed\" event triggered: Note event_register_handler() called code chunk context=\"server-start\"! callback must take three parameters: session: Shiny session object. event: name event (like \"section_viewed\"). data: list contains arbitrary data. cases useful handlers triggered just tutorial. can done one_time() function. Inside handler, call one_time(), pass session object, cond, condition expression, expr, code expression run. first time cond true, expr evaluated; , expr evaluated . example , cond true time section ID \"section-exercise--hint\" viewed, first time section visible, print message. Technical note: reason one_time() unusual interface needs able store data persists across runs tutorial. code run one time, even user stops document starts ; resets user clicks “Start ”. section IDs generated automatically section title. example, section heading: ID section----section. want use different ID, can supply curly braces, prepended section-. set ID section-myid: can even sections don’t title, ID:","code":"```{r context=\"server-start\"} event_register_handler(\"section_viewed\", function(session, event, data) {   message(\"event: section_viewed: \", data$sectionId) }) ``` ```{r context=\"server-start\"} event_register_handler(\"section_viewed\",   function(session, event, data) {     one_time(       session,       cond = data$sectionId == \"section-exercise-with-hint\",       expr = { message(\"Seeing \", data$sectionId, \" for the first time.\") }     )   } ) ``` ### This is a section ### This is a section {#myid} ### {#myid}"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/publishing.html","id":"tutorial-identifiers","dir":"Articles","previous_headings":"Events","what":"Tutorial Identifiers","title":"Publishing Basics","text":"Tutorial Storage Recording Events sections describe various ways record user progress actions within tutorials. Storage tutorial state requires unique identifiers tutorials (versions) well users. Tutorial hosting services often need customize identifiers based notions tutorial provisioning user identify. section describes .","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/publishing.html","id":"default-identifiers","dir":"Articles","previous_headings":"Events > Tutorial Identifiers","what":"Default Identifiers","title":"Publishing Basics","text":"default tutorial user identifiers determined follows: addition, tutorial authors can use YAML metadata provide custom tutorial IDs versions. example:","code":"--- title: \"Hello, Tutorial!\" tutorial:   id: \"com.example.tutorials.my-first-tutorial\"   version: 2.1 output: learnr::tutorial runtime: shiny_prerendered ---"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/publishing.html","id":"custom-identifiers","dir":"Articles","previous_headings":"Events > Tutorial Identifiers","what":"Custom Identifiers","title":"Publishing Basics","text":"Tutorial hosting services often need provide custom external definitions tutorial IDs/versions user IDs. can accomplished adding HTTP headers requests route tutorial. names headers configurable, specified using tutorial.http_header_tutorial_id, tutorial.http_header_tutorial_version tutorial.http_header_user_id global options. example: configuring custom header names ’d need ensure HTTP proxy layer mediating traffic tutorials set appropriate values.","code":"options(   tutorial.http_header_tutorial_id = \"X-Tutorial-ID\",   tutorial.http_header_tutorial_version = \"X-Tutorial-Version\",   tutorial.http_header_user_id = \"X-Tutorial-UserID\" })"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/questions.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Interactive Questions","text":"can include one multiple-choice quiz questions within tutorial help verify readers understand concepts presented. Questions can either single multiple correct answers. Include question calling question function within R code chunk: example defines question single correct answer. can also create questions require multiple answers specified: Note examples specify echo = FALSE option R code chunks produce questions. required ensure R source code questions printed within document. example quiz questions look like within tutorial:","code":"```{r letter-a, echo=FALSE} question(\"What number is the letter A in the English alphabet?\",   answer(\"8\"),   answer(\"14\"),   answer(\"1\", correct = TRUE),   answer(\"23\") ) ``` ```{r where-am-i, echo=FALSE} question(\"Where are you right now? (select ALL that apply)\",   answer(\"Planet Earth\", correct = TRUE),   answer(\"Pluto\"),   answer(\"At a computing device\", correct = TRUE),   answer(\"In the Milky Way\", correct = TRUE),   incorrect = \"Incorrect. You're on Earth, in the Milky Way, at a computer.\") ) ```"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/questions.html","id":"custom-messages","dir":"Articles","previous_headings":"","what":"Custom Messages","title":"Interactive Questions","text":"can add answer-specific correct/incorrect messages using message option. example:","code":"```{r letter-a, echo=FALSE} question(\"What number is the letter A in the *English* alphabet?\",   answer(\"8\"),   answer(\"1\", correct = TRUE),   answer(\"2\", message = \"2 is close but it's the letter B rather than A.\"),   answer(\"26\") ) ```"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/questions.html","id":"formatting-and-math","dir":"Articles","previous_headings":"","what":"Formatting and Math","title":"Interactive Questions","text":"can use markdown format text within questions, answers, custom messages. can also include embedded LaTeX math using $ delimiter. example: Note use double-backslash (\\\\) prefix LaTeX macros. necessary “escape” single-backslash R doesn’t interpret special character. ’s example look like within tutorial:","code":"```{r math, echo=FALSE} x"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/questions.html","id":"retrying-questions","dir":"Articles","previous_headings":"","what":"Retrying Questions","title":"Interactive Questions","text":"default incorrect answer provided users get appropriate feedback correct answer(s) highlighted. can also provide option user try question . can using allow_retry option, example:","code":"```{r letter-a, echo=FALSE} question(\"What number is the letter A in the English alphabet?\",   answer(\"8\"),   answer(\"14\"),   answer(\"1\", correct = TRUE),   answer(\"23\"),   allow_retry = TRUE ) ```"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/questions.html","id":"random-answer-order","dir":"Articles","previous_headings":"","what":"Random Answer Order","title":"Interactive Questions","text":"want answers questions randomly arranged, can add random_answer_order option. example:","code":"```{r letter-a, echo=FALSE} question(\"What number is the letter A in the English alphabet?\",   answer(\"8\"),   answer(\"14\"),   answer(\"1\", correct = TRUE),   answer(\"23\"),   random_answer_order = TRUE ) ```"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/questions.html","id":"groups-of-questions","dir":"Articles","previous_headings":"","what":"Groups of Questions","title":"Interactive Questions","text":"can present group related questions quiz wrapping questions within quiz function. example:","code":"```{r quiz1, echo=FALSE} quiz(caption = \"Quiz 1\",   question(\"What number is the letter A in the *English* alphabet?\",     answer(\"8\"),     answer(\"14\"),     answer(\"1\", correct = TRUE),     answer(\"23\")   ),   question(\"Where are you right now? (select ALL that apply)\",     answer(\"Planet Earth\", correct = TRUE),     answer(\"Pluto\"),     answer(\"At a computing device\", correct = TRUE),     answer(\"In the Milky Way\", correct = TRUE),     incorrect = \"Incorrect. You're on Earth, in the Milky Way, at a computer.\"   ) ) ```"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/releases/learnr_v0-11-0.html","id":"intro","dir":"Articles > Releases","previous_headings":"","what":"Intro","title":"learnr v0.11.0","text":"happy announce version 0.11.0 learnr arrived CRAN mirror near . release collects many large small improvements learnr package, goal making easier create interactive tutorials teaching programming concepts skills. Read overview changes version 0.11.0, review changelog full list updates. Use install.packages() install latest version learnr, includes demonstrations many new features.","code":"install.packages(\"learnr\")"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/releases/learnr_v0-11-0.html","id":"learnr-speaks-more-than-r","dir":"Articles > Releases","previous_headings":"","what":"learnr speaks more than R","title":"learnr v0.11.0","text":"learnr tutorials great way teach others R: ’s package name, . thanks R Markdown’s flexibility, learnr great way teach programming languages well, using spoken language choice!","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/releases/learnr_v0-11-0.html","id":"internationalization","dir":"Articles > Releases","previous_headings":"learnr speaks more than R","what":"Internationalization","title":"learnr v0.11.0","text":"learnr now allows tutorial authors choose words language used learnr’s UI elements using language argument tutorial format. grateful contributions number community members allow learnr include ---box support following languages: Basque (eu) language support contributed Mikel Madina (#489) Portuguese (pt) language support contributed Beatriz Milz (#488,     #551) Spanish (es) language support contributed Yanina Bellini Saibene (#483,     #546) Turkish (tr) language support contributed Hulya Yigit James J Balamuta (     #493, #554) German (de) language support contributed @NinaCorrelAid (#611,     #612) Korean (ko) language support contributed Choonghyun Ryu (#634) Chinese (zh) language support contributed @shalom-lab (#681) Polish (pl) language support contributed Jakub Jędrusiak (#686) can choose one via language setting tutorial’s YAML frontmatter: language chosen tutorial passed R session used evaluate exercise code, translatable messages R also presented specified language (thanks Alex Rossell Hayes). addition, can customize words displayed specific UI elements using named list. example, default text used “Run Code” button Spanish Ejecutar código. can use Spanish language translation modify particular translation using named list: can learn internationalization features full syntax customizing language used learnr internationalization vignette. love support languages happily welcome contribution.","code":"--- output:   learnr::tutorial:     language: es runtime: shinyrmd --- --- output:   learnr::tutorial:     language:        es:         button:           runcode: Ejecutar runtime: shinyrmd ---"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/releases/learnr_v0-11-0.html","id":"support-for-additional-programming-languages","dir":"Articles > Releases","previous_headings":"learnr speaks more than R","what":"Support for additional programming languages","title":"learnr v0.11.0","text":"addition spoken languages, learnr now better running code programming languages R. biggest improvement SQL exercises, learners can execute SQL queries database. previously possible, now tutorial authors can use grading packages like gradethis grade tables returned student’s queries. can see action using run_tutorial(\"sql-exercise\", \"learnr\") (SQL demo online version). learnr also includes UI improvements interactive exercise component languages, including syntax highlighting basic auto-completion exercise code languages Python, JavaScript, Julia SQL. Try run_tutorial(\"polyglot\", \"learnr\") (polyglot online version) see several programming languages use tutorial. exercise checking, learnr communicates exercise engine exercise-checking functions via new engine argument included exercise checker function signature.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/releases/learnr_v0-11-0.html","id":"exercises","dir":"Articles > Releases","previous_headings":"","what":"Exercises","title":"learnr v0.11.0","text":"Beyond expanded language support, interactive exercises questions learnr tutorials received number updates improvements.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/releases/learnr_v0-11-0.html","id":"setup-chunk-chaining","dir":"Articles > Releases","previous_headings":"Exercises","what":"Setup chunk chaining","title":"learnr v0.11.0","text":"Thanks Nischal Shrestha, exercises can now chained together via chained setup chunks setup one exercise may depend exercises1, including setup chunks exercises tutorial. makes easier author progressively work problem series interactive exercises build . exercise chunk — R chunk exercise = TRUE — can specify setup chunk using {label}-chunk naming convention exercise.setup chunk option. chunk used setup chunk may also include execise.setup option specifying parent chunk. Try run_tutorial(\"setup-chunks\", \"learnr\") (setup-chunks online version) see chained setup chunks action.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/releases/learnr_v0-11-0.html","id":"catching-common-code-issues","dir":"Articles > Releases","previous_headings":"Exercises","what":"Catching common code issues","title":"learnr v0.11.0","text":"teaching new programming concepts, can helpful provide learners scaffolding exercise focus attention skills just recently learned. example, explaining difference names_from values_from arguments tidyr::pivot_wider(), might want ask students practice using arguments without distracting writing code set transformation. ’s common use underscores patterns indicate students fill missing piece. students submit code containing blanks, learnr warn student replace ____ valid code. Blanks detected using regular expressions (since blanks may make code unparsable), learnr’s default pattern detect three consecutive underscores. Authors can choose pattern detecting blanks exercise.blanks chunk option. Setting exercise.blanks = \"[.]{2}[-z]+[.]{2}\", example, allow author use valid R syntax blanks. warning message shown students calls blanks need fill . Another common problem code involves character conversions student copies code application automatic formatting pastes text learnr tutorial. frequently see problems quotation marks code samples converted Unicode-formatted quotation marks (curly quotes). general, kinds conversions make R code unparsable. Now learnr detect mistakes suggest replacement. Finally, learner submits code isn’t parsable – reasons – learnr now returns generic, helpful, feedback message guidance common syntax errors. cases, actual R output, often error message, always shown learner. helps students acclimate error messages see console encountered every-day usage R.","code":"library(tidyverse)  us_rent_income %>%    select(name = NAME, variable, estimate) %>%   pivot_wider(names_from = ____, values_from = ____)"},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/releases/learnr_v0-11-0.html","id":"improved-keyboard-support","dir":"Articles > Releases","previous_headings":"Exercises","what":"Improved keyboard support","title":"learnr v0.11.0","text":"Keyboard navigation shortcuts interactive exercise code editor improved. Previously, editor trap keyboard focus Tab key used indentation editor. Now, users can press Escape editor focus temporarily disable using Tab indentation, making possible move next previous element tutorial. demonstration navigating exercise editor. start animation, editor focus '2 + 2' typed editor. user presses Esc key dark outline applied editor container. Pressing Shift Tab moves previous element, 'Run Code' button exercise toolbar. user uses Tab move back editor presses Esc disable indentation, followed Tab move editor next focusable element page. exercise editor also supports additional keyboard shortcuts: (magrittr) pipe %>% Cmd / Ctrl + Shift + M assignment arrow, <- Opt / Alt + - Cmd / Ctrl + Enter runs selected code","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/releases/learnr_v0-11-0.html","id":"the-data-directory","dir":"Articles > Releases","previous_headings":"Exercises","what":"The data directory","title":"learnr v0.11.0","text":"users submit code part exercise, learnr evaluates code temporary directory ’s used just evaluation submission. helps ensure every submission returns value, makes harder authors write exercises use files, .csv files, inputs user’s code. remedy , thanks work Alex Rossell Hayes, learnr now treats data/ directory, stored adjacent tutorial, special. Authors can reference files data/ directory static content tutorials, files also made available student use exercises. exercise evaluation copies directory exercise’s temporary directory subsequent submissions work even student accidentally overwrites deletes files. cases, files data/ can referenced using relative path, e.g. \"data/estimates.csv\".","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/releases/learnr_v0-11-0.html","id":"error-checking","dir":"Articles > Releases","previous_headings":"Exercises","what":"Error checking","title":"learnr v0.11.0","text":"now possible provide customized feedback learner’s exercise submission produces evaluation error. exercise.error.checker option tutorial_options() allows authors define error-checking function applied error thrown user’s code. may also use exercise.error.check.code define default error checking code normally written -error-check chunk. excellent default error checker gradethis::gradethis_error_checker(), enabled default gradethis loaded learnr tutorial. gradethis error checker automatically provides student hint error encountered, comparing submitted code expected solution.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/releases/learnr_v0-11-0.html","id":"questions","dir":"Articles > Releases","previous_headings":"","what":"Questions","title":"learnr v0.11.0","text":"release learnr includes new question type, question_numeric(). numeric question type complement question_text() numeric answer required. general, question answers specified answer() function, answers can single value, limited applicability text numeric questions. Now, authors can use answer_fn() provide single-argument function takes student’s submitted answer determines submission correct. allows authors check range values answers .","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/releases/learnr_v0-11-0.html","id":"thanks","dir":"Articles > Releases","previous_headings":"","what":"Thanks","title":"learnr v0.11.0","text":"hugely thankful 101 community members contributed pull requests, submitted translations, reported issues since last release. many contributions updates version learnr aren’t covered post; sure check full list changes. Thank also previous maintainer learnr, Barrett Schloerke! (learnr now maintained , Garrick Aden-Buie.) 🙏 Big thank contributors: @acarzfr, @acastleman, @adisarid, @agmath, @AlbertLeeUCSF, @andysouth, @annafergusson, @assignUser, @batpigandme, @bbitarello, @beatrizmilz, @bhogan-mitre, @bjornerstedt, @blaiseli, @Brunox13, @C4caesar, @caievelyn, @cderv, @chendaniely, @choonghyunryu, @chrisaberson, @coatless, @ColinFay, @cpsievert, @cswclui, @czucca, @davidkane9, @dcossyleon, @ddauber, @deepanshu88, @dfailing, @dmenne, @dputhier, @DrAtzi, @drmowinckels, @dtkaplan, @elimillera, @elmstedt, @emarsh25, @enoches, @ericemc3, @ethelpruss, @gadenbuie, @gaelso, @garrettgman, @gdkrmr, @gtritchie, @gvwilson, @helix84, @hyigit2, @ijlyttle, @indenkun, @jakub-jedrusiak, @jcheng5, @jennybc, @jhk0530, @joe-chelladurai, @johnbde, @jooyoungseo, @jtelleriar, @jtransue, @kaisamng, @KatherineCox, @kendavidn, @kevinushey, @lorenzwalthert, @ltl-manabi, @MAGALLANESJoseManuel, @MaralDorri, @markwsac, @MayaGans, @meatballhat, @mikelmadina, @mine-cetinkaya-rundel, @mpjashby, @mstackhouse, @mutlusun, @NinaCorrelAid, @nischalshrestha, @NuoWenLei, @petzi53, @plukethep, @profandyfield, @psads-git, @pseudorational, @RaymondBalise, @rossellhayes, @rundel, @schloerke, @shalom-lab, @shalutiwari, @siebrenf, @SilasK, @stragu, @themfrees, @tombeesley, @trestletech, @tvedebrink, @vnijs, @wch, @yabellini.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/shinyapps-publishing.html","id":"alternative-options-for-hosting-learnr-tutorials","dir":"Articles","previous_headings":"","what":"Alternative options for hosting learnr tutorials","title":"Publishing on shinyapps.io","text":"Note options hosting tutorials besides shinyapps.io, : creating tutorial package students run locally (free, requires students able download install packages, well run commands R), setting free academic Shiny Server Pro account (free, provided server institution host software, may require help). require configuration setup, may beyond either students wish undertake time (.e. running short-term course). leads third option costs money, may save valuable time system administration: deploying learnr tutorial shinyapps.io. Note: Currently, free shinyapps.io service designed three five users . like multiple users able access service without tutorial crashing, need pay hosted shinyapps.io service.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/shinyapps-publishing.html","id":"optimal-settings-for-shinyapps-io","dir":"Articles","previous_headings":"","what":"Optimal settings for shinyapps.io","title":"Publishing on shinyapps.io","text":"educator, assume concerns: can students access tutorials concurrently, multiple sessions, long period time? can reduce cost tutorial hosting? Balancing two things part figuring optimal configuration settings.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/shinyapps-publishing.html","id":"optimizing-for-classroom-settings","dir":"Articles","previous_headings":"Optimal settings for shinyapps.io","what":"Optimizing for classroom settings","title":"Publishing on shinyapps.io","text":"published tutorials shinyapps.io, log account, click application page configure following: Instances: increase maximum amount allowed. total number independent servers available run tutorial. , better! help handle “flash traffic” (numerous students load tutorial ) beginning class.  go Settings > General configure following: Instance Size: increase maximum size possible. larger instance, memory work . larger memory, students can concurrently working.  Finally, go Settings > Advanced page configure following: Max Worker Processes: reduce possible, possibly 2. Keep equation mind: (Instance Size) / (Worker Processes * Max Connections) = Amount memory available new student accessing tutorial. Max Connections: reduce possible, possibly 20 . Start Count: increase maximum size possible. number servers (“instances”) launch single person accesses tutorial. means first student access tutorial class start servers others can access quickly.  recommend set Start Count Instance Size maximum, monitor hours used, adjust settings .","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/shinyapps-publishing.html","id":"reducing-cost","dir":"Articles","previous_headings":"Optimal settings for shinyapps.io","what":"Reducing cost","title":"Publishing on shinyapps.io","text":"paying active hours use per month, want minimize stay within subscription limits. , can adjust following: Reduce Start Count Increase Max Worker Processes Increase Max Connections Reduce Connection Timeout Reduce Instance Size good workflow change one setting, observe usage metrics, modify needed.","code":""},{"path":[]},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/shinyapps-publishing.html","id":"context","dir":"Articles","previous_headings":"Example use case","what":"Context","title":"Publishing on shinyapps.io","text":"Suppose teaching statistical programming seminar 5 weeks several class sections 60 people . course short students just introduced R RStudio, may worth setting full server hosting seminar tutorials asking students configure R package. browser-based interface also friendly may trouble understanding navigating RStudio interface first weeks classes. sections back--back, ideally, settings learnr tutorials robust enough allow next section’s students access .","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/shinyapps-publishing.html","id":"initial-settings","dir":"Articles","previous_headings":"Example use case","what":"Initial settings","title":"Publishing on shinyapps.io","text":"situation, department purchase Standard shinyapps.io subscription $100/month, gave 2,000 Active Hours per month. (Note Active Hours refers amount time spent launching tutorial actively processing R code input submitted students instance.) tutorial deployed, set : 5 XXX-Large Instances (8 GB) shinyapps.io, 2 Worker Processes 10 Max Connections. also set Start Count 5, tutorials launched .","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/shinyapps-publishing.html","id":"adjusting-based-on-usage-metrics","dir":"Articles","previous_headings":"Example use case","what":"Adjusting based on usage metrics","title":"Publishing on shinyapps.io","text":"observed usage metrics shinyapps.io dashboard Metrics. noticing tutorials require excessive memory, : changed size Instances X-Large (2 GB) increased Max Connections 15 reduced Start Count 2 completed week’s sections. 5-week course done, : canceled shinyapps.io Standard subscription, reduced Instance Count Instance Size single Large Instance (1 GB), left Worker Processes Max Connections . enabled students return tutorial workshop done, without optimized mass numbers students accessing tutorial . used around 1000 Active Hours first month, around 300 second month course, next year, likely purchase Standard subscription (<= 2000 hours / month) one month, reduce Basic level (<= 500 hours / month) second month. Example usage metrics dashboard :","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/articles/shinyapps-publishing.html","id":"troubleshooting-beyond-settings","dir":"Articles","previous_headings":"Example use case","what":"Troubleshooting beyond settings","title":"Publishing on shinyapps.io","text":"consecutive classes, still issues lingering open server connections previous class getting way. published identical learnr tutorial different name (.e. \"tutorial-2\"), direct students different link needed.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Garrick Aden-Buie. Author, maintainer. Barret Schloerke. Author. JJ Allaire. Author, conceptor. Alexander Rossell Hayes. Author. Nischal Shrestha. Contributor. Angela Li. Contributor.            vignette . Copyright holder, funder. Ajax.org B.V.. Contributor, copyright holder.            Ace library Zeno Rocha. Contributor, copyright holder.            clipboard.js library Nick Payne. Contributor, copyright holder.            Bootbox library Jake Archibald. Contributor, copyright holder.            idb-keyval library i18next authors. Contributor, copyright holder.            i18next library","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Aden-Buie G, Schloerke B, Allaire J, Rossell Hayes (2024). learnr: Interactive Tutorials R. R package version 0.11.5.9000, https://github.com/rstudio/learnr, https://rstudio.github.io/learnr/.","code":"@Manual{,   title = {learnr: Interactive Tutorials for R},   author = {Garrick Aden-Buie and Barret Schloerke and JJ Allaire and Alexander {Rossell Hayes}},   year = {2024},   note = {R package version 0.11.5.9000, https://github.com/rstudio/learnr},   url = {https://rstudio.github.io/learnr/}, }"},{"path":"https://pkgs.rstudio.com/learnr/dev/index.html","id":"learnr-","dir":"","previous_headings":"","what":"Interactive Tutorials for R","title":"Interactive Tutorials for R","text":"learnr package makes easy turn R Markdown document interactive tutorial. Tutorials consist content along interactive components checking reinforcing understanding. Tutorials can include following: Narrative, figures, illustrations, equations. Code exercises (R code chunks users can edit execute directly). Quiz questions. Videos (supported services include YouTube Vimeo). Interactive Shiny components. Tutorials automatically preserve work done within , user works exercises questions returns tutorial later can pick right left .","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Interactive Tutorials for R","text":"examples tutorials created learnr package. tutorial featuring videos interactive questions guide new R user installation set everything ’ll need get started R. example tutorial teaching common data transformation: filtering rows data frame dplyr::filter(). example tutorial learners introduced dplyr::summarise(). Along way, learners also gain practice pipe operator, %>%, dplyr::group_by().","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interactive Tutorials for R","text":"Install latest official learnr release CRAN: can install recent version -development GitHub remotes package: learnr works best recent version RStudio (v1.0.136 later) includes tools easily running previewing tutorials.","code":"install.packages(\"learnr\") # install.packages(\"remotes\") remotes::install_github(\"rstudio/learnr\")"},{"path":"https://pkgs.rstudio.com/learnr/dev/index.html","id":"hello-tutorial","dir":"","previous_headings":"","what":"Hello, Tutorial!","title":"Interactive Tutorials for R","text":"create tutorial, set runtime: shiny_prerendered YAML frontmatter .Rmd file turn R Markdown document interactive app. , call library(learnr) within Rmd file activate tutorial mode, use exercise = TRUE chunk option turn code chunks exercises. Users can edit execute R code see results right within browser. example, ’s simple tutorial: running tutorial document looks like user entered answer:","code":"--- title: \"Hello, Tutorial!\" output: learnr::tutorial runtime: shiny_prerendered ---  ```{r setup, include=FALSE} library(learnr) ```  This code computes the answer to one plus one, change it so it computes two plus two:  ```{r addition, exercise=TRUE} 1 + 1 ```"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/answer.html","id":null,"dir":"Reference","previous_headings":"","what":"Question answer options — answer","title":"Question answer options — answer","text":"Create options users used question_checkbox() question_radio() learnr questions. question_text() question_numeric(), individual answers directly presented students, values can used determining student submitted correct answer. flexible feedback checkbox, text, numeric questions, answer_fn() can used provide function evaluates student's submission returns custom result.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/answer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Question answer options — answer","text":"","code":"answer(text, correct = FALSE, message = NULL, label = text)  answer_fn(fn, label = NULL)"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/answer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Question answer options — answer","text":"text answer text value; selection-type questions value shown user. correct Logical value indicating whether answer() corresponds correct incorrect option. message custom message shown answer selected overall question result matches state answer. example, message correct solution shown entire submission incorrect, shown user picks answer option question correct. label label shown option presented user. fn function used evaluate submitted answer. function called student's submitted value first argument, function take least one argument user's value passed first argument. Inline purrr-style lambda functions allowed, see rlang::as_function() complete details syntax. body function, can perform arbitrary calculations decide submitted answer correct compose message presented user. signal final answer, call mark_as() helper functions correct() incorrect(). return values ignored; e.g. returning NULL may yield submission evaluation answer() answer_fn() options question.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/answer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Question answer options — answer","text":"Returns list \"tutorial_question_answer\" class.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/answer.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Question answer options — answer","text":"answer(): Create answer option answer_fn(): Evaluate student's submission determine correctness return feedback.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/answer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Question answer options — answer","text":"","code":"answer(32, correct = FALSE) #> X: \"32\"  answer(42, correct = TRUE, message = \"The meaning of life.\") #> ✔: \"42\"; \"The meaning of life.\""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/available_tutorials.html","id":null,"dir":"Reference","previous_headings":"","what":"List available tutorials — available_tutorials","title":"List available tutorials — available_tutorials","text":"List tutorials currently available via installed R packages. list specific tutorials contained within given R package.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/available_tutorials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List available tutorials — available_tutorials","text":"","code":"available_tutorials(package = NULL)"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/available_tutorials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List available tutorials — available_tutorials","text":"package Name package","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/available_tutorials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List available tutorials — available_tutorials","text":"available_tutorials() returns data.frame containing \"package\", \"name\", \"title\", \"description\", \"package_dependencies\", \"private\", \"yaml_front_matter\".","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/available_tutorials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List available tutorials — available_tutorials","text":"","code":"available_tutorials(package = \"learnr\") #> Available tutorials: #> * learnr #>   - ex-data-basics    : \"Data basics\" #>   - ex-data-filter    : \"Filter observations\" #>   - ex-data-mutate    : \"Create new variables\" #>   - ex-data-summarise : \"Summarise Tables\" #>   - ex-setup-r        : \"Set Up\" #>   - hello             : \"Hello, Tutorial!\" #>   - polyglot          : \"Multi-language exercises\" #>   - quiz_question     : \"Tutorial Quiz Questions in `learnr`\" #>   - setup-chunks      : \"Chained setup chunks\" #>   - slidy             : \"Slidy demo\" #>   - sql-exercise      : \"Interactive SQL Exercises\""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/debug_exercise_checker.html","id":null,"dir":"Reference","previous_headings":"","what":"An Exercise Checker for Debugging — debug_exercise_checker","title":"An Exercise Checker for Debugging — debug_exercise_checker","text":"exercise checker debugging renders expected arguments exercise.checker option HTML. Additionally, function used testing  evaluate_exercise().","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/debug_exercise_checker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An Exercise Checker for Debugging — debug_exercise_checker","text":"","code":"debug_exercise_checker(   label,   user_code,   solution_code,   check_code,   envir_result,   evaluate_result,   envir_prep,   last_value,   engine,   ... )"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/debug_exercise_checker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An Exercise Checker for Debugging — debug_exercise_checker","text":"label Exercise label user_code Submitted user code solution_code code *-solution chunk check_code checking code originates *-check chunk, *-code-check chunk, *-error-check chunk. evaluate_result return value evaluate::evaluate(), called user_code envir_prep, envir_result environment running user code (envir_prep) environment just running user's code (envir_result). last_value last value evaluating user_code engine engine exercise chunk ... used (future compatibility)","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/debug_exercise_checker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An Exercise Checker for Debugging — debug_exercise_checker","text":"Feedback use exercise debugging.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/disable_all_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Disable all html tags — disable_all_tags","title":"Disable all html tags — disable_all_tags","text":"Method disable html tags allow users interact html.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/disable_all_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disable all html tags — disable_all_tags","text":"","code":"disable_all_tags(ele)"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/disable_all_tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Disable all html tags — disable_all_tags","text":"ele html tag element","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/disable_all_tags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Disable all html tags — disable_all_tags","text":"htmltools HTML object appended class = \"disabled\" disabled attributes tags.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/disable_all_tags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Disable all html tags — disable_all_tags","text":"","code":"# add an href to all a tags disable_all_tags(   htmltools::tagList(     htmltools::a(),     htmltools::a()   ) ) #> <a class=\"disabled\" disabled><\/a> #> <a class=\"disabled\" disabled><\/a>"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/duplicate_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a duplicate of an environment — duplicate_env","title":"Create a duplicate of an environment — duplicate_env","text":"Copy items environment new environment. default, new environment share parent environment.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/duplicate_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a duplicate of an environment — duplicate_env","text":"","code":"duplicate_env(envir, parent = parent.env(envir))"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/duplicate_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a duplicate of an environment — duplicate_env","text":"envir environment duplicate parent parent environment set new environment.  Defaults parent environment envir.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/duplicate_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a duplicate of an environment — duplicate_env","text":"duplicated copy envir whose parent env parent.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/duplicate_env.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a duplicate of an environment — duplicate_env","text":"","code":"# Make a new environment with the object 'key' envir <- new.env() envir$key <- \"value\" \"key\" %in% ls() # FALSE #> [1] FALSE \"key\" %in% ls(envir = envir) # TRUE #> [1] TRUE  # Duplicate the envir and show it contains 'key' new_envir <- duplicate_env(envir) \"key\" %in% ls(envir = new_envir) # TRUE #> [1] TRUE"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/event_register_handler.html","id":null,"dir":"Reference","previous_headings":"","what":"Register an event handler callback — event_register_handler","title":"Register an event handler callback — event_register_handler","text":"Register event handler per-tutorial basis. Handlers event fired order registered.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/event_register_handler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register an event handler callback — event_register_handler","text":"","code":"event_register_handler(event, callback)"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/event_register_handler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register an event handler callback — event_register_handler","text":"event name event. callback function invoked event specified name occurs. callback must take parameters session, event, data.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/event_register_handler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register an event handler callback — event_register_handler","text":"function , invoked, remove callback.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/event_register_handler.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Register an event handler callback — event_register_handler","text":"cases, called within learnr document. case, handler exist long document (, Shiny application) running. function called learnr .Rmd document, chunk context=\"server-start\". called context=\"server\", handler registered least two times (application whole, per user session). function called outside learnr document, handler persist learnr package unloaded, typically R session stopped.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/external_evaluator.html","id":null,"dir":"Reference","previous_headings":"","what":"External execution evaluator — external_evaluator","title":"External execution evaluator — external_evaluator","text":"Lifecycle: experimental","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/external_evaluator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"External execution evaluator — external_evaluator","text":"","code":"external_evaluator(   endpoint = getOption(\"tutorial.external.host\",     Sys.getenv(\"TUTORIAL_EXTERNAL_EVALUATOR_HOST\", NA)),   max_curl_conns = 50 )"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/external_evaluator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"External execution evaluator — external_evaluator","text":"endpoint HTTP(S) endpoint POST exercises max_curl_conns maximum number simultaneous HTTP requests endpoint.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/external_evaluator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"External execution evaluator — external_evaluator","text":"function takes expression (expr), timelimit, exercise session.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/filesystem_storage.html","id":null,"dir":"Reference","previous_headings":"","what":"Filesystem-based storage for tutor state data — filesystem_storage","title":"Filesystem-based storage for tutor state data — filesystem_storage","text":"Tutorial state storage handler uses filesystem backing store. directory contain tutorial state data partitioned user_id, tutorial_id, tutorial_version (order)","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/filesystem_storage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filesystem-based storage for tutor state data — filesystem_storage","text":"","code":"filesystem_storage(dir, compress = TRUE)"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/filesystem_storage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filesystem-based storage for tutor state data — filesystem_storage","text":"dir Directory store state data within compress .rds files compressed?","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/filesystem_storage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filesystem-based storage for tutor state data — filesystem_storage","text":"Storage handler suitable options(tutorial.storage = ...)","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/finalize_question.html","id":null,"dir":"Reference","previous_headings":"","what":"Finalize a question — finalize_question","title":"Finalize a question — finalize_question","text":"Mark question finalized adding question-final class HTML output top level, addition disabling tags disable_all_tags().","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/finalize_question.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finalize a question — finalize_question","text":"","code":"finalize_question(ele)"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/finalize_question.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finalize a question — finalize_question","text":"ele html tag element","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/finalize_question.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finalize a question — finalize_question","text":"htmltools HTML object appropriately appended classes tutorial question marked final answer.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/finalize_question.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finalize a question — finalize_question","text":"","code":"# finalize the question UI finalize_question(   htmltools::div(     class = \"custom-question\",     htmltools::div(\"answer 1\"),     htmltools::div(\"answer 2\")   ) ) #> <div class=\"custom-question disabled question-final\" disabled> #>   <div class=\"disabled\" disabled>answer 1<\/div> #>   <div class=\"disabled\" disabled>answer 2<\/div> #> <\/div>"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/format_quiz.html","id":null,"dir":"Reference","previous_headings":"","what":"Formatting and printing quizzes, questions, and answers — format.tutorial_question_answer","title":"Formatting and printing quizzes, questions, and answers — format.tutorial_question_answer","text":"Notes: custom question types created, custom s3 formating methods may implemented well. Due shiny runtime questions, text representation quizzes, questions, answers presented.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/format_quiz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formatting and printing quizzes, questions, and answers — format.tutorial_question_answer","text":"","code":"# S3 method for tutorial_question_answer format(x, ..., spacing = \"\")  # S3 method for tutorial_question format(x, ..., spacing = \"\")  # S3 method for tutorial_quiz format(x, ...)  # S3 method for tutorial_question print(x, ...)  # S3 method for tutorial_question_answer print(x, ...)  # S3 method for tutorial_quiz print(x, ...)"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/format_quiz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formatting and printing quizzes, questions, and answers — format.tutorial_question_answer","text":"x object interest ... ignored spacing Text placed beginning new line","code":""},{"path":[]},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/format_quiz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Formatting and printing quizzes, questions, and answers — format.tutorial_question_answer","text":"","code":"ex_question <- question(\"What number is the letter A in the alphabet?\",   answer(\"8\"),   answer(\"14\"),   answer(\"1\", correct = TRUE),   answer(\"23\"),   incorrect = \"See [here](https://en.wikipedia.org/wiki/English_alphabet) and try again.\",   allow_retry = TRUE ) cat(format(ex_question), \"\\n\") #> Question: \"What number is the letter A in the alphabet?\" #>   type: \"learnr_radio\" #>   allow_retry: TRUE #>   random_answer_order: FALSE #>   answers: #>     X: \"8\" #>     X: \"14\" #>     ✔: \"1\" #>     X: \"23\" #>   messages: #>     correct: \"Correct!\" #>     incorrect: \"See <a href=\"https://en.wikipedia.org/wiki/English_alphabet\">here<\/a> and try again.\" #>     try_again: \"See <a href=\"https://en.wikipedia.org/wiki/English_alphabet\">here<\/a> and try again.\""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/get_tutorial_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information about the current tutorial — get_tutorial_info","title":"Get information about the current tutorial — get_tutorial_info","text":"Returns information current tutorial. Ideally function evaluated Shiny context, .e. chunk option context = \"server\". Note values function may change tutorial completely initialized. called non-reactive context, get_tutorial_info() return default values likely correspond current tutorial.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/get_tutorial_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information about the current tutorial — get_tutorial_info","text":"","code":"get_tutorial_info(   tutorial_path = NULL,   session = getDefaultReactiveDomain(),   ...,   encoding = \"UTF-8\" )"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/get_tutorial_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information about the current tutorial — get_tutorial_info","text":"tutorial_path Path tutorial .Rmd source file session session object passed function given shinyServer. Default shiny::getDefaultReactiveDomain(). ... Arguments passed rmarkdown::render output_format R Markdown output format convert . option \"\" render formats defined within file. option can name format (e.g. \"html_document\") render document single format. One can also use vector format names render multiple formats. Alternatively, can pass output format object (e.g. html_document()). using NULL output format first one defined YAML frontmatter input file (defaults HTML format specified ). pass output format object output_format, options specified YAML header _output.yml ignored must explicitly set options want construct object. pass string, output format use output parameters YAML header _output.yml. output_dir output directory rendered output_file. allows choice alternate directory output file written (default output directory input file). path provided filename output_file directory specified take precedence. Please note directory path provided create necessary directories exist. output_options List output options can override options specified metadata (e.g. used force self_contained mathjax = \"local\"). Note valid output format read metadata (.e. custom format object passed output_format). output_yaml Paths YAML files specifying output formats configurations. first existing one used. none found, function searches YAML files specified output_yaml top-level parameter YAML front matter, _output.yml _output.yaml, uses first existing one. intermediates_dir Intermediate files directory. path specified intermediate files written path. NULL, intermediate files written directory input file. knit_root_dir working directory knit document; uses knitr's root.dir knit option. NULL behavior follow knitr default, use parent directory document. runtime runtime target rendering. static option produces output intended static files; shiny produces output suitable use Shiny document (see run). default, auto, allows runtime target specified YAML metadata take precedence, renders static runtime target otherwise. clean Using TRUE clean intermediate files created rendering. params list named parameters override custom params specified within YAML front-matter (e.g. specifying dataset read date range confine output ). Pass \"ask\" start application helps guide parameter configuration. knit_meta (option reserved expert use.) Metadata generated knitr. envir environment code chunks evaluated knitting (can use new.env() guarantee empty new environment). run_pandoc option whether run pandoc convert Markdown output. quiet option suppress printing rendering knitr, pandoc command line others. suppress printing last \"Output created: \" message, can set rmarkdown.render.message FALSE encoding Ignored. encoding always assumed UTF-8.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/get_tutorial_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information about the current tutorial — get_tutorial_info","text":"Returns ordinary list following elements: tutorial_id: ID tutorial, auto-generated tutorial$id key tutorial's YAML front matter. tutorial_version: tutorial's version, auto-generated tutorial$version key tutorial's YAML front matter. items: data frame columns order, label, type data describing items (questions exercises) tutorial. item available running tutorial, static pre-render step. user_id: current user. learnr_version: current version running learnr package. language: current language tutorial, either chosen user specified language item YAML front matter.","code":""},{"path":[]},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/get_tutorial_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information about the current tutorial — get_tutorial_info","text":"","code":"if (rmarkdown::pandoc_available(\"1.4\")) {   tutorial_rmd <- local({     # Use a temp copy of \"Hello learnr\" tutorial for this example     src <- system.file(       \"tutorials\", \"hello\", \"hello.Rmd\", package = \"learnr\"     )     dest <- tempfile(fileext = \".Rmd\")     file.copy(src, dest)     dest   })    # ---- This is the example! ------------ #   info <- get_tutorial_info(tutorial_rmd)   # -------------------------------------- #    # clean up the temporary Rmd used in this example   unlink(tutorial_rmd)    # This is the result of the example   info } #> $tutorial_id #> [1] \"/tmp/Rtmp2sSPvW\" #>  #> $tutorial_version #> [1] \"1.0\" #>  #> $items #> # A tibble: 1 × 4 #>   order label    type     data   #>   <int> <chr>    <chr>    <list> #> 1     1 addition exercise <r>    #>  #> $user_id #> [1] \"runner\" #>  #> $learnr_version #> [1] \"0.11.5.9000\" #>  #> $language #> [1] \"en\" #>"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/get_tutorial_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Observe the user's progress in the tutorial — get_tutorial_state","title":"Observe the user's progress in the tutorial — get_tutorial_state","text":"student progresses learnr tutorial, progress stored Shiny reactive values list session (see shiny::reactiveValues()). Without arguments, get_tutorial_state() returns full reactiveValues object can converted conventional list shiny::reactiveValuesToList(). label argument provided, state individual question exercise label returned. Calling get_tutorial_state() introduces reactive dependency state returned questions exercises unless called within isolate(). Note get_tutorial_state() work tutorial author must used reactive context, .e. within shiny::observe(), shiny::observeEvent(), shiny::reactive(). logic observing user's tutorial state must written inside context=\"server\" chunk tutorial's R Markdown source.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/get_tutorial_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Observe the user's progress in the tutorial — get_tutorial_state","text":"","code":"get_tutorial_state(label = NULL, session = getDefaultReactiveDomain())"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/get_tutorial_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Observe the user's progress in the tutorial — get_tutorial_state","text":"label length-1 character label exercise question. session session object passed function given shinyServer. Default shiny::getDefaultReactiveDomain().","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/get_tutorial_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Observe the user's progress in the tutorial — get_tutorial_state","text":"reactiveValues object single reactive value (label provided). names full reactiveValues object correspond label question exercise. item contains following entries: type: One \"question\" \"exercise\". answer: character vector containing user's submitted answer(s). correct: logical indicating whether user's answer correct, logical NA submission checked correctness. timestamp: time user's submission completed, character string UTC, formatted \"%F %H:%M:%OS3 %Z\".","code":""},{"path":[]},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/initialize_tutorial.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize tutorial R Markdown extensions — initialize_tutorial","title":"Initialize tutorial R Markdown extensions — initialize_tutorial","text":"One time initialization R Markdown extensions required learnr package. function typically called automatically result using exercises questions.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/initialize_tutorial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize tutorial R Markdown extensions — initialize_tutorial","text":"","code":"initialize_tutorial()"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/initialize_tutorial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize tutorial R Markdown extensions — initialize_tutorial","text":"previously run, initializes knitr hooks provides required rmarkdown::shiny_prerendered_chunk()s initialize learnr.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/knit_print.html","id":null,"dir":"Reference","previous_headings":"","what":"Knitr quiz print methods — knit_print.tutorial_question","title":"Knitr quiz print methods — knit_print.tutorial_question","text":"knitr::knit_print methods question quiz","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/knit_print.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Knitr quiz print methods — knit_print.tutorial_question","text":"","code":"# S3 method for tutorial_question knit_print(x, ...)  # S3 method for tutorial_quiz knit_print(x, ...)"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/knit_print.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Knitr quiz print methods — knit_print.tutorial_question","text":"x R object printed ... Additional arguments passed S3 method. Currently ignored, except two optional arguments options inline; see references .","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/learnr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"learnr: Interactive Tutorials for R — learnr-package","title":"learnr: Interactive Tutorials for R — learnr-package","text":"Create interactive tutorials using R Markdown. Use combination narrative, figures, videos, exercises, quizzes create self-paced tutorials learning R R packages.","code":""},{"path":[]},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/learnr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"learnr: Interactive Tutorials for R — learnr-package","text":"Maintainer: Garrick Aden-Buie garrick@posit.co (ORCID) Authors: Barret Schloerke barret@posit.co (ORCID) JJ Allaire jj@posit.co [conceptor] Alexander Rossell Hayes alex.rossellhayes@posit.co (ORCID) contributors: Nischal Shrestha nischal@posit.co (ORCID) [contributor] Angela Li angelali921@gmail.com (vignette) [contributor] Posit, PBC [copyright holder, funder] Ajax.org B.V. (Ace library) [contributor, copyright holder] Zeno Rocha (clipboard.js library) [contributor, copyright holder] Nick Payne (Bootbox library) [contributor, copyright holder] Jake Archibald (idb-keyval library) [contributor, copyright holder] i18next authors (i18next library) [contributor, copyright holder]","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/mark_as_correct_incorrect.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark submission as correct or incorrect — correct","title":"Mark submission as correct or incorrect — correct","text":"Helper method communicate user's submission correct incorrect. functions originally designed developers create question_is_correct() methods custom question types, can also called inside functions created answer_fn() dynamically determine result message provided user.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/mark_as_correct_incorrect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark submission as correct or incorrect — correct","text":"","code":"correct(messages = NULL)  incorrect(messages = NULL)  mark_as(correct, messages = NULL)"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/mark_as_correct_incorrect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark submission as correct or incorrect — correct","text":"messages vector messages displayed.  type message determined correct value. Note markdown messages rendered HTML, may provide HTML using htmltools::HTML() htmltools::tags. correct Logical: question answer correct","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/mark_as_correct_incorrect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mark submission as correct or incorrect — correct","text":"Returns list class learnr_mark_as returned question_is_correct() method learnr question type.","code":""},{"path":[]},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/mark_as_correct_incorrect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mark submission as correct or incorrect — correct","text":"","code":"# Radio button question implementation of `question_is_correct` question_is_correct.radio <- function(question, value, ...) {   for (ans in question$answers) {     if (as.character(ans$option) == value) {       return(mark_as(ans$correct, ans$message))     }   }   mark_as(FALSE, NULL) }"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/mock_exercise.html","id":null,"dir":"Reference","previous_headings":"","what":"Mock a learnr interactive exercise — mock_exercise","title":"Mock a learnr interactive exercise — mock_exercise","text":"Creates interactive exercise object can used tests without create learnr tutorial.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/mock_exercise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mock a learnr interactive exercise — mock_exercise","text":"","code":"mock_exercise(   user_code = \"1 + 1\",   label = \"ex\",   chunks = list(),   engine = \"r\",   global_setup = NULL,   setup_label = NULL,   solution_code = NULL,   code_check = NULL,   error_check = NULL,   check = NULL,   tests = NULL,   exercise.checker = NULL,   exercise.error.check.code = NULL,   exercise.df_print = \"default\",   exercise.warn_invisible = TRUE,   exercise.timelimit = 10,   fig.height = 4,   fig.width = 6.5,   fig.retina = 2,   version = current_exercise_version,   ... )  mock_chunk(label, code, exercise = FALSE, engine = \"r\", ...)"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/mock_exercise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mock a learnr interactive exercise — mock_exercise","text":"user_code, solution_code, global_setup user, solution, global setup code, strings. label label exercise. chunks list chunks use exercise. Use mock_chunk() create chunks. engine knitr language engine used exercise, equivalent engine used chunk exercise = TRUE tutorial. setup_label label chunk contains setup code. chunk among list chunks provided chunks argument label setup chunk needs match label provided setup_label. check, code_check, error_check checking code, string, typically provided -check, -code-check -error-check chunks learnr tutorial. exercise.checker exercise checker function, string. default, debug exercise checker set used check, code_check error_check provided. exercise.error.check.code default code used error_check applied check code_check provided user's code throws error. exercise.df_print, exercise.warn_invisible, exercise.timelimit, fig.height, fig.width, fig.retina Common exercise chunk options. version exercise version emulate, default mock_exercise() return exercise matches current exercise version. ... Additional chunk options included exercise chunk. code mock_chunk(), code mocked chunk. exercise mock_chunk(), chunk exercise chunk? , mock_exercise() create exercise chunk .","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/mock_exercise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mock a learnr interactive exercise — mock_exercise","text":"exercise object.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/mock_exercise.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Mock a learnr interactive exercise — mock_exercise","text":"mock_exercise(): Create learnr exercise object mock_chunk(): Create mock exercise-supporting chunk","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/mock_exercise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mock a learnr interactive exercise — mock_exercise","text":"","code":"mock_exercise(   user_code = \"1 + 1\",   solution_code = \"2 + 2\",   label = \"two-plus-two\" ) #> ```{r \"two-plus-two\", exercise=TRUE} #> 1 + 1 #> ``` #>  #> ```{r \"two-plus-two-solution\"} #> 2 + 2 #> ```  # Global Setup mock_exercise(   user_code = 'storms %>% filter(name = \"Roxanne\")',   solution_code = 'storms %>% filter(name == \"Roxanne\")',   global_setup = 'library(learnr)\\nlibrary(dplyr)',   label = \"filter-storms\" ) #> ```{r \"filter-storms\", exercise=TRUE} #> storms %>% filter(name = \"Roxanne\") #> ``` #>  #> ```{r \"filter-storms-solution\"} #> storms %>% filter(name == \"Roxanne\") #> ```  # Chained setup chunks mock_exercise(   user_code = \"roxanne\",   solution_code = \"roxanne %>%   group_by(year, month, day) %>%   summarize(wind = mean(wind))\",   chunks = list(     mock_chunk(       label = \"prep-roxanne\",       code = 'roxanne <- storms %>% filter(name == \"Roxanne\")'     )   ),   setup_label = \"prep-roxanne\",   global_setup = \"library(learnr)\\nlibrary(dplyr)\" ) #> ```{r \"prep-roxanne\"} #> roxanne <- storms %>% filter(name == \"Roxanne\") #> ``` #>  #> ```{r \"ex\", exercise.setup=\"prep-roxanne\", exercise=TRUE} #> roxanne #> ``` #>  #> ```{r \"ex-solution\"} #> roxanne %>% #>   group_by(year, month, day) %>% #>   summarize(wind = mean(wind)) #> ```"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/one_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap an expression that will be executed one time in an event handler — one_time","title":"Wrap an expression that will be executed one time in an event handler — one_time","text":"wraps expression executed one time tutorial, based condition. first time condition true, expression executed; , expression evaluated . execution state stored expression executed, user quits tutorial returns , expression executed second time. common use one_time execute expression section viewed first time.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/one_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap an expression that will be executed one time in an event handler — one_time","text":"","code":"one_time(session, cond, expr, label = deparse(substitute(cond)))"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/one_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap an expression that will be executed one time in an event handler — one_time","text":"session Shiny session object. cond condition used filter. first time condition evaluates true, expr evaluated; , expr evaluated . expr expression evaluated , first time cond true. label unique identifier. used ID condition expression; two calls one_time() uses label, ID collision one execute. default, cond deparsed used label.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/one_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap an expression that will be executed one time in an event handler — one_time","text":"result evaluating expr (one_time() intended called within event handler).","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/one_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrap an expression that will be executed one time in an event handler — one_time","text":"","code":"if (FALSE) { # This goes in a {r context=\"server-start\"} chunk  # The expression with message() will be executed the first time the user # sees the section with ID \"section-exercise-with-hint\". event_register_handler(\"section_viewed\",   function(session, event, data) {     one_time(       session,       data$sectionId == \"section-exercise-with-hint\",       {         message(\"Seeing \", data$sectionId, \" for the first time.\")       }     )   } )   }"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/question_checkbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Checkbox question — question_checkbox","title":"Checkbox question — question_checkbox","text":"Creates checkbox group tutorial quiz question.  student may select one checkboxes submitting answer.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/question_checkbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checkbox question — question_checkbox","text":"","code":"question_checkbox(   text,   ...,   correct = \"Correct!\",   incorrect = \"Incorrect\",   try_again = \"Incorrect. Be sure to select every correct answer.\",   allow_retry = FALSE,   random_answer_order = FALSE )"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/question_checkbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checkbox question — question_checkbox","text":"text Question option text ... Answers created answer() answer_fn(), extra parameters passed onto question(). Function answers appear checklist, checked first order specified. correct question, text print correct answer (defaults \"Correct!\"). answer, boolean indicating whether answer correct. incorrect Text print incorrect answer (defaults \"Incorrect\") allow_retry FALSE. try_again Text print incorrect answer (defaults \"Incorrect. sure select every correct answer.\") allow_retry TRUE. allow_retry Allow retry incorrect answers. Defaults FALSE. random_answer_order Display answers random order.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/question_checkbox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checkbox question — question_checkbox","text":"Returns learnr question type \"learnr_checkbox\".","code":""},{"path":[]},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/question_checkbox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checkbox question — question_checkbox","text":"","code":"question_checkbox(   \"Select all the toppings that belong on a Margherita Pizza:\",   answer(\"tomato\", correct = TRUE),   answer(\"mozzarella\", correct = TRUE),   answer(\"basil\", correct = TRUE),   answer(\"extra virgin olive oil\", correct = TRUE),   answer(\"pepperoni\", message = \"Great topping! ... just not on a Margherita Pizza\"),   answer(\"onions\"),   answer(\"bacon\"),   answer(\"spinach\"),   random_answer_order = TRUE,   allow_retry = TRUE,   try_again = \"Be sure to select all four toppings!\" ) #> Question: \"Select all the toppings that belong on a Margherita Pizza:\" #>   type: \"learnr_checkbox\" #>   allow_retry: TRUE #>   random_answer_order: TRUE #>   answers: #>     ✔: \"tomato\" #>     ✔: \"mozzarella\" #>     ✔: \"basil\" #>     ✔: \"extra virgin olive oil\" #>     X: \"pepperoni\"; \"Great topping! … just not on a Margherita Pizza\" #>     X: \"onions\" #>     X: \"bacon\" #>     X: \"spinach\" #>   messages: #>     correct: \"Correct!\" #>     incorrect: \"Incorrect\" #>     try_again: \"Be sure to select all four toppings!\"   # Set up a question where there's no wrong answer. The answer options are # always shuffled, but the answer_fn() answer is always evaluated first. question_checkbox(   \"Which of the tidyverse packages is your favorite?\",   answer(\"dplyr\"),   answer(\"tidyr\"),   answer(\"ggplot2\"),   answer(\"tibble\"),   answer(\"purrr\"),   answer(\"stringr\"),   answer(\"forcats\"),   answer(\"readr\"),   answer_fn(function(value) {     if (length(value) == 1) {       correct(paste(value, \"is my favorite tidyverse package, too!\"))     } else {       correct(\"Yeah, I can't pick just one favorite package either.\")     }   }),   random_answer_order = TRUE ) #> Question: \"Which of the tidyverse packages is your favorite?\" #>   type: \"learnr_checkbox\" #>   allow_retry: FALSE #>   random_answer_order: TRUE #>   answers: #>     X: \"dplyr\" #>     X: \"tidyr\" #>     X: \"ggplot2\" #>     X: \"tibble\" #>     X: \"purrr\" #>     X: \"stringr\" #>     X: \"forcats\" #>     X: \"readr\" #>     ?: \"\" #>   messages: #>     correct: \"Correct!\" #>     incorrect: \"Incorrect\""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/question_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom question methods — question_ui_initialize","title":"Custom question methods — question_ui_initialize","text":"five methods used define custom question.  S3 method correspond type = TYPE supplied question. question_ui_initialize.TYPE(question, value, ...) Determines question initially displayed users. return shiny UI object can displayed using shiny::renderUI. example, case question_ui_initialize.radio, returns shiny::radioButtons object. method re-executed question attempted . question_ui_completed.TYPE(question, ...) Determines question displayed submission.  Just like question_ui_initialize, method return shiny UI object can displayed using shiny::renderUI. question_is_valid.TYPE(question, value, ...) method return boolean determines input answer valid.  Depending value, function enables disables submission button. question_is_correct.TYPE(question, value, ...) function return output correct, incorrect, mark_as. method allows custom messages addition determination answer correct.  See correct, incorrect, mark_as details. question_ui_try_again <- function(question, value, ...) Determines question displayed users  \"Try \" screen displayed.  Usually function disable inputs question, .e. prevent student changing answer options. Similar question_ui_initialize, return shiny UI object can displayed using shiny::renderUI.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/question_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom question methods — question_ui_initialize","text":"","code":"question_ui_initialize(question, value, ...)  question_ui_try_again(question, value, ...)  question_ui_completed(question, value, ...)  question_is_valid(question, value, ...)  question_is_correct(question, value, ...)  # S3 method for default question_ui_initialize(question, value, ...)  # S3 method for default question_ui_try_again(question, value, ...)  # S3 method for default question_ui_completed(question, value, ...)  # S3 method for default question_is_valid(question, value, ...)  # S3 method for default question_is_correct(question, value, ...)"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/question_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom question methods — question_ui_initialize","text":"question question object used value user input value ... future parameter expansion custom arguments used dispatched s3 methods.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/question_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom question methods — question_ui_initialize","text":"learnr question objects, UI elements, results server methods.","code":""},{"path":[]},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/question_methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Custom question methods — question_ui_initialize","text":"","code":"q <- question(   \"Which package helps you teach programming skills?\",   answer(\"dplyr\"),   answer(\"learnr\", correct = TRUE),   answer(\"base\") ) question_is_correct(q, \"dplyr\") #> $correct #> [1] FALSE #>  #> $messages #> NULL #>  #> attr(,\"class\") #> [1] \"learnr_mark_as\" question_is_correct(q, \"learnr\") #> $correct #> [1] TRUE #>  #> $messages #> NULL #>  #> attr(,\"class\") #> [1] \"learnr_mark_as\""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/question_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Number question — question_numeric","title":"Number question — question_numeric","text":"Creates tutorial question asking student submit number.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/question_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number question — question_numeric","text":"","code":"question_numeric(   text,   ...,   correct = \"Correct!\",   incorrect = \"Incorrect\",   try_again = incorrect,   allow_retry = FALSE,   value = NULL,   min = NA,   max = NA,   step = NA,   options = list(),   tolerance = 1.5e-08 )"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/question_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number question — question_numeric","text":"text Question option text ... Answers created answer() answer_fn(), extra parameters passed onto question(). correct question, text print correct answer (defaults \"Correct!\"). answer, boolean indicating whether answer correct. incorrect Text print incorrect answer (defaults \"Incorrect\") allow_retry FALSE. try_again Text print incorrect answer (defaults \"Incorrect\") allow_retry TRUE. allow_retry Allow retry incorrect answers. Defaults FALSE. value Initial value. min Minimum allowed value max Maximum allowed value step Interval use stepping min max options Extra options stored question object. useful using custom question types. See sortable::question_rank() example question implementation uses options parameter. tolerance Submitted values within absolute difference less equal tolerance considered equal answer value. Note tolerance answer() values. specific answer value grading, use answer_fn() provide evaluation code.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/question_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number question — question_numeric","text":"Returns learnr question type \"learnr_numeric\".","code":""},{"path":[]},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/question_numeric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number question — question_numeric","text":"","code":"question_numeric(   \"What is pi rounded to 2 digits?\",   answer(3, message = \"Don't forget to use the digits argument\"),   answer(3.1, message = \"Too few digits\"),   answer(3.142, message = \"Too many digits\"),   answer(3.14, correct = TRUE),   allow_retry = TRUE,   min = 3,   max = 4,   step = 0.01 ) #> Question: \"What is pi rounded to 2 digits?\" #>   type: \"learnr_numeric\" #>   allow_retry: TRUE #>   random_answer_order: FALSE #>   answers: #>     X: \"3\"; \"Don’t forget to use the digits argument\" #>     X: \"3.1\"; \"Too few digits\" #>     X: \"3.142\"; \"Too many digits\" #>     ✔: \"3.14\" #>   messages: #>     correct: \"Correct!\" #>     incorrect: \"Incorrect\" #>     try_again: \"Incorrect\" #>   Options: #>     min: 3 #>     max: 4 #>     step: 0.01 #>     tolerance: 1.5e-08   question_numeric(   \"Can you think of an even number?\",   answer_fn(function(value) {     if (value %% 2 == 0) {       correct(\"even\")     } else if (value %% 2 == 1) {       incorrect(\"odd\")     }   }, label = \"Is the number even?\"),   step = 1 ) #> Question: \"Can you think of an even number?\" #>   type: \"learnr_numeric\" #>   allow_retry: FALSE #>   random_answer_order: FALSE #>   answers: #>     ?: \"Is the number even?\" #>   messages: #>     correct: \"Correct!\" #>     incorrect: \"Incorrect\" #>   Options: #>     min: NA #>     max: NA #>     step: 1 #>     tolerance: 1.5e-08"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/question_radio.html","id":null,"dir":"Reference","previous_headings":"","what":"Radio question — question_radio","title":"Radio question — question_radio","text":"Creates radio button tutorial quiz question. student can select one radio button submitting answer. Note: Multiple correct answers allowed.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/question_radio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Radio question — question_radio","text":"","code":"question_radio(   text,   ...,   correct = \"Correct!\",   incorrect = \"Incorrect\",   try_again = incorrect,   allow_retry = FALSE,   random_answer_order = FALSE )"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/question_radio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Radio question — question_radio","text":"text Question option text ... Answers created answer() extra parameters passed onto question(). Function answers ignored radio questions user required select single answer. correct question, text print correct answer (defaults \"Correct!\"). answer, boolean indicating whether answer correct. incorrect Text print incorrect answer (defaults \"Incorrect\") allow_retry FALSE. try_again Text print incorrect answer (defaults \"Incorrect\") allow_retry TRUE. allow_retry Allow retry incorrect answers. Defaults FALSE. random_answer_order Display answers random order.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/question_radio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Radio question — question_radio","text":"Returns learnr question type \"learnr_radio\".","code":""},{"path":[]},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/question_radio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Radio question — question_radio","text":"","code":"question_radio(   \"Pick the letter B\",   answer(\"A\"),   answer(\"B\", correct = TRUE),   answer(\"C\"),   answer(\"D\"),   allow_retry = TRUE,   random_answer_order = TRUE ) #> Question: \"Pick the letter B\" #>   type: \"learnr_radio\" #>   allow_retry: TRUE #>   random_answer_order: TRUE #>   answers: #>     X: \"A\" #>     ✔: \"B\" #>     X: \"C\" #>     X: \"D\" #>   messages: #>     correct: \"Correct!\" #>     incorrect: \"Incorrect\" #>     try_again: \"Incorrect\""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/question_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Text box question — question_text","title":"Text box question — question_text","text":"Creates tutorial question asking student enter text. default text input appropriate short single-line text entry. longer text input, set rows /cols argument create larger text area. used answer(), student's submission must match answer exactly, minus whitespace trimming enabled trim = TRUE. complicated submission evaluation, use answer_fn() provide function checks student's submission. example, provide function evaluates user's submission using regular expressions.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/question_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Text box question — question_text","text":"","code":"question_text(   text,   ...,   correct = \"Correct!\",   incorrect = \"Incorrect\",   try_again = incorrect,   allow_retry = FALSE,   random_answer_order = FALSE,   placeholder = \"Enter answer here...\",   trim = TRUE,   rows = NULL,   cols = NULL,   options = list() )"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/question_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Text box question — question_text","text":"text Question option text ... Answers created answer() answer_fn(), extra parameters passed onto question(). Answers custom function checking correct question, text print correct answer (defaults \"Correct!\"). answer, boolean indicating whether answer correct. incorrect Text print incorrect answer (defaults \"Incorrect\") allow_retry FALSE. try_again Text print incorrect answer (defaults \"Incorrect\") allow_retry TRUE. allow_retry Allow retry incorrect answers. Defaults FALSE. random_answer_order Random answer order text questions automatically disabled ensure submission checked answer order provided author. placeholder character string giving user hint can entered control. Internet Explorer 8 9 support option. trim Logical determine whitespace answer removed.  Defaults TRUE. rows, cols Defines size text input area terms number rows character columns visible user. either rows cols provided, quiz input use shiny::textAreaInput() text input, otherwise default input element single-line shiny::textInput(). options Extra options stored question object. useful using custom question types. See sortable::question_rank() example question implementation uses options parameter.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/question_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Text box question — question_text","text":"Returns learnr question type \"learnr_text\".","code":""},{"path":[]},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/question_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Text box question — question_text","text":"","code":"question_text(   \"Please enter the word 'C0rrect' below:\",   answer(\"correct\", message = \"Don't forget to capitalize\"),   answer(\"c0rrect\", message = \"Don't forget to capitalize\"),   answer(\"Correct\", message = \"Is it really an 'o'?\"),   answer(\"C0rrect \", message = \"Make sure you do not have a trailing space\"),   answer(\"C0rrect\", correct = TRUE),   allow_retry = TRUE,   trim = FALSE ) #> Question: \"Please enter the word ‘C0rrect’ below:\" #>   type: \"learnr_text\" #>   allow_retry: TRUE #>   random_answer_order: FALSE #>   answers: #>     X: \"correct\"; \"Don’t forget to capitalize\" #>     X: \"c0rrect\"; \"Don’t forget to capitalize\" #>     X: \"Correct\"; \"Is it really an ‘o’?\" #>     X: \"C0rrect\"; \"Make sure you do not have a trailing space\" #>     ✔: \"C0rrect\" #>   messages: #>     correct: \"Correct!\" #>     incorrect: \"Incorrect\" #>     try_again: \"Incorrect\" #>   Options: #>     placeholder: \"Enter answer here...\" #>     trim: FALSE   # This question uses an answer_fn() to give a hint when we think the # student is on the right track but hasn't found the value yet. question_text(   \"What's the most popular programming interview question?\",   answer(\"fizz buzz\", correct = TRUE, \"That's right!\"),   answer_fn(function(value) {     if (grepl(\"(fi|bu)zz\", value)) {       incorrect(\"You're on the right track!\")     }   }, label = \"fizz or buzz\") ) #> Question: \"What’s the most popular programming interview question?\" #>   type: \"learnr_text\" #>   allow_retry: FALSE #>   random_answer_order: FALSE #>   answers: #>     ✔: \"fizz buzz\"; \"That’s right!\" #>     ?: \"fizz or buzz\" #>   messages: #>     correct: \"Correct!\" #>     incorrect: \"Incorrect\" #>   Options: #>     placeholder: \"Enter answer here...\" #>     trim: TRUE"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/quiz.html","id":null,"dir":"Reference","previous_headings":"","what":"Tutorial quiz questions — quiz","title":"Tutorial quiz questions — quiz","text":"Add interactive quiz questions tutorial. quiz question executed within shiny runtime provide flexibility types questions offered. four default types quiz questions: learnr_radio Radio button question.  question type allow single answer submission user.  answer must marked user submit answer. learnr_checkbox Check box question.  question type allow one answers submitted user.  least one answer must marked user submit answer. learnr_text Text box question.  question type allow free form text submitted user.  least one non-whitespace character must added user submit answer. learnr_numeric Numeric question.  question type allow number submitted user.  least one number must added user submit answer. Note, print behavior changed runtime now Shiny based.  questions quizes printed console, S3 structure information displayed.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/quiz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tutorial quiz questions — quiz","text":"","code":"quiz(..., caption = rlang::missing_arg())  question(   text,   ...,   type = c(\"auto\", \"single\", \"multiple\", \"learnr_radio\", \"learnr_checkbox\",     \"learnr_text\", \"learnr_numeric\"),   correct = \"Correct!\",   incorrect = \"Incorrect\",   try_again = NULL,   message = NULL,   post_message = NULL,   loading = NULL,   submit_button = rlang::missing_arg(),   try_again_button = rlang::missing_arg(),   allow_retry = FALSE,   random_answer_order = FALSE,   options = list() )"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/quiz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tutorial quiz questions — quiz","text":"... One questions answers caption Optional quiz caption (defaults \"Quiz\") text Question option text type Type quiz question. Typically can automatically determined based provided answers. Pass \"radio\" indicate even though multiple correct answers specified inputs include one correct answer still correct. Pass \"checkbox\" force use checkboxes (opposed radio buttons) even though one correct answer provided. correct question, text print correct answer (defaults \"Correct!\"). answer, boolean indicating whether answer correct. incorrect Text print incorrect answer (defaults \"Incorrect\") allow_retry FALSE. try_again Text print incorrect answer allow_retry TRUE. Defaults \"Incorrect. sure select every correct answer.\" checkbox questions \"Incorrect\" non-checkbox questions. message Additional message display along correct/incorrect feedback. message always displayed question submission. post_message Additional message display along correct/incorrect feedback. allow_retry TRUE, message displayed correct submission.  allow_retry FALSE, produce second message alongside message message value. loading Loading text display placeholder question loaded. provided, generic \"Loading...\" placeholder elements displayed. submit_button Label submit button. Defaults \"Submit Answer\" try_again_button Label try button. Defaults \"Submit Answer\" allow_retry Allow retry incorrect answers. Defaults FALSE. random_answer_order Display answers random order. options Extra options stored question object. useful using custom question types. See sortable::question_rank() example question implementation uses options parameter.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/quiz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tutorial quiz questions — quiz","text":"learnr quiz, collection questions.","code":""},{"path":[]},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/quiz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tutorial quiz questions — quiz","text":"","code":"quiz(   question(\"What number is the letter A in the alphabet?\",     answer(\"8\"),     answer(\"14\"),     answer(\"1\", correct = TRUE),     answer(\"23\"),     incorrect = \"See [here](https://en.wikipedia.org/wiki/English_alphabet) and try again.\",     allow_retry = TRUE   ),    question(\"Where are you right now? (select ALL that apply)\",     answer(\"Planet Earth\", correct = TRUE),     answer(\"Pluto\"),     answer(\"At a computing device\", correct = TRUE),     answer(\"In the Milky Way\", correct = TRUE),     incorrect = paste0(\"Incorrect. You're on Earth, \",                        \"in the Milky Way, at a computer.\")   ) ) #> Quiz: \"<span data-i18n=\"text.quiz\">Quiz<\/span>\" #>  #>   Question: \"What number is the letter A in the alphabet?\" #>     type: \"learnr_radio\" #>     allow_retry: TRUE #>     random_answer_order: FALSE #>     answers: #>       X: \"8\" #>       X: \"14\" #>       ✔: \"1\" #>       X: \"23\" #>     messages: #>       correct: \"Correct!\" #>       incorrect: \"See <a href=\"https://en.wikipedia.org/wiki/English_alphabet\">here<\/a> and try again.\" #>       try_again: \"See <a href=\"https://en.wikipedia.org/wiki/English_alphabet\">here<\/a> and try again.\" #>  #>   Question: \"Where are you right now? (select ALL that apply)\" #>     type: \"learnr_checkbox\" #>     allow_retry: FALSE #>     random_answer_order: FALSE #>     answers: #>       ✔: \"Planet Earth\" #>       X: \"Pluto\" #>       ✔: \"At a computing device\" #>       ✔: \"In the Milky Way\" #>     messages: #>       correct: \"Correct!\" #>       incorrect: \"Incorrect. You’re on Earth, in the Milky Way, at a computer.\""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/random_phrases_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add phrases to the bank of random phrases — random_phrases_add","title":"Add phrases to the bank of random phrases — random_phrases_add","text":"Augment random phrases available random_praise() random_encouragement() phrases . Note phrases added existing phrases, rather overwriting .","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/random_phrases_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add phrases to the bank of random phrases — random_phrases_add","text":"","code":"random_phrases_add(language = \"en\", praise = NULL, encouragement = NULL)"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/random_phrases_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add phrases to the bank of random phrases — random_phrases_add","text":"language language phrases added. praise, encouragement vector praising encouraging phrases, including final punctuation.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/random_phrases_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add phrases to the bank of random phrases — random_phrases_add","text":"Returns previous custom phrases invisibly called global setup chunk interactively. Otherwise, returns shiny pre- rendered chunk.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/random_phrases_add.html","id":"usage-in-learnr-tutorials","dir":"Reference","previous_headings":"","what":"Usage in learnr tutorials","title":"Add phrases to the bank of random phrases — random_phrases_add","text":"add random phrases learnr tutorial, can either include one calls random_phrases_add() global setup chunk:   Alternatively, can call random_phrases_add() separate, standard R chunk (echo = FALSE):","code":"```{r setup, include = FALSE}`r ''` library(learnr) random_phrases_add(   language = \"en\",   praise = \"Great work!\",   encouragement = \"I believe in you.\" ) ``` ```{r setup-phrases, echo = FALSE}`r ''` random_phrases_add(   language = \"en\",   praise = c(\"Great work!\", \"You're awesome!\"),   encouragement = c(\"I believe in you.\", \"Yes we can!\") ) ```"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/random_phrases_add.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add phrases to the bank of random phrases — random_phrases_add","text":"","code":"random_phrases_add(\"demo\", praise = \"Great!\", encouragement = \"Try again.\") random_praise(language = \"demo\") #> [1] \"Great!\" random_encouragement(language = \"demo\") #> [1] \"Try again.\""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/random_praise.html","id":null,"dir":"Reference","previous_headings":"","what":"Random praise and encouragement — random_praise","title":"Random praise and encouragement — random_praise","text":"Random praises encouragements sayings compliment question quiz experience.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/random_praise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random praise and encouragement — random_praise","text":"","code":"random_praise(language = NULL)  random_encouragement(language = NULL)"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/random_praise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random praise and encouragement — random_praise","text":"language language random phrase. currently supported languages include: en, es, pt, pl, tr, de, emo, testing (static phrases).","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/random_praise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random praise and encouragement — random_praise","text":"Character string random saying","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/random_praise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random praise and encouragement — random_praise","text":"","code":"random_praise() #> [1] \"Great work!\" random_praise() #> [1] \"Great work!\"  random_encouragement() #> [1] \"Give it another try.\" random_encouragement() #> [1] \"That's okay: you learn more from mistakes than successes. Let's do it one more time.\""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/run_tutorial.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a tutorial — run_tutorial","title":"Run a tutorial — run_tutorial","text":"Run tutorial provided installed R package.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/run_tutorial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a tutorial — run_tutorial","text":"","code":"run_tutorial(   name = NULL,   package = NULL,   ...,   shiny_args = NULL,   clean = FALSE,   as_rstudio_job = NULL )"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/run_tutorial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a tutorial — run_tutorial","text":"name Tutorial name (subdirectory within tutorials/ directory installed package). Alternatively, package provided, name may path local tutorial R Markdown file local directory containing learnr tutorial. package provided, name must tutorial name. package Name package. name path local directory containing learnr tutorial, package provided. ... Unused. Included future expansion ensure named arguments used. shiny_args Additional arguments forward shiny::runApp. clean TRUE, shiny prerendered HTML files removed tutorial re-rendered prior starting tutorial. as_rstudio_job Runs tutorial background RStudio job. default behavior run_tutorial() detects RStudio available can run jobs. Set FALSE disable run tutorial current R session. running RStudio job, run_tutorial() sets overrides launch.browser option shiny_args. can instead use shiny.launch.browser global option current R session set default behavior tutorial run. See shiny options documentation information.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/run_tutorial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a tutorial — run_tutorial","text":"Starts Shiny server running learnr tutorial.","code":""},{"path":[]},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/run_tutorial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a tutorial — run_tutorial","text":"","code":"# display all \"learnr\" tutorials available_tutorials(\"learnr\") #> Available tutorials: #> * learnr #>   - ex-data-basics    : \"Data basics\" #>   - ex-data-filter    : \"Filter observations\" #>   - ex-data-mutate    : \"Create new variables\" #>   - ex-data-summarise : \"Summarise Tables\" #>   - ex-setup-r        : \"Set Up\" #>   - hello             : \"Hello, Tutorial!\" #>   - polyglot          : \"Multi-language exercises\" #>   - quiz_question     : \"Tutorial Quiz Questions in `learnr`\" #>   - setup-chunks      : \"Chained setup chunks\" #>   - slidy             : \"Slidy demo\" #>   - sql-exercise      : \"Interactive SQL Exercises\"   # run basic example within learnr if (FALSE) { run_tutorial(\"hello\", \"learnr\") }"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/safe.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute R code in a safe R environment — safe","title":"Execute R code in a safe R environment — safe","text":"rendering (running) document R markdown, inherits current R Global environment.  produce unexpected behaviors, poisoning R Global environment existing variables.  rendering document new, safe R environment, vanilla, rendered document produced.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/safe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute R code in a safe R environment — safe","text":"","code":"safe(expr, ..., show = TRUE, env = safe_env())"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/safe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute R code in a safe R environment — safe","text":"expr expression contains necessary library calls execute.  Expressions within callr inherit existing, loaded libraries. ... parameters passed callr::r show Logical determines output displayed env Environment evaluate document ","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/safe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute R code in a safe R environment — safe","text":"result expr.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/safe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Execute R code in a safe R environment — safe","text":"environment variable LEARNR_INTERACTIVE set \"1\" \"0\" depending calling session interactive . Using safe necessary locally deployed.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/safe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute R code in a safe R environment — safe","text":"","code":"if (FALSE) { # Direct usage safe(run_tutorial(\"hello\", package = \"learnr\"))  # Programmatic usage library(rlang)  expr <- quote(run_tutorial(\"hello\", package = \"learnr\")) safe(!!expr)  tutorial <- \"hello\" safe(run_tutorial(!!tutorial, package = \"learnr\")) }"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/safe_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Safe R CMD environment — safe_env","title":"Safe R CMD environment — safe_env","text":"default, callr::rcmd_safe_env suppresses ability open browser window.  default execution environment within callr::r.  However, opening browser expected behavior within learnr package suppressed.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/safe_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safe R CMD environment — safe_env","text":"","code":"safe_env()"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/safe_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safe R CMD environment — safe_env","text":"list envvars, modified callr::rcmd_safe_env().","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/safe_env.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Safe R CMD environment — safe_env","text":"","code":"safe_env() #>             CYGWIN            R_TESTS        R_PDFVIEWER  #> \"nodosfilewarning\"                 \"\"            \"false\""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/tutorial.html","id":null,"dir":"Reference","previous_headings":"","what":"Tutorial document format — tutorial","title":"Tutorial document format — tutorial","text":"Long-form tutorial includes narrative, figures, videos, exercises, questions.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/tutorial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tutorial document format — tutorial","text":"","code":"tutorial(   fig_width = 6.5,   fig_height = 4,   fig_retina = 2,   fig_caption = TRUE,   progressive = FALSE,   allow_skip = FALSE,   dev = \"png\",   df_print = \"paged\",   smart = TRUE,   theme = \"rstudio\",   highlight = \"textmate\",   ace_theme = \"textmate\",   mathjax = \"default\",   extra_dependencies = NULL,   css = NULL,   includes = NULL,   md_extensions = NULL,   pandoc_args = NULL,   language = \"en\",   lib_dir = NULL,   ... )"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/tutorial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tutorial document format — tutorial","text":"fig_width Default width (inches) figures fig_height Default height (inches) figures fig_retina Scaling perform retina displays (defaults 2, currently works widely used retina displays). Set NULL prevent retina scaling. Note always NULL keep_md specified (fig_retina relies outputting HTML directly markdown document). fig_caption TRUE render figures captions progressive Display sub-topics progressively (.e. wait previous topics either completed skipped displaying subsequent topics). allow_skip Allow users skip sub-topics (especially useful progressive TRUE). dev Graphics device use figure output (defaults png) df_print Method used printing data frames. Valid values include \"default\", \"kable\", \"tibble\", \"paged\". \"default\" method uses corresponding S3 method print, typically print.data.frame. \"kable\" method uses knitr::kable function. \"tibble\" method uses tibble package print summary data frame. \"paged\" method creates paginated HTML table (note method valid formats produce HTML). addition named methods can also pass arbitrary function used printing data frames. can disable df_print behavior entirely setting option rmarkdown.df_print FALSE. See Data frame printing section bookdown book examples. smart Produce typographically correct output, converting straight quotes curly quotes, --- em-dashes, -- en-dashes, ... ellipses. Deprecated rmarkdown v2.2.0. theme Visual theme (\"rstudio\", default\", \"cerulean\", \"journal\", \"flatly\", \"readable\", \"spacelab\", \"united\", \"cosmo\", \"lumen\", \"paper\", \"sandstone\", \"simplex\", \"yeti\"). highlight Syntax highlighting style. Supported styles include \"default\", \"tango\", \"pygments\", \"kate\", \"monochrome\", \"espresso\", \"zenburn\", \"haddock\", \"textmate\". Pass ‘NULL’ prevent syntax highlighting.  Note, value pertains standard rmarkdown code, Ace editor highlighting. ace_theme Ace theme supplied ace code editor exercises. See learnr:::ACE_THEMES list possible values.  Defaults \"textmate\". mathjax Include mathjax. \"default\" option uses https URL MathJax CDN. \"local\" option uses local version MathJax (copied output directory). can pass alternate URL pass NULL exclude MathJax entirely. extra_dependencies Extra dependencies list html_dependency class objects typically generated htmltools:htmlDependency(). css CSS /Sass files include. Files extension .sass .scss compiled CSS via sass::sass(). Also, theme bslib::bs_theme() object, Sass code may reference relevant Bootstrap Sass variables, functions, mixins, etc. includes Named list additional content include within document (typically created using includes function). md_extensions Markdown extensions added removed default definition R Markdown. See rmarkdown_format additional details. pandoc_args Additional command line options pass pandoc language Language custom text UI elements. See vignette(\"multilang\", package = \"learnr\") information available options formatting lib_dir Directory copy dependent HTML libraries (e.g. jquery, bootstrap, etc.) . default name document _files appended . ... Forward parameters html_document","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/tutorial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tutorial document format — tutorial","text":"rmarkdown::output_format() learnr tutorials.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/tutorial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tutorial document format — tutorial","text":"","code":"tutorial() #> $knitr #> $knitr$opts_chunk #> $knitr$opts_chunk$dev #> [1] \"png\" #>  #> $knitr$opts_chunk$dpi #> [1] 96 #>  #> $knitr$opts_chunk$fig.width #> [1] 6.5 #>  #> $knitr$opts_chunk$fig.height #> [1] 4 #>  #> $knitr$opts_chunk$fig.retina #> [1] 2 #>  #> $knitr$opts_chunk$tutorial #> [1] TRUE #>  #> $knitr$opts_chunk$max.print #> [1] 1000 #>  #>  #> $knitr$opts_knit #> NULL #>  #> $knitr$knit_hooks #> $knitr$knit_hooks$tutorial #> function (before, options, envir)  #> { #>     if (!before) { #>         .learnr_messages$flush() #>     } #>     exercise_wrapper_div <- function(suffix = NULL, extra_html = NULL) { #>         if (before) { #>             if (!is.null(suffix))  #>                 suffix <- paste0(\"-\", suffix) #>             class <- paste0(\"exercise\", suffix) #>             lines <- ifelse(is.numeric(options$exercise.lines),  #>                 options$exercise.lines, 0) #>             completion <- as.numeric(options$exercise.completion %||%  #>                 1 > 0) #>             diagnostics <- as.numeric(options$exercise.diagnostics %||%  #>                 1 > 0) #>             startover <- as.numeric(options$exercise.startover %||%  #>                 1 > 0) #>             paste0(\"<div class=\\\"tutorial-\", class, \"\\\" data-label=\\\"\",  #>                 options$label, \"\\\" data-completion=\\\"\", completion,  #>                 \"\\\" data-diagnostics=\\\"\", diagnostics, \"\\\" data-startover=\\\"\",  #>                 startover, \"\\\" data-lines=\\\"\", lines, \"\\\" data-pipe=\\\"\",  #>                 htmltools::htmlEscape(exercise_option_pipe(options)),  #>                 \"\\\">\") #>         } #>         else { #>             c(extra_html, \"<\/div>\") #>         } #>     } #>     if (is_exercise_chunk(options)) { #>         extra_html <- NULL #>         if (before) { #>             verify_tutorial_chunk_label() #>             knitr::knit_meta_add(list(list(ace_html_dependency()),  #>                 list(clipboardjs_html_dependency()))) #>             exercise_server_chunk(options$label) #>         } #>         else { #>             options$engine <- knitr_engine(options$engine) #>             options$exercise.df_print <- options$exercise.df_print %||%  #>                 knitr::opts_knit$get(\"rmarkdown.df_print\") %||%  #>                 \"default\" #>             options$exercise.checker <- dput_to_string(options$exercise.checker) #>             all_chunks <- get_all_chunks(options) #>             code_check_chunk <- get_knitr_chunk(paste0(options$label,  #>                 \"-code-check\")) #>             error_check_chunk <- get_knitr_chunk(paste0(options$label,  #>                 \"-error-check\")) #>             check_chunk <- get_knitr_chunk(paste0(options$label,  #>                 \"-check\")) #>             solution <- get_knitr_chunk(paste0(options$label,  #>                 \"-solution\")) #>             tests <- get_knitr_chunk(paste0(options$label, \"-tests\")) #>             class(options) <- NULL #>             all_setup_code <- NULL #>             if (length(all_chunks) > 1) { #>                 all_setup_code <- paste0(vapply(all_chunks[-length(all_chunks)],  #>                   function(x) x$code, character(1)), collapse = \"\\n\") #>             } #>             this_exercise <- structure(list(label = options[[\"label\"]],  #>                 global_setup = get_setup_global_exercise(), setup = all_setup_code,  #>                 chunks = all_chunks, code_check = code_check_chunk,  #>                 error_check = error_check_chunk, check = check_chunk,  #>                 solution = solution, tests = tests, options = options[setdiff(names(options),  #>                   \"tutorial\")], engine = options$engine, version = current_exercise_version),  #>                 class = c(options$engine, \"tutorial_exercise\")) #>             rmarkdown::shiny_prerendered_chunk(\"server\", sprintf(\"learnr:::store_exercise_cache(%s)\",  #>                 dput_to_string(this_exercise))) #>             caption <- if (!is.null(options$exercise.cap)) { #>                 as.character(options$exercise.cap) #>             } #>             else { #>                 cap_engine <- knitr_engine(options$engine) #>                 cap_engine_file <- system.file(file.path(\"internals\",  #>                   \"icons\", paste0(cap_engine, \".svg\")), package = \"learnr\") #>                 if (file.exists(cap_engine_file)) { #>                   as.character(htmltools::div(class = \"tutorial_engine_icon\",  #>                     htmltools::HTML(readLines(cap_engine_file)))) #>                 } #>                 else { #>                   cap_engine_val <- knitr_engine_caption(options[[\"engine\"]]) #>                   i18n_span(\"text.enginecap\", paste(cap_engine_val,  #>                     \"Code\"), opts = list(engine = cap_engine_val)) #>                 } #>             } #>             ui_options <- list(engine = options$engine, has_checker = (!is.null(check_chunk) ||  #>                 !is.null(code_check_chunk)), caption = as.character(caption)) #>             extra_html <- c(\"<script type=\\\"application/json\\\" data-ui-opts=\\\"1\\\">\",  #>                 jsonlite::toJSON(ui_options, auto_unbox = TRUE),  #>                 \"<\/script>\") #>         } #>         exercise_wrapper_div(extra_html = extra_html) #>     } #>     else if (is_exercise_support_chunk(options)) { #>         if (is_exercise_support_chunk(options, type = c(\"hint\",  #>             \"hint-\\\\d+\"))) { #>             exercise_wrapper_div(suffix = \"support\") #>         } #>         else if (is_exercise_support_chunk(options, type = \"solution\")) { #>             if (get_reveal_solution_option(options)) { #>                 exercise_wrapper_div(suffix = \"support\") #>             } #>         } #>     } #> } #> <bytecode: 0x55647fca8710> #> <environment: 0x5564838ebef0> #>  #>  #> $knitr$opts_hooks #> $knitr$opts_hooks$tutorial #> function (options)  #> { #>     options$label <- unname(options$label) #>     exercise_chunk <- is_exercise_chunk(options) #>     exercise_support_chunk <- is_exercise_support_chunk(options) #>     exercise_setup_chunk <- is_exercise_support_chunk(options,  #>         type = \"setup\") #>     if ((exercise_chunk || exercise_support_chunk) && !is_shiny_prerendered_active()) { #>         stop(\"Tutorial exercises require the use of 'runtime: shiny_prerendered'\",  #>             call. = FALSE) #>     } #>     if (exercise_chunk && is_chunk_empty_or_mismatched_exercise(options)) { #>         ensure_knit_code_exists(options) #>     } #>     if (exercise_chunk) { #>         initialize_tutorial() #>         options$echo <- TRUE #>         options$include <- TRUE #>         options$highlight <- FALSE #>         options$comment <- NA #>         if (!is.null(options$exercise.eval))  #>             options$eval <- options$exercise.eval #>         else options$eval <- FALSE #>         return(options) #>     } #>     if (exercise_support_chunk) { #>         options$echo <- TRUE #>         options$include <- TRUE #>         options$eval <- FALSE #>         options$highlight <- FALSE #>     } #>     if (is_exercise_support_chunk(options, type = c(\"code-check\",  #>         \"error-check\", \"check\", \"tests\"))) { #>         options$include <- FALSE #>     } #>     if (is_exercise_support_chunk(options, type = \"check\")) { #>         if (is.null(knitr::opts_chunk$get(\"exercise.checker\"))) { #>             stop(\"An exercise check chunk exists ('\", options$label,  #>                 \"') but an \", \"exercise checker function is not configured for this tutorial. \",  #>                 \"Please use `tutorial_options()` to define an `exercise.checker`.\") #>         } #>     } #>     if (is_exercise_support_chunk(options, type = \"solution\")) { #>         options$echo <- get_reveal_solution_option(options) #>     } #>     if (exercise_setup_chunk) { #>         exercise_eval <- knitr::opts_chunk$get(\"exercise.eval\") #>         if (is.null(exercise_eval))  #>             exercise_eval <- FALSE #>         labels <- exercise_chunks_for_setup_chunk(options$label) #>         if (grepl(\"-setup$\", options$label))  #>             labels <- c(labels, sub(\"-setup$\", \"\", options$label)) #>         labels <- paste0(\"\\\"\", labels, \"\\\"\") #>         labels <- paste0(\"c(\", paste(labels, collapse = \", \"),  #>             \")\") #>         label_query <- paste0(\"knitr::all_labels(label %in% \",  #>             labels, \", \", \"identical(exercise.eval, \", !exercise_eval,  #>             \"))\") #>         default_reversed <- length(eval(parse(text = label_query))) >  #>             0 #>         if (default_reversed)  #>             exercise_eval <- !exercise_eval #>         options$eval <- exercise_eval #>         options$echo <- FALSE #>     } #>     if (is_exercise_support_chunk(options, type = \"error-check\") &&  #>         is.null(get_knitr_chunk(sub(\"-error\", \"\", options$label)))) { #>         stop(\"Exercise '\", sub(\"-error-check\", \"\", options$label),  #>             \"': \", \"a *-check chunk is required when using an *-error-check chunk, but\",  #>             \" '\", sub(\"-error\", \"\", options$label), \"' was not found in the tutorial.\",  #>             call. = FALSE) #>     } #>     options #> } #> <bytecode: 0x55647fc9e6a0> #> <environment: 0x5564838ebef0> #>  #>  #> $knitr$opts_template #> NULL #>  #>  #> $pandoc #> $pandoc$to #> [1] \"html4\" #>  #> $pandoc$from #> [1] \"markdown+autolink_bare_uris+tex_math_single_backslash\" #>  #> $pandoc$args #>  [1] \"--embed-resources\"                                                                                 #>  [2] \"--standalone\"                                                                                      #>  [3] \"--variable\"                                                                                        #>  [4] \"bs3=TRUE\"                                                                                          #>  [5] \"--section-divs\"                                                                                    #>  [6] \"--template\"                                                                                        #>  [7] \"/home/runner/work/_temp/Library/rmarkdown/rmd/h/default.html\"                                      #>  [8] \"--no-highlight\"                                                                                    #>  [9] \"--variable\"                                                                                        #> [10] \"highlightjs=1\"                                                                                     #> [11] \"--section-divs\"                                                                                    #> [12] \"--reference-location=section\"                                                                      #> [13] \"--template\"                                                                                        #> [14] \"/home/runner/work/_temp/Library/learnr/rmarkdown/templates/tutorial/resources/tutorial-format.htm\" #> [15] \"--no-highlight\"                                                                                    #> [16] \"--variable\"                                                                                        #> [17] \"highlightjs=1\"                                                                                     #> [18] \"--variable\"                                                                                        #> [19] \"progressive=false\"                                                                                 #> [20] \"--variable\"                                                                                        #> [21] \"allow-skip=false\"                                                                                  #> [22] \"--variable\"                                                                                        #> [23] \"learnr-version=0.11.5.9000\"                                                                        #>  #> $pandoc$keep_tex #> [1] FALSE #>  #> $pandoc$latex_engine #> [1] \"pdflatex\" #>  #> $pandoc$ext #> [1] \".html\" #>  #> $pandoc$convert_fun #> NULL #>  #> $pandoc$lua_filters #> [1] \"/home/runner/work/_temp/Library/rmarkdown/rmarkdown/lua/pagebreak.lua\" #> [2] \"/home/runner/work/_temp/Library/rmarkdown/rmarkdown/lua/latex-div.lua\" #>  #>  #> $keep_md #> [1] FALSE #>  #> $clean_supporting #> [1] FALSE #>  #> $df_print #> [1] \"paged\" #>  #> $pre_knit #> function (...)  #> { #>     op(base(...), overlay(...)) #> } #> <bytecode: 0x55647b8ade68> #> <environment: 0x5564839e9530> #>  #> $post_knit #> function (...)  #> { #>     op(base(...), overlay(...)) #> } #> <bytecode: 0x55647b8ade68> #> <environment: 0x5564839e8e30> #>  #> $pre_processor #> function (...)  #> { #>     op(base(...), overlay(...)) #> } #> <bytecode: 0x55647b8ade68> #> <environment: 0x5564839ec560> #>  #> $intermediates_generator #> function (original_input, intermediates_dir)  #> { #>     copy_render_intermediates(original_input, intermediates_dir,  #>         !self_contained) #> } #> <bytecode: 0x55647b960838> #> <environment: 0x556483946830> #>  #> $post_processor #> function (metadata, input_file, output_file, ...)  #> { #>     original_output_file <- output_file #>     output_file <- overlay(metadata, input_file, output_file,  #>         ...) #>     if (!is.null(attr(output_file, \"post_process_original\")))  #>         base(metadata, input_file, original_output_file, ...) #>     base(metadata, input_file, output_file, ...) #> } #> <bytecode: 0x55647b8a8140> #> <environment: 0x5564839eb6b8> #>  #> $file_scope #> NULL #>  #> $on_exit #> function ()  #> { #>     if (is.function(base))  #>         base() #>     if (is.function(overlay))  #>         overlay() #> } #> <bytecode: 0x55647b8a47d0> #> <environment: 0x556483a074f8> #>  #> attr(,\"class\") #> [1] \"rmarkdown_output_format\""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/tutorial_html_dependency.html","id":null,"dir":"Reference","previous_headings":"","what":"Tutorial HTML dependency — tutorial_html_dependency","title":"Tutorial HTML dependency — tutorial_html_dependency","text":"HTML dependency core tutorial JS CSS. included dependency custom tutorial formats wish ensure tutorial.js tutorial.css loaded prior scripts stylesheets.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/tutorial_html_dependency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tutorial HTML dependency — tutorial_html_dependency","text":"","code":"tutorial_html_dependency()"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/tutorial_html_dependency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tutorial HTML dependency — tutorial_html_dependency","text":"learnr's HTML dependencies","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/tutorial_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Set tutorial options — tutorial_options","title":"Set tutorial options — tutorial_options","text":"Set various tutorial options control display evaluation exercises.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/tutorial_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set tutorial options — tutorial_options","text":"","code":"tutorial_options(   exercise.cap = NULL,   exercise.eval = FALSE,   exercise.timelimit = 30,   exercise.lines = NULL,   exercise.pipe = NULL,   exercise.blanks = NULL,   exercise.checker = NULL,   exercise.error.check.code = NULL,   exercise.completion = TRUE,   exercise.diagnostics = TRUE,   exercise.startover = TRUE,   exercise.reveal_solution = TRUE )"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/tutorial_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set tutorial options — tutorial_options","text":"exercise.cap Caption exercise chunk (defaults engine's icon combination engine \" code\"). exercise.eval Whether pre-evaluate exercise reader can see default output (defaults FALSE). exercise.timelimit Number seconds limit execution time (defaults 30). exercise.lines Lines code exercise editor (defaults number lines code chunk). exercise.pipe characters enter user presses \"Insert Pipe\" keyboard shortcut exercise editor (Ctrl/Cmd + Shift + M). can set tutorial level individual exercise. NULL (default), base R pipe (|>) used tutorial rendered R >= 4.1.0, otherwise magrittr pipe (%>%) used. exercise.blanks regular expression used identify blanks submitted code user fill . TRUE (default), blanks three underscores row. FALSE, blank checking performed. exercise.checker Function used check exercise answers (e.g., gradethis::grade_learnr()). exercise.error.check.code string containing R code use checking code exercise evaluation error occurs (e.g., \"gradethis::grade_code()\"). exercise.completion Use code completion exercise editors. exercise.diagnostics Show diagnostics exercise editors. exercise.startover Show \"Start \" button exercise. exercise.reveal_solution Whether reveal exercise solution solution chunk provided.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/tutorial_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set tutorial options — tutorial_options","text":"Nothing. Invisibly sets knitr::opts_chunk settings.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/tutorial_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set tutorial options — tutorial_options","text":"","code":"if (interactive()) {   tutorial_options(exercise.eval = TRUE, exercise.timelimt = 10) }"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/tutorial_package_dependencies.html","id":null,"dir":"Reference","previous_headings":"","what":"List tutorial dependencies — tutorial_package_dependencies","title":"List tutorial dependencies — tutorial_package_dependencies","text":"List R packages required run particular tutorial.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/tutorial_package_dependencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List tutorial dependencies — tutorial_package_dependencies","text":"","code":"tutorial_package_dependencies(name = NULL, package = NULL)"},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/tutorial_package_dependencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List tutorial dependencies — tutorial_package_dependencies","text":"name tutorial name. name NULL, tutorials within package searched. package R package providing tutorial. package NULL, tutorials searched.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/tutorial_package_dependencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List tutorial dependencies — tutorial_package_dependencies","text":"character vector package names required execution.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/reference/tutorial_package_dependencies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List tutorial dependencies — tutorial_package_dependencies","text":"","code":"tutorial_package_dependencies(package = \"learnr\") #>  [1] \"DBI\"          \"Lahman\"       \"RSQLite\"      \"dygraphs\"     #>  [5] \"gradethis\"    \"knitr\"        \"learnr\"       \"nycflights13\" #>  [9] \"rlang\"        \"rmarkdown\"    \"shiny\"        \"sortable\"     #> [13] \"tidyverse\""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"learnr-development-version","dir":"Changelog","previous_headings":"","what":"learnr (development version)","title":"learnr (development version)","text":"Removed dependency ellipsis (@olivroy, #809) Added Norwegian translation contributed @jonovik. (#806)","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"learnr-0115","dir":"Changelog","previous_headings":"","what":"learnr 0.11.5","title":"learnr 0.11.5","text":"CRAN release: 2023-09-28","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"new-features-0-11-5","dir":"Changelog","previous_headings":"","what":"New Features","title":"learnr 0.11.5","text":"can now customize “continue” button text sub-topics adding ‘data-continue-text’ custom label property section heading — e.g. ### Subtopic Title {data-continue-text=\"Show Solution\"} (@dave-mills #777). new exercise.pipe tutorial exercise chunk option can now used determine pipe operator used interactive exercises. default \"|>\" (native R pipe) tutorial rendered R >= 4.1.0, \"%>%\" otherwise (magrittr pipe). can set pipe used tutorial using tutorial_options(), can use exercise.pipe knitr chunk option individual exercise chunk. (#804)","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"bug-fixes-and-improvements-0-11-5","dir":"Changelog","previous_headings":"","what":"Bug fixes and improvements","title":"learnr 0.11.5","text":"learnr tutorials now work Quarto comment-style chunk options used set chunk label (thanks @jimjam-slam, #795). Added new quick restore option restores last submitted exercise code output submission, output available restored. option enabled setting global option tutorial.quick_restore = 2 environment variable TUTORIAL_QUICK_RESTORE=2. option augments quick restore value TRUE 1, wherein last submitted code restored, users need click “Submit” button evaluate see output. (#794) LC_ALL environment variable \"C\" \"C.UTF-8\", R may ignore LANGUAGE environment variable, means learnr may able control language R’s messages. learnr’s tests longer test R message translations cases. deploying tutorial written language English, ensure LC_ALL environment variable set \"C\" \"C.UTF-8\" may need set LANGUAGE variable via .Renviron file rather relying learnr (#801).","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"learnr-0114","dir":"Changelog","previous_headings":"","what":"learnr 0.11.4","title":"learnr 0.11.4","text":"CRAN release: 2023-05-24 Moved curl Imports Suggests. curl required using external evaluator (#776). default try_again message checkbox questions now prompts student “select every correct answer” regardless whether question created question() question_checkbox() (#783).","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"learnr-0113","dir":"Changelog","previous_headings":"","what":"learnr 0.11.3","title":"learnr 0.11.3","text":"CRAN release: 2023-03-15 Fixed issue prevented authors using symbols, T variable, value exercise chunk option, caused tutorials chunks exercise = T fail render (thanks @cknotz #757, #758). embedded Ace editor used learnr exercises now defaults tab width 2, aligning Tidyverse style guide (#761). learnr now pre-renders (English) feedback message provides non-ASCII characters included submitted unparsable R code. makes feedback useful even learnr’s -browser translations aren’t available (#765).","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"learnr-0112","dir":"Changelog","previous_headings":"","what":"learnr 0.11.2","title":"learnr 0.11.2","text":"CRAN release: 2022-11-08 Fixed issue prevented htmlwidgets working exercise code unless similar widgets added tutorial prose (thanks @munoztd0 #744, #745). learnr now requires markdown version 1.3 later (#745). Fixed test involving UTF-8 character strings (#749).","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"learnr-0111","dir":"Changelog","previous_headings":"","what":"learnr 0.11.1","title":"learnr 0.11.1","text":"CRAN release: 2022-10-19 maintenance release adjusts example several tests CRAN.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"learnr-0110","dir":"Changelog","previous_headings":"","what":"learnr 0.11.0","title":"learnr 0.11.0","text":"CRAN release: 2022-10-16","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"authoring-0-11-0","dir":"Changelog","previous_headings":"","what":"Authoring","title":"learnr 0.11.0","text":"now possible provide customized feedback exercise submission produces evaluation error. checking function applied user code results error defined via exercise.error.checker option tutorial_options() (#403). gradethis::grade_learnr_error() sensible default option. Additionally, user submissions R code exercises now checked parsing errors prior checks. submitted code unparsable, friendly error feedback message returned evaluation checking performed (@rossellhayes #547). Authors can now provide data files use interactive exercises. files stored data/ directory adjacent tutorial R Markdown document now automatically made available within exercises. alternative directory can specified using tutorial.data_dir global option (@rossellhayes #539). informative error now thrown exercise chunk’s body contains nothing, lets tutorial author know something (e.g., empty line(s)) must present chunk body rendered exercise (@KatherineCox #172, #410). Custom CSS files now loaded last, learnr’s web dependencies (#574). Footnotes now appear end section appear (thanks @plukethep, #647).","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"setup-chunk-chaining-0-11-0","dir":"Changelog","previous_headings":"","what":"Setup Chunk Chaining","title":"learnr 0.11.0","text":"Exercise chunks can now “chained together” via chained setup chunks. setup chunk one exercise may depend chunks, including setup chunks exercises, allowing author form chain setup code allows interactive exercises progressively work problem. chains defined using exercise.setup chunk option; use run_tutorial(\"setup_chunks\", \"learnr\") run demo tutorial (@nischalshrestha #390). part work, learnr now throws error pre-render author specifies non-existent chunk label exercise.setup exercise. learnr also now forces chunk option include = FALSE setup chunks evaluated part exercise avoid unexpected printing results.","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"internationalization-and-customization-0-11-0","dir":"Changelog","previous_headings":"","what":"Internationalization and Customization","title":"learnr 0.11.0","text":"Text throughout learnr interface can customized localized using new language argument tutorial() (#456, #479). random positive encourage phrases generated learnr can also translated (#538). Community contributions additional languages welcomed, possible customize language used learnr interface phrases without requiring official support via learnr package. can read features vignette(\"multilang\", package = \"learnr\"). grateful following community members providing additional languages: Basque language support contributed @mikelmadina (#489) Portuguese language support contributed @beatrizmilz (#488, #551) Spanish language support contributed @yabellini (#483, #546) Turkish language support contributed @hyigit2 @coatless (#493, #554) German language support contributed @NinaCorrelAid (#611, #612) Korean language support contributed @choonghyunryu (#634) Chinese language support contributed @shalom-lab (#681) Polish language support contributed Jakub Jędrusiak (@kuba58426) (#686) Messages generated R exercises now translated match tutorial language, translations available either base R R package generating message (@rossellhayes #558). Breaking Change: random_praise() longer includes phrase \"Correct! \". Instead, simply returns random praising statement (#453, #463).","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"support-for-additional-programming-languages-0-11-0","dir":"Changelog","previous_headings":"","what":"Support for Additional Programming Languages","title":"learnr 0.11.0","text":"Added new polyglot tutorial learnr. tutorial demonstrates learnr tutorials might mix R, Python, SQL exercises. See run_tutorial(\"polyglot\", \"learnr\") example (#397). engine now passed exercise.checker communicate programming language checked exercise (#397). exercise.cap exercise/chunk option now accepts HTML input. exercise.cap provided, exercise.cap default combination exercise engine \" code\" (#397, #429). Improved support SQL exercises makes possible check student submissions SQL exercises. See run_tutorial(\"sql-exericse\", \"learnr\") online SQL exercise demo example tutorial graded SQL exercises (#668). Exercise editors now use syntax highlighting basic autocompletion exercises languages R syntax highlighting support JavaScript, Julia, Python SQL (#693). Broadly improved support additional programming languages added support Python exercises (#724).","code":""},{"path":[]},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"exercises-0-11-0","dir":"Changelog","previous_headings":"Interactive Exercises and Questions","what":"Exercises","title":"learnr 0.11.0","text":"Users now warned submission contains blanks expected fill . default blank pattern three underscores, e.g. ____. pattern blanks can set exercise.blanks chunk tutorial option (@rossellhayes #547). Users submit unparsable code containing non-ASCII characters now presented informative feedback. Non-ASCII characters common source code problems often appear code students copy paste text source applies automatic Unicode formatting. submission contains Unicode-formatted quotation marks (e.g. curly quotes) dashes, student given suggested replacement ASCII characters. cases, student simply prompted delete non-ASCII characters retype manually (@rossellhayes #642). Authors can choose reveal (default) hide solution exercise. Set exercise.reveal_solution chunk options *-solution chunk choose whether solution revealed user. option can also set globally tutorial_options(). future version learnr, default likely changed hide solutions (#402). Exercises may now include -tests chunks. chunks don’t appear tutorial text code stored internal exercise data. future, chunks used provide automated exercise testing (#664, #700). Keyboard navigation keyboard shortcuts interactive exercise code editor improved: avoid trapping keyboard focus allow users navigate tutorial keyboard, pressing Esc interactive exercise code editor now temporarily disables use Tab indenting, making possible users move next previous element tutorial (#652). Interactive exercises now know RStudio shortcuts pipe (%>%) (Command/Control + Shift + M) assignment (<-) (Alt + -) operators exercise code boxes (#472). Clicking Run Code using keyboard shortcut (Cmd/Ctrl + Enter) now runs selected code , code selected (thanks @petzi53 #512, #514). Commented code within exercise longer auto completed (#604). Hitting TAB key exercise always opened auto-completion drop . Now, hitting TAB key also complete currently selected code completion (#428). native R pipe, introduced R 4.1, now recognized valid R operator interactive exercise editor (thanks @ijlyttle, #595). Feedback messages can now htmltools::tag(), htmltools::tagList(), character message (#458). longer display invisible exercise result warning automatically. Instead, authors must set exercise chunk option exercise.warn_invisible = TRUE display invisible result warning message (@nischalshrestha #373). exercise.completion = TRUE, completion longer performed inside quotes. (intentionally) prevents student able list files R server (#401). exercise returns HTML generated htmlwidgets htmltools, learnr remove HTML dependences created htmltools::tags$head() result returned tutorial. avoids conflicts scripts dependencies used learnr tutorial (thanks @andysouth, #484). Fixed exercise progress spinner prematurely cleared (#384). Empty exercise chunks now allowed. Please use caution: rare cases, knitr learnr may notice duplicate chunk labels exercise uses duplicated label. Allowing empty exercise chunks improves ergonomics using knitr’s chunk option comments (#712).","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"exercise-evaluation-0-11-0","dir":"Changelog","previous_headings":"Interactive Exercises and Questions","what":"Exercise Evaluation","title":"learnr 0.11.0","text":"Breaking Change: -code-check chunk returns feedback exercise submission, result exercise longer displayed correct answer (feedback displayed). result feedback displayed, checking performed -check chunk (.e., don’t provide -code-check chunk) (#403). Exercise checking now conducted temporary directory exercises evaluated (@rossellhayes #544). Exercises evaluation now communicates stage evaluation via new stage argument passed checker function. Stages may \"code_check\", \"error_check\", \"check\". makes easier exercise checking function determine point checking applied exercise evaluation life cycle (@rossellhayes #610). options() environment variables now reset rendering exercises changes made user input checking code affect exercises (@rossellhayes #542). Parse errors user code fails parse can now inspected error checker, errors exercise setup chunks . Instead, global setup setup chunk errors raised internal errors user-facing warning. general, internal errors now handled consistently (#596). parsing error object now \"parse_error\" class can use inherits(last_value, \"parse_error\") learnr error checking code inherits(.result, \"parse_error\") gradethis error checking differentiate parse error error types (#658). learnr now properly enforces time limit set exercise.timelimit chunk option (#366, #368, #494). envir_prep environment used exercise checking now accurately captures result global exercise-specific setup code, representing environment user code evaluated (described documentation). learnr also ensures envir_result (environment containing result evaluating global, setup user code) sibling envir_prep (#480). allow_skip set FALSE, users now required run exercise non-empty code order move forward. exercise grading code, users required submit one (non-empty) answer (thanks @gaelso #616, #633). exercise includes -check chunk exercise.checker function defined, learnr now throw error render reminding author use tutorial_options() define exercise checker (#640).","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"questions-0-11-0","dir":"Changelog","previous_headings":"Interactive Exercises and Questions","what":"Questions","title":"learnr 0.11.0","text":"Authors can now provide function-answers answer_fn(). Authors can provide function takes single argument passed student’s question submission. function decides question correct provides feedback returning correct() incorrect() feedback message (#657). new question_numeric() question type allows authors ask users provide number (#461). question_text() gains rows cols parameters. either provided, multi-line textAreaInput() used text input (thanks @dtkaplan #455, #460). Correct/incorrect question markers now configurable via CSS. can change style markers using .tutorial-question .question-final .correct::.tutorial-question .question-final .incorrect::selectors. new helper function, finalize_question(), can used apply .question-final class custom learnr questions (#531). Fixed bug avoid selecting answer labeled \"FALSE\" default question_radio() (#515). Fixed unexpected behavior question_is_correct.learnr_text() trim = FALSE. Comparisons now happen original input value, HTML() formatted answer value (#376). quiz’s question answer text characters, e.g. HTML, htmltools tags, numeric, etc., now cast characters displayed answer text quiz’s default loading text (#450).","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"events-and-state-0-11-0","dir":"Changelog","previous_headings":"","what":"Events and State","title":"learnr 0.11.0","text":"Breaking Change: exercise_submission event renamed exercise_result now includes following new fields (#337): id - randomly generated identifier can used align associated exercise_result event time_elapsed - time required run exercise (seconds) timeout_exceeded - indicates whether exercise interrupted due exceeded timeout. May NA platforms/evaluators information known reported. Added general-purpose event handler system, powered functions event_register_handler() one_time(). functions can used execute code every time learnr-specific event occurs (#398). Several learnr events updated two new events created: new event named \"section_viewed\" now reports new section becomes visible. Added \"exercise_submitted\" event fired evaluating exercise. event can associated \"exercise_result\" event using randomly generated id included data events (#337). \"exercise_submitted\" event also now contains restore field indicating whether exercise restored previous execution (TRUE), exercise run interactively (FALSE) (#370). new label field \"exercise_hint\" event identifies exercise user requested hint (#377). Previously, question submission reset, recorded \"question_submission\" event value reset = TRUE. Now separate event, \"reset_question_submission\". Tutorial authors can now access current state user’s progress tutorial get_tutorial_state() get information current tutorial get_tutorial_info() (#562). Tutorial state now returned get_tutorial_state() order appearance tutorial. full list exercises questions included items list returned get_tutorial_info() (thanks @NuoWenLei #570, #571). get_tutorial_info() can now provide complete tutorial info .Rmd pre-rendered .html tutorial file outside Shiny app (#688, #702). longer forward checker code browser (html), instead cache (@nischalshrestha #390). Fail gracefully unable open indexedDB store (e.g. cross-origin iframes Safari) (#417).","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"running-tutorials-0-11-0","dir":"Changelog","previous_headings":"","what":"Running Tutorials","title":"learnr 0.11.0","text":"Running learnr tutorials run_tutorial() improved (#601): run_tutorial() can now run local tutorials addition tutorials hosted package. run local tutorial provide path tutorial directory containing tutorial via name argument without providing package argument. Breaking change: names must provided arguments run_tutorial() name package. run_tutorial() gains clean argument completely re-render tutorial needed. learnr tutorials now run background RStudio jobs open viewer pane run_tutorial() called RStudio. default disabled non-interactive settings as_rstudio_job = FALSE. can control tutorial opened shiny.launch.browser global option. run_tutorial() now renders tutorials temp directory R user write permissions (#347). Many HTML dependencies used learnr updated recent versions (#655). learnr now uses: Ace version 1.10.1 clipboard.js version 2.0.10 Bootbox version 5.5.2 i18next version 21.6.10 learnr’s knitr hooks now set learnr::tutorial R Markdown format. also registered tutorials run run_tutorial() (thanks @czucca #598, #599). “forked” evaluator (default used Linux), learnr now limits number forked exercises learnr execute parallel. Previously, uncapped, cause learnr process run memory influx traffic arrived. default limit 3, can configured using tutorial.max.forked.procs option TUTORIAL_MAX_FORKED_PROCS environment variable (#353). Introduced experimental function external_evaluator() can used define exercise evaluator runs remote server invoked via HTTP. allows exercise execution performed outside Shiny process hosting learnr document (#345, #354). Added option quickly restoring tutorial without re-evaluating last stored exercise submission. feature enabled setting global option tutorial.quick_restore = TRUE environment variable TUTORIAL_QUICK_RESTORE=1 (thanks @mstackhouse, #509). exercise_result() longer combines code output feedback; now happens just presenting exercise result user (#522). Support updated Bootstrap 4+ popover dispose method name, previously destroy (#560). Forked evaluator (used default Linux shinyapps.io) now collects exercise evaluation result , avoiding “wait child” warning (thanks @tombeesley #449, #631). learnr::tutorial() now allows authors adjust value lib_dir (#648). learnr now uses suggests shinytest2 automated testing tutorials browser. previously using shinytest test tutorials, may find Migrating shinytest article helpful (#694).","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"learnr-0101","dir":"Changelog","previous_headings":"","what":"learnr 0.10.1","title":"learnr 0.10.1","text":"CRAN release: 2020-02-13","code":""},{"path":[]},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"minor-new-features-and-improvements-0-10-1","dir":"Changelog","previous_headings":"","what":"Minor new features and improvements","title":"learnr 0.10.1","text":"learnr gained function learnr::tutorial_package_dependencies(), used enumerate tutorial’s R package dependencies. Front-ends can use ensure tutorial’s dependencies satisfied attempting run tutorial. learnr::available_tutorials() gained column package_dependencies containing required packages run document (#329). Include vignette publishing learnr tutorials shinyapps.io (#322). learnr’s built-tutorials now come description part YAML header, intention used front-end software catalogues available learnr tutorials system (#312). Add session_start session_stop events (#311).","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"bug-fixes-0-10-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"learnr 0.10.1","text":"Fixed bug broken exercise code created non-“length-one character vector” (#311). Fixed extra parameter documentation bug CRAN (#323). Fixed video initialization error caused jQuery version increase Shiny (#326). Fixed progressive reveal bug next section displayed unless refreshed (#330). Fixed bug topics loaded contained non-ascii characters (#330).","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"learnr-0100","dir":"Changelog","previous_headings":"","what":"learnr 0.10.0","title":"learnr 0.10.0","text":"CRAN release: 2019-11-09","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"new-features-0-10-0","dir":"Changelog","previous_headings":"","what":"New features","title":"learnr 0.10.0","text":"Quiz questions implemented using shiny modules (instead htmlwidgets) (#194). Aggressively rerender prerendered tutorials favor cohesive exercise environment (#169, #179, rstudio/rmarkdown#1420) Added new function, safe, evaluates code new, safe R environment (#174).","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"minor-new-features-and-improvements-0-10-0","dir":"Changelog","previous_headings":"","what":"Minor new features and improvements","title":"learnr 0.10.0","text":"Added last evaluated exercise submission value, last_value, exercise checker function argument (#228). Added tabset support (#219 #212). Question width expand container width (#222). Available tutorial names displayed name parameter incorrect name provided run_tutorial() (#234). options parameter added question allow custom questions pass along custom information. See sortable::sortable_question example (#243). Missing package dependencies ask installed tutorial run time (@isteves, #253). questions tried , existing answer remain, forcing user restart scratch (#270). version number added question_submission events. help using custom storage methods (#291). Tutorial storage browser now executed directly indexedDB using idb-keyval (dropping localforage). change prevents browser tabs blocking trying access indexedDB data (#305).","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"bug-fixes-0-10-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"learnr 0.10.0","text":"Fixed spurious console warning running exercises using Pandoc 2.0 (#154). Added fail-safe try-catch bad student code crash tutorial (@adamblake #229). Replaced references checkthat grader docs gradethis (#269) Removed warning created pandoc evaluating exercises pandoc wanting title pagetitle. #303","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"learnr-092","dir":"Changelog","previous_headings":"","what":"learnr 0.9.2","title":"learnr 0.9.2","text":"CRAN release: 2018-03-09 Fixed #136 displaying full HTML messages (rather just text) provided incorrect correct args question() (#146). Improved documentation deploying learnr tutorials Shiny Server (#142). Fixed highlight.js issue rmarkdown 1.8 (#133). Fixed false positive diagnostics system (#141).","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"learnr-091","dir":"Changelog","previous_headings":"","what":"learnr 0.9.1","title":"learnr 0.9.1","text":"CRAN release: 2017-11-16 Fixed compatibility issue, existing tutorials don’t break using Pandoc 2.0 (#130).","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"learnr-090","dir":"Changelog","previous_headings":"","what":"learnr 0.9.0","title":"learnr 0.9.0","text":"@ commit #14413cc","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"learnr-080","dir":"Changelog","previous_headings":"","what":"learnr 0.8.0","title":"learnr 0.8.0","text":"@ commit #eeae534","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"learnr-070","dir":"Changelog","previous_headings":"","what":"learnr 0.7.0","title":"learnr 0.7.0","text":"@ commit #b71c637","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"learnr-060","dir":"Changelog","previous_headings":"","what":"learnr 0.6.0","title":"learnr 0.6.0","text":"@ commit #55c33cf","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"learnr-050","dir":"Changelog","previous_headings":"","what":"learnr 0.5.0","title":"learnr 0.5.0","text":"@ commit #a853163","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"learnr-040","dir":"Changelog","previous_headings":"","what":"learnr 0.4.0","title":"learnr 0.4.0","text":"@ commit #3339f8a","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"learnr-030","dir":"Changelog","previous_headings":"","what":"learnr 0.3.0","title":"learnr 0.3.0","text":"@ commit #9cd0082","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"learnr-020","dir":"Changelog","previous_headings":"","what":"learnr 0.2.0","title":"learnr 0.2.0","text":"@ commit #a81a694","code":""},{"path":"https://pkgs.rstudio.com/learnr/dev/news/index.html","id":"learnr-010","dir":"Changelog","previous_headings":"","what":"learnr 0.1.0","title":"learnr 0.1.0","text":"init commit! #e2dbb20","code":""}]
