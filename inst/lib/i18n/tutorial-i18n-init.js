"use strict";function _typeof(obj){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}$.extend({keys:function keys(obj){return $.map(obj,function(v,k){return k})},includes:function includes(arr,val){return $.inArray(val,arr)}});$(document).on("shiny:sessioninitialized",function(){var i18nCustom=document.getElementById("i18n-cstm-trns");if(!i18nCustom){i18nCustom={language:"en"}}else{i18nCustom=JSON.parse(i18nCustom.innerText)}if(i18nCustom.resources){$.keys(i18nCustom.resources).forEach(function(lng){var resource=i18nCustom.resources[lng];if(resource.custom){if(resource.translation){$.keys(resource.custom).forEach(function(keyGroup){$.extend(resource.translation[keyGroup],resource.custom[keyGroup])})}else{resource.translation=resource.custom}}})}function localize(selector,opts){selector=selector||"[data-i18n]";opts=opts||{};var $els=$(selector).filter(function(){return $.includes(this.dataset,"i18n")});Shiny.setInputValue("__tutorial_language",i18next.language);if(!$els.length){return}$els.each(function(idx){var optsItem=$.extend({},opts);if(this.dataset.i18nOpts){optsItem=$.extend(optsItem,JSON.parse(this.dataset.i18nOpts))}if(this.dataset.i18n){this.innerHTML=i18next.t(this.dataset.i18n,optsItem)}var i18nAttrs=$.keys(this.dataset).filter(function(x){return x.match("i18nAttr")});for(var j=0;j<i18nAttrs.length;j++){this.setAttribute(i18nAttrs[j].replace(/^i18nAttr/,"").toLowerCase(),i18next.t(this.dataset[i18nAttrs[j]],optsItem))}});return $els}i18next.init({lng:i18nCustom.language||"en",fallbackLng:"en",ns:"translation",resources:i18nCustom.resources||{}},function(err,t){if(err)return console.log("[i18next] Error loading translations:",err);localize()});window.tutorial.$localize=function(lang,selector,opts){if(typeof lang==="undefined"){return i18nCustom}i18next.changeLanguage(lang);localize(selector,opts)};$(document).on("shiny:value",".tutorial-question",function(ev){setTimeout(function(){localize(ev.target.closest(".tutorial-question").querySelectorAll("[data-i18n]"))},0)});$(document).on("shiny:value",".tutorial-exercise-output",function(ev){setTimeout(function(){localize(ev.target.closest(".tutorial-exercise-output").querySelectorAll("[data-i18n]"))},0)});$(document).on("i18n",function(ev){localize(ev.target);localize(ev.target.querySelectorAll("[data-i18n]"))});function localizeHandler(x){var selector,language;if(typeof x==="string"||Array.isArray(x)&&x.every(function(s){return typeof s==="string"})){selector=x}else if(_typeof(x)==="object"){selector=x.selector||"[data-i18n]";language=x.language}else{return console.log("localize message must be a string with selector(s) or an object with optional keys selector and language.")}if(language){i18next.changeLanguage(language)}localize(selector,x.opts||{})}Shiny.addCustomMessageHandler("localize",localizeHandler)});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy1qcy9pMThuL3R1dG9yaWFsLWkxOG4taW5pdC5qcyJdLCJuYW1lcyI6WyIkIiwiZXh0ZW5kIiwia2V5cyIsIm9iaiIsIm1hcCIsInYiLCJrIiwiaW5jbHVkZXMiLCJhcnIiLCJ2YWwiLCJpbkFycmF5IiwiZG9jdW1lbnQiLCJvbiIsImkxOG5DdXN0b20iLCJnZXRFbGVtZW50QnlJZCIsImxhbmd1YWdlIiwiSlNPTiIsInBhcnNlIiwiaW5uZXJUZXh0IiwicmVzb3VyY2VzIiwiZm9yRWFjaCIsImxuZyIsInJlc291cmNlIiwiY3VzdG9tIiwidHJhbnNsYXRpb24iLCJrZXlHcm91cCIsImxvY2FsaXplIiwic2VsZWN0b3IiLCJvcHRzIiwiJGVscyIsImZpbHRlciIsImRhdGFzZXQiLCJTaGlueSIsInNldElucHV0VmFsdWUiLCJpMThuZXh0IiwibGVuZ3RoIiwiZWFjaCIsImlkeCIsIm9wdHNJdGVtIiwiaTE4bk9wdHMiLCJpMThuIiwiaW5uZXJIVE1MIiwidCIsImkxOG5BdHRycyIsIngiLCJtYXRjaCIsImoiLCJzZXRBdHRyaWJ1dGUiLCJyZXBsYWNlIiwidG9Mb3dlckNhc2UiLCJpbml0IiwiZmFsbGJhY2tMbmciLCJucyIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJ3aW5kb3ciLCJ0dXRvcmlhbCIsIiRsb2NhbGl6ZSIsImxhbmciLCJjaGFuZ2VMYW5ndWFnZSIsImV2Iiwic2V0VGltZW91dCIsInRhcmdldCIsImNsb3Nlc3QiLCJxdWVyeVNlbGVjdG9yQWxsIiwibG9jYWxpemVIYW5kbGVyIiwiQXJyYXkiLCJpc0FycmF5IiwiZXZlcnkiLCJzIiwiYWRkQ3VzdG9tTWVzc2FnZUhhbmRsZXIiXSwibWFwcGluZ3MiOiJBQUVBLGEsb1NBRUFBLENBQUMsQ0FBQ0MsTUFBRixDQUFTLENBQ1BDLElBQUksQ0FBRSxjQUFVQyxHQUFWLENBQWUsQ0FDbkIsTUFBT0gsQ0FBQUEsQ0FBQyxDQUFDSSxHQUFGLENBQU1ELEdBQU4sQ0FBVyxTQUFV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bkIsTUFBTyxPQUFPQSxDQUFBQSxDQUFQLEdBQWEsUUFDckIsQ0FGRCxDQUhKLENBTUUsQ0FDQTNDLFFBQVEsQ0FBR2lCLENBQ1osQ0FSRCxJQVFPLElBQUksUUFBT0EsQ0FBUCxJQUFhLFFBQWpCLENBQTJCLENBQ2hDakIsUUFBUSxDQUFHaUIsQ0FBQyxDQUFDakIsUUFBRixFQUFjLGFBQXpCLENBQ0FaLFFBQVEsQ0FBRzZCLENBQUMsQ0FBQzdCLFFBQ2QsQ0FITSxJQUdBLENBQ0wsTUFBT3VDLENBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUNMLDJHQURLLENBR1IsQ0FFRCxHQUFJeEMsUUFBSixDQUFjLENBQ1ptQixPQUFPLENBQUMwQixjQUFSLENBQXVCN0MsUUFBdkIsQ0FDRCxDQUVEVyxRQUFRLENBQUNDLFFBQUQsQ0FBV2lCLENBQUMsQ0FBQ2hCLElBQUYsRUFBVSxFQUFyQixDQUNULENBRURJLEtBQUssQ0FBQ3VDLHVCQUFOLENBQThCLFVBQTlCLENBQTBDTCxlQUExQyxDQUNELENBMUtEIiwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFscyAkLGkxOG5leHQsU2hpbnkgKi9cblxuJ3VzZSBzdHJpY3QnXG5cbiQuZXh0ZW5kKHtcbiAga2V5czogZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiAkLm1hcChvYmosIGZ1bmN0aW9uICh2LCBrKSB7XG4gICAgICByZXR1cm4ga1xuICAgIH0pXG4gIH0sXG4gIGluY2x1ZGVzOiBmdW5jdGlvbiAoYXJyLCB2YWwpIHtcbiAgICByZXR1cm4gJC5pbkFycmF5KHZhbCwgYXJyKVxuICB9XG59KVxuXG4kKGRvY3VtZW50KS5vbignc2hpbnk6c2Vzc2lvbmluaXRpYWxpemVkJywgZnVuY3Rpb24gKCkge1xuICAvLyBjdXN0b21pemF0aW9ucyBhcmUgc3RvcmVkIGFzIEpTT04gaW4gI2kxOG4tY3N0bS10cm5zIDxzY3JpcHQ+XG4gIGxldCBpMThuQ3VzdG9tID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2kxOG4tY3N0bS10cm5zJylcblxuICBpZiAoIWkxOG5DdXN0b20pIHtcbiAgICBpMThuQ3VzdG9tID0ge1xuICAgICAgbGFuZ3VhZ2U6ICdlbidcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgaTE4bkN1c3RvbSA9IEpTT04ucGFyc2UoaTE4bkN1c3RvbS5pbm5lclRleHQpXG4gIH1cblxuICBpZiAoaTE4bkN1c3RvbS5yZXNvdXJjZXMpIHtcbiAgICAvLyBjb3B5IGN1c3RvbWl6YXRpb25zIGludG8gYmFzZSB0cmFuc2xhdGlvbiBuYW1lc3BhY2VcbiAgICAkLmtleXMoaTE4bkN1c3RvbS5yZXNvdXJjZXMpLmZvckVhY2goZnVuY3Rpb24gKGxuZykge1xuICAgICAgY29uc3QgcmVzb3VyY2UgPSBpMThuQ3VzdG9tLnJlc291cmNlc1tsbmddXG5cbiAgICAgIGlmIChyZXNvdXJjZS5jdXN0b20pIHtcbiAgICAgICAgaWYgKHJlc291cmNlLnRyYW5zbGF0aW9uKSB7XG4gICAgICAgICAgJC5rZXlzKHJlc291cmNlLmN1c3RvbSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5R3JvdXApIHtcbiAgICAgICAgICAgICQuZXh0ZW5kKHJlc291cmNlLnRyYW5zbGF0aW9uW2tleUdyb3VwXSwgcmVzb3VyY2UuY3VzdG9tW2tleUdyb3VwXSlcbiAgICAgICAgICB9KVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlc291cmNlLnRyYW5zbGF0aW9uID0gcmVzb3VyY2UuY3VzdG9tXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgZnVuY3Rpb24gbG9jYWxpemUgKHNlbGVjdG9yLCBvcHRzKSB7XG4gICAgc2VsZWN0b3IgPSBzZWxlY3RvciB8fCAnW2RhdGEtaTE4bl0nXG4gICAgb3B0cyA9IG9wdHMgfHwge31cbiAgICBjb25zdCAkZWxzID0gJChzZWxlY3RvcikuZmlsdGVyKGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiAkLmluY2x1ZGVzKHRoaXMuZGF0YXNldCwgJ2kxOG4nKVxuICAgIH0pXG5cbiAgICAvLyB0ZWxsIHRoZSBzaGlueSBwcm9jZXNzIHRoYXQgdGhlIGxhbmd1YWdlIHdhcyBjaGFuZ2VkXG4gICAgU2hpbnkuc2V0SW5wdXRWYWx1ZSgnX190dXRvcmlhbF9sYW5ndWFnZScsIGkxOG5leHQubGFuZ3VhZ2UpXG5cbiAgICBpZiAoISRlbHMubGVuZ3RoKSB7XG4gICAgICAvLyBObyBlbGVtZW50cyBmb3VuZCBmb3IgbG9jYWxpemF0aW9uIHdpdGggc2VsZWN0b3JcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgICRlbHMuZWFjaChmdW5jdGlvbiAoaWR4KSB7XG4gICAgICBsZXQgb3B0c0l0ZW0gPSAkLmV4dGVuZCh7fSwgb3B0cylcbiAgICAgIC8vIE5vdGU6IGB0aGlzLmRhdGFzZXQuaTE4bk9wdHNgIG1hcHMgZGlyZWN0bHkgdG8gdGhlIERPTSBlbGVtZW50IGF0dHJpYnV0ZSBgZGF0YS1pMThuLW9wdHNgXG4gICAgICAvLyAgICAgICBBbmQgYHRoaXMuZGF0YXNldC5pMThuQXR0clZBTFVFYCB0byBlbGVtZW50IGF0dHJpYnV0ZSBgZGF0YS1pMThuLWF0dHItVkFMVUVgXG4gICAgICAvLyBMaW5rOiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL0xlYXJuL0hUTUwvSG93dG8vVXNlX2RhdGFfYXR0cmlidXRlc1xuICAgICAgLy8gUmVmZXJlbmNlOlxuICAgICAgLy8gPiBUbyBnZXQgYSBkYXRhIGF0dHJpYnV0ZSB0aHJvdWdoIHRoZSBkYXRhc2V0IG9iamVjdCwgZ2V0IHRoZSBwcm9wZXJ0eVxuICAgICAgLy8gPiBieSB0aGUgcGFydCBvZiB0aGUgYXR0cmlidXRlIG5hbWUgYWZ0ZXIgZGF0YVxuICAgICAgLy8gPiAobm90ZSB0aGF0IGRhc2hlcyBhcmUgY29udmVydGVkIHRvIGNhbWVsQ2FzZSkuXG5cbiAgICAgIGlmICh0aGlzLmRhdGFzZXQuaTE4bk9wdHMpIHtcbiAgICAgICAgb3B0c0l0ZW0gPSAkLmV4dGVuZChvcHRzSXRlbSwgSlNPTi5wYXJzZSh0aGlzLmRhdGFzZXQuaTE4bk9wdHMpKVxuICAgICAgfVxuXG4gICAgICAvLyBUcmFuc2xhdGUgdGhlIGl0ZW0gaXRzZWxmXG4gICAgICBpZiAodGhpcy5kYXRhc2V0LmkxOG4pIHtcbiAgICAgICAgdGhpcy5pbm5lckhUTUwgPSBpMThuZXh0LnQodGhpcy5kYXRhc2V0LmkxOG4sIG9wdHNJdGVtKVxuICAgICAgfVxuXG4gICAgICAvLyBUcmFuc2xhdGUgZWxlbWVudCBhdHRyaWJ1dGVzLCB3aGVyZSBrZXlzIGZvciB0aGUgdHJhbnNsYXRpb24gb2ZcbiAgICAgIC8vIGF0dHJpYnV0ZSBWQUxVRSBhcmUgc3RvcmVkIGluIGVsZW1lbnQgYXR0cmlidXRlIGRhdGEtaTE4bi1hdHRyLTxWQUxVRT5cbiAgICAgIC8vIGUuZy4gPHNwYW4gdGl0bGU9XCJlbmdsaXNoIHRpdGxlXCIgZGF0YS1pMThuLWF0dHItdGl0bGU9XCJ0aXRsZS5kZW1vXCI+PC9zcGFuPlxuICAgICAgLy8gICAgICB3aWxsIHVzZSB0aXRsZS5kZW1vIHRvIGxvb2sgdXAgYW5kIHRyYW5zbGF0ZWQgdGhlIHRleHQgaW4gdGhlIHRpdGxlIGF0dHJpYnV0ZVxuICAgICAgY29uc3QgaTE4bkF0dHJzID0gJC5rZXlzKHRoaXMuZGF0YXNldCkuZmlsdGVyKGZ1bmN0aW9uICh4KSB7XG4gICAgICAgIHJldHVybiB4Lm1hdGNoKCdpMThuQXR0cicpXG4gICAgICB9KVxuXG4gICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGkxOG5BdHRycy5sZW5ndGg7IGorKykge1xuICAgICAgICB0aGlzLnNldEF0dHJpYnV0ZShcbiAgICAgICAgICBpMThuQXR0cnNbal0ucmVwbGFjZSgvXmkxOG5BdHRyLywgJycpLnRvTG93ZXJDYXNlKCksXG4gICAgICAgICAgaTE4bmV4dC50KHRoaXMuZGF0YXNldFtpMThuQXR0cnNbal1dLCBvcHRzSXRlbSlcbiAgICAgICAgKVxuICAgICAgfVxuICAgIH0pXG4gICAgcmV0dXJuICRlbHNcbiAgfVxuXG4gIGkxOG5leHQuaW5pdChcbiAgICB7XG4gICAgICBsbmc6IGkxOG5DdXN0b20ubGFuZ3VhZ2UgfHwgJ2VuJyxcbiAgICAgIGZhbGxiYWNrTG5nOiAnZW4nLFxuICAgICAgbnM6ICd0cmFuc2xhdGlvbicsXG4gICAgICByZXNvdXJjZXM6IGkxOG5DdXN0b20ucmVzb3VyY2VzIHx8IHt9XG4gICAgfSxcbiAgICBmdW5jdGlvbiAoZXJyLCB0KSB7XG4gICAgICBpZiAoZXJyKSByZXR1cm4gY29uc29sZS5sb2coJ1tpMThuZXh0XSBFcnJvciBsb2FkaW5nIHRyYW5zbGF0aW9uczonLCBlcnIpXG4gICAgICBsb2NhbGl6ZSgpXG4gICAgfVxuICApXG4gIC8qIE1ldGhvZCBmb3IgbG9jYWxpemF0aW9uIG9mIHRoZSB0dXRvcmlhbFxuICAgKlxuICAgKiBAcGFyYW0gbGFuZyBOZXcgbGFuZ3VhZ2UgZm9yIHR1dG9yaWFsLCBpZiB1bmRlZmluZWQgcmV0dXJucyB0aGUgb2JqZWN0IHdpdGhcbiAgICogICBsYW5ndWFnZSBjdXN0b21pemF0aW9ucyB1c2VkIHRvIGluaXRpYWxpemUgaTE4bmV4dFxuICAgKiBAcGFyYW0gc2VsZWN0b3IgQ1NTIHNlbGVjdG9yIG9mIGVsZW1lbnRzIHRvIGxvY2FsaXplXG4gICAqIEBwYXJhbSBvcHRzIE9wdGlvbnMgcGFzc2VkIHRvIC5sb2NhbGl6ZSgpIG1ldGhvZCBmcm9tIGpxdWVyeUkxOG5leHRcbiAgICpcbiAgICovXG5cbiAgd2luZG93LnR1dG9yaWFsLiRsb2NhbGl6ZSA9IGZ1bmN0aW9uIChsYW5nLCBzZWxlY3Rvciwgb3B0cykge1xuICAgIGlmICh0eXBlb2YgbGFuZyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHJldHVybiBpMThuQ3VzdG9tXG4gICAgfVxuXG4gICAgaTE4bmV4dC5jaGFuZ2VMYW5ndWFnZShsYW5nKVxuICAgIGxvY2FsaXplKHNlbGVjdG9yLCBvcHRzKVxuICB9XG5cbiAgLy8gbG9jYWxpemUgcXVlc3Rpb24gYnV0dG9ucyB3aGVuIHNob3duXG4gICQoZG9jdW1lbnQpLm9uKCdzaGlueTp2YWx1ZScsICcudHV0b3JpYWwtcXVlc3Rpb24nLCBmdW5jdGlvbiAoZXYpIHtcbiAgICAvLyBBbGxvdyBET00gdG8gdXBkYXRlIGJlZm9yZSB0cmFuc2xhdGluZyBxdWVzdGlvbiBVSVxuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgbG9jYWxpemUoXG4gICAgICAgIGV2LnRhcmdldC5jbG9zZXN0KCcudHV0b3JpYWwtcXVlc3Rpb24nKS5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1pMThuXScpXG4gICAgICApXG4gICAgfSwgMClcbiAgfSlcblxuICAvLyBsb2NhbGl6ZSBleGVyY2lzZSBvdXRwdXQgd2hlbiBzaG93blxuICAkKGRvY3VtZW50KS5vbignc2hpbnk6dmFsdWUnLCAnLnR1dG9yaWFsLWV4ZXJjaXNlLW91dHB1dCcsIGZ1bmN0aW9uIChldikge1xuICAgIC8vIEFsbG93IERPTSB0byB1cGRhdGUgYmVmb3JlIHRyYW5zbGF0aW5nIHF1ZXN0aW9uIFVJXG4gICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICBsb2NhbGl6ZShcbiAgICAgICAgZXYudGFyZ2V0XG4gICAgICAgICAgLmNsb3Nlc3QoJy50dXRvcmlhbC1leGVyY2lzZS1vdXRwdXQnKVxuICAgICAgICAgIC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1pMThuXScpXG4gICAgICApXG4gICAgfSwgMClcbiAgfSlcblxuICAvLyB0cmFuc2xhdGUgdGFyZ2V0cyBvZiBpMThuIGV2ZW50c1xuICAkKGRvY3VtZW50KS5vbignaTE4bicsIGZ1bmN0aW9uIChldikge1xuICAgIC8vIHRyYW5zbGF0ZSB0aGUgZXZlbnQgdGFyZ2V0IGl0c2VsZlxuICAgIGxvY2FsaXplKGV2LnRhcmdldClcblxuICAgIC8vIGFuZCBhbHNvIGFueSBkZXNjZW5kYW50c1xuICAgIGxvY2FsaXplKGV2LnRhcmdldC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1pMThuXScpKVxuICB9KVxuXG4gIGZ1bmN0aW9uIGxvY2FsaXplSGFuZGxlciAoeCkge1xuICAgIGxldCBzZWxlY3RvciwgbGFuZ3VhZ2VcblxuICAgIGlmIChcbiAgICAgIHR5cGVvZiB4ID09PSAnc3RyaW5nJyB8fFxuICAgICAgKEFycmF5LmlzQXJyYXkoeCkgJiZcbiAgICAgICAgeC5ldmVyeShmdW5jdGlvbiAocykge1xuICAgICAgICAgIHJldHVybiB0eXBlb2YgcyA9PT0gJ3N0cmluZydcbiAgICAgICAgfSkpXG4gICAgKSB7XG4gICAgICBzZWxlY3RvciA9IHhcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiB4ID09PSAnb2JqZWN0Jykge1xuICAgICAgc2VsZWN0b3IgPSB4LnNlbGVjdG9yIHx8ICdbZGF0YS1pMThuXSdcbiAgICAgIGxhbmd1YWdlID0geC5sYW5ndWFnZVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gY29uc29sZS5sb2coXG4gICAgICAgICdsb2NhbGl6ZSBtZXNzYWdlIG11c3QgYmUgYSBzdHJpbmcgd2l0aCBzZWxlY3RvcihzKSBvciBhbiBvYmplY3Qgd2l0aCBvcHRpb25hbCBrZXlzIHNlbGVjdG9yIGFuZCBsYW5ndWFnZS4nXG4gICAgICApXG4gICAgfVxuXG4gICAgaWYgKGxhbmd1YWdlKSB7XG4gICAgICBpMThuZXh0LmNoYW5nZUxhbmd1YWdlKGxhbmd1YWdlKVxuICAgIH1cblxuICAgIGxvY2FsaXplKHNlbGVjdG9yLCB4Lm9wdHMgfHwge30pXG4gIH1cblxuICBTaGlueS5hZGRDdXN0b21NZXNzYWdlSGFuZGxlcignbG9jYWxpemUnLCBsb2NhbGl6ZUhhbmRsZXIpXG59KVxuIl19