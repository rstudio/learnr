"use strict";var TutorialDiagnostics=function TutorialDiagnostics(tutorial){this.$tutorial=tutorial;var self=this;var unmatchedClosingBracket=function unmatchedClosingBracket(token){return{row:token.position.row,column:token.position.column,type:"error",text:"unmatched closing bracket '"+token.value+"'"}};var unmatchedOpeningBracket=function unmatchedOpeningBracket(token){return{row:token.position.row,column:token.position.column,type:"error",text:"unmatched opening bracket '"+token.value+"'"}};var unexpected=function unexpected(symbol,token,type){return{row:token.position.row,column:token.position.column,type:type||"error",text:"unexpected "+symbol+" '"+token.value+"'"}};var isSymbol=function isSymbol(token){var value=token.value||"";if(value==="in"){return false}var type=token.type||"";return type==="string"||type==="constant.numeric"||type==="constant.language.boolean"||type==="identifier"||type==="keyword"||type==="variable.language"};var isOperator=function isOperator(token){var type=token.type||"";return type==="keyword.operator"};var isUnaryOperator=function isUnaryOperator(token){var value=token.value||"";return value==="+"||value==="-"||value==="~"||value==="!"||value==="?"};var diagnose=function diagnose(){var editor=this;var Tokenizer=ace.require("ace/tokenizer").Tokenizer;var RHighlightRules=ace.require("ace/mode/r_highlight_rules").RHighlightRules;var rules=new RHighlightRules().getRules();for(var key in rules){var rule=rules[key];for(var i=0;i<rule.length;i++){rule[i].merge=false}}rules.start.unshift({token:"string",regex:"\"(?:(?:\\\\.)|(?:[^\"\\\\]))*?\"",merge:false,next:"start"});rules.start.unshift({token:"string",regex:"'(?:(?:\\\\.)|(?:[^'\\\\]))*?'",merge:false,next:"start"});rules.start.unshift({token:"keyword.operator",regex:":::|::|:=|%%|>=|<=|==|!=|\\|>|\\->|<\\-|<<\\-|\\|\\||&&|=|\\+|\\-|\\*\\*?|/|\\^|>|<|!|&|\\||~|\\$|:|@|\\?",merge:false,next:"start"});rules.start.unshift({token:"punctuation",regex:"[;,]",merge:false,next:"start"});var tokenizer=new Tokenizer(rules);editor.session.clearAnnotations();var lines=editor.session.doc.$lines;var tokens=[];var state="start";for(var _i=0;_i<lines.length;_i++){var tokenized=tokenizer.getLineTokens(lines[_i],state);for(var j=0;j<tokenized.tokens.length;j++){tokens.push(tokenized.tokens[j])}tokens.push({type:"text",value:"\n"});state=tokenized.state}var doc=editor.session.doc;var docIndex=0;for(var _i2=0;_i2<tokens.length;_i2++){tokens[_i2].position=doc.indexToPosition(docIndex);docIndex+=tokens[_i2].value.length}tokens=tokens.filter(function(token){return token.type!=="comment"&&!/^\s+$/.test(token.value)});var diagnostics=[];var bracketStack=[];for(var _i3=0;_i3<tokens.length;_i3++){var token=tokens[_i3];var type=token.type;var value=token.value;if(value==="("||value==="{"||value==="["){bracketStack.push(token);continue}if(value===")"||value==="}"||value==="]"){if(bracketStack.length===0){diagnostics.push(unmatchedClosingBracket(token));continue}var openBracket=bracketStack.pop();var ok=value===")"&&openBracket.value==="("||value==="]"&&openBracket.value==="["||value==="}"&&openBracket.value==="{";if(!ok){diagnostics.push(unmatchedClosingBracket(token));diagnostics.push(unmatchedOpeningBracket(openBracket));continue}}if(_i3>0){var lhs=tokens[_i3-1];var rhs=tokens[_i3];var bracket=bracketStack[bracketStack.length-1]||{};if(lhs.position.row===rhs.position.row&&isSymbol(lhs)&&isSymbol(rhs)){diagnostics.push(unexpected("symbol",rhs));continue}if(lhs.position.row===rhs.position.row&&isOperator(lhs)&&isOperator(rhs)&&!isUnaryOperator(rhs)){diagnostics.push(unexpected("operator",rhs));continue}if(lhs.value===","&&rhs.value===","&&bracket.value==="("){diagnostics.push(unexpected("comma",rhs,"warning"));continue}if(lhs.value===","&&(rhs.value==="}"||rhs.value===")"||rhs.value==="]")){diagnostics.push(unexpected("comma",lhs,"warning"));continue}}}for(var _i4=0;_i4<bracketStack.length;_i4++){diagnostics.push(unmatchedOpeningBracket(bracketStack[_i4]))}editor.session.setAnnotations(diagnostics)};var findActiveAceInstance=function findActiveAceInstance(){var el=document.activeElement;while(el!=null){if(el.env&&el.env.editor){return el.env.editor}el=el.parentElement}return null};var ensureInitialized=function ensureInitialized(editor){if(editor.$diagnosticsInitialized){return}if(!editor.tutorial.diagnostics){return}var handlers={};handlers.change=self.$onChange.bind(editor);handlers.destroy=function(event){for(var key in handlers){this.off(key,handlers[key])}}.bind(editor);for(var key in handlers){editor.on(key,handlers[key])}editor.$liveDiagnostics=diagnose.bind(editor);editor.$diagnosticsInitialized=1};this.$onChange=function(data){if(!this.tutorial.diagnostics){return}clearTimeout(this.$diagnosticsTimerId);this.session.clearAnnotations();this.$diagnosticsTimerId=setTimeout(this.$liveDiagnostics,1000)};this.$onKeyDown=function(event){var editor=findActiveAceInstance();if(editor!=null){ensureInitialized(editor);document.removeEventListener("keydown",this.$onKeyDown)}};document.addEventListener("keydown",this.$onKeyDown)};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy1qcy90dXRvcmlhbC90dXRvcmlhbC1kaWFnbm9zdGljcy5qcyJdLCJuYW1lcyI6WyJUdXRvcmlhbERpYWdub3N0aWNzIiwidHV0b3JpYWwiLCIkdHV0b3JpYWwiLCJzZWxmIiwidW5tYXRjaGVkQ2xvc2luZ0JyYWNrZXQiLCJ0b2tlbiIsInJvdyIsInBvc2l0aW9uIiwiY29sdW1uIiwidHlwZSIsInRleHQiLCJ2YWx1ZSIsInVubWF0Y2hlZE9wZW5pbmdCcmFja2V0IiwidW5leHBlY3RlZCIsInN5bWJvbCIsImlzU3ltYm9sIiwiaXNPcGVyYXRvciIsImlzVW5hcnlPcGVyYXRvciIsImRpYWdub3NlIiwiZWRpdG9yIiwiVG9rZW5pemVyIiwiYWNlIiwicmVxdWlyZSIsIlJIaWdobGlnaHRSdWxlcyIsInJ1bGVzIiwiZ2V0UnVsZXMiLCJrZXkiLCJydWxlIiwiaSIsImxlbmd0aCIsIm1lcmdlIiwic3RhcnQiLCJ1bnNoaWZ0IiwicmVnZXgiLCJuZXh0IiwidG9rZW5pemVyIiwic2Vzc2lvbiIsImNsZWFyQW5ub3RhdGlvbnMiLCJsaW5lcyIsImRvYyIsIiRsaW5lcyIsInRva2VucyIsInN0YXRlIiwidG9rZW5pemVkIiwiZ2V0TGluZVRva2VucyIsImoiLCJwdXNoIiwiZG9jSW5kZXgiLCJpbmRleFRvUG9zaXRpb24iLCJmaWx0ZXIiLCJ0ZXN0IiwiZGlhZ25vc3RpY3MiLCJicmFja2V0U3RhY2siLCJvcGVuQnJhY2tldCIsInBvcCIsIm9rIiwibGhzIiwicmhzIiwiYnJhY2tldCIsInNldEFubm90YXRpb25zIiwiZmluZEFjdGl2ZUFjZUluc3RhbmNlIiwiZWwiLCJkb2N1bWVudCIsImFjdGl2ZUVsZW1lbnQiLCJlbnYiLCJwYXJlbnRFbGVtZW50IiwiZW5zdXJlSW5pdGlhbGl6ZWQiLCIkZGlhZ25vc3RpY3NJbml0aWFsaXplZCIsImhhbmRsZXJzIiwiY2hhbmdlIiwiJG9uQ2hhbmdlIiwiYmluZCIsImRlc3Ryb3kiLCJldmVudCIsIm9mZiIsIm9uIiwiJGxpdmVEaWFnbm9zdGljcyIsImRhdGEiLCJjbGVhclRpbWVvdXQiLCIkZGlhZ25vc3RpY3NUaW1lcklkIiwic2V0VGltZW91dCIsIiRvbktleURvd24iLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiYWRkRXZlbnRMaXN0ZW5lciJdLCJtYXBwaW5ncyI6ImFBRUEsR0FBTUEsQ0FBQUEsbUJBQW1CLENBQUcsUUFBdEJBLENBQUFBLG1CQUFzQixDQUFVQyxRQUFWLENBQW9CLENBQzlDLEtBQUtDLFNBQUwsQ0FBaUJELFFBQWpCLENBQ0EsR0FBTUUsQ0FBQUEsSUFBSSxDQUFHLElBQWIsQ0FFQSxHQUFNQyxDQUFBQSx1QkFBdUIsQ0FBRyxRQUExQkEsQ0FBQUEsdUJBQTBCLENBQVVDLEtBQVYsQ0FBaUIsQ0FDL0MsTUFBTyxDQUNMQyxHQUFHLENBQUVELEtBQUssQ0FBQ0UsUUFBTixDQUFlRCxHQURmLENBRUxFLE1BQU0sQ0FBRUgsS0FBSyxDQUFDRSxRQUFOLENBQWVDLE1BRmxCLENBR0xDLElBQUksQ0FBRSxPQUhELENBSUxDLElBQUksQ0FBRSw4QkFBZ0NMLEtBQUssQ0FBQ00sS0FBdEMsQ0FBOEMsR0FKL0MsQ0FNUixDQVBELENBU0EsR0FBTUMsQ0FBQUEsdUJBQXVCLENBQUcsUUFBMUJBLENBQUFBLHVCQUEwQixDQUFVUCxLQUFWLENBQWlCLENBQy9DLE1BQU8sQ0FDTEMsR0FBRyxDQUFFRCxLQUFLLENBQUNFLFFBQU4sQ0FBZUQsR0FEZixDQUVMRSxNQUFNLENBQUVILEtBQUssQ0FBQ0UsUUFBTixDQUFlQyxNQUZsQixDQUdMQyxJQUFJLENBQUUsT0FIRCxDQUlMQyxJQUFJLENBQUUsOEJBQWdDTCxLQUFLLENBQUNNLEtBQXRDLENBQThDLEdBSi9DLENBTVIsQ0FQRCxDQVNBLEdBQU1FLENBQUFBLFVBQVUsQ0FBRyxRQUFiQSxDQUFBQSxVQUFhLENBQVVDLE1BQVYsQ0FBa0JULEtBQWxCLENBQXlCSSxJQUF6QixDQUErQixDQUNoRCxNQUFPLENBQ0xILEdBQUcsQ0FBRUQsS0FBSyxDQUFDRSxRQUFOLENBQWVELEdBRGYsQ0FFTEUsTUFBTSxDQUFFSCxLQUFLLENBQUNFLFFBQU4sQ0FBZUMsTUFGbEIsQ0FHTEMsSUFBSSxDQUFFQSxJQUFJLEVBQUksT0FIVCxDQUlMQyxJQUFJLENBQUUsY0FBZ0JJLE1BQWhCLENBQXlCLElBQXpCLENBQWdDVCxLQUFLLENBQUNNLEtBQXRDLENBQThDLEdBSi9DLENBTVIsQ0FQRCxDQVNBLEdBQU1JLENBQUFBLFFBQVEsQ0FBRyxRQUFYQSxDQUFBQSxRQUFXLENBQVVWLEtBQVYsQ0FBaUIsQ0FHaEMsR0FBTU0sQ0FBQUEsS0FBSyxDQUFHTixLQUFLLENBQUNNLEtBQU4sRUFBZSxFQUE3QixDQUNBLEdBQUlBLEtBQUssR0FBSyxJQUFkLENBQW9CLENBQ2xCLE1BQU8sTUFDUixDQUVELEdBQU1GLENBQUFBLElBQUksQ0FBR0osS0FBSyxDQUFDSSxJQUFOLEVBQWMsRUFBM0IsQ0FDQSxNQUNFQSxDQUFBQSxJQUFJLEdBQUssUUFBVCxFQUNBQSxJQUFJLEdBQUssa0JBRFQsRUFFQUEsSUFBSSxHQUFLLDJCQUZULEVBR0FBLElBQUksR0FBSyxZQUhULEVBSUFBLElBQUksR0FBSyxTQUpULEVBS0FBLElBQUksR0FBSyxtQkFFWixDQWpCRCxDQW1CQSxHQUFNTyxDQUFBQSxVQUFVLENBQUcsUUFBYkEsQ0FBQUEsVUFBYSxDQUFVWCxLQUFWLENBQWlCLENBQ2xDLEdBQU1JLENBQUFBLElBQUksQ0FBR0osS0FBSyxDQUFDSSxJQUFOLEVBQWMsRUFBM0IsQ0FDQSxNQUFPQSxDQUFBQSxJQUFJLEdBQUssa0JBQ2pCLENBSEQsQ0FLQSxHQUFNUSxDQUFBQSxlQUFlLENBQUcsUUFBbEJBLENBQUFBLGVBQWtCLENBQVVaLEtBQVYsQ0FBaUIsQ0FDdkMsR0FBTU0sQ0FBQUEsS0FBSyxDQUFHTixLQUFLLENBQUNNLEtBQU4sRUFBZSxFQUE3QixDQUNBLE1BQ0VBLENBQUFBLEtBQUssR0FBSyxHQUFWLEVBQ0FBLEtBQUssR0FBSyxHQURWLEVBRUFBLEtBQUssR0FBSyxHQUZWLEVBR0FBLEtBQUssR0FBSyxHQUhWLEVBSUFBLEtBQUssR0FBSyxHQUViLENBVEQsQ0FXQSxHQUFNTyxDQUFBQSxRQUFRLENBQUcsUUFBWEEsQ0FBQUEsUUFBVyxFQUFZLENBRTNCLEdBQU1DLENBQUFBLE1BQU0sQ0FBRyxJQUFmLENBSUEsR0FBTUMsQ0FBQUEsU0FBUyxDQUFHQyxHQUFHLENBQUNDLE9BQUosQ0FBWSxlQUFaLEVBQTZCRixTQUEvQyxDQUNBLEdBQU1HLENBQUFBLGVBQWUsQ0FBR0YsR0FBRyxDQUFDQyxPQUFKLENBQVksNEJBQVosRUFDckJDLGVBREgsQ0FFQSxHQUFNQyxDQUFBQSxLQUFLLENBQUcsR0FBSUQsQ0FBQUEsZUFBSixHQUFzQkUsUUFBdEIsRUFBZCxDQUNBLElBQUssR0FBTUMsQ0FBQUEsR0FBWCxHQUFrQkYsQ0FBQUEsS0FBbEIsQ0FBeUIsQ0FDdkIsR0FBTUcsQ0FBQUEsSUFBSSxDQUFHSCxLQUFLLENBQUNFLEdBQUQsQ0FBbEIsQ0FDQSxJQUFLLEdBQUlFLENBQUFBLENBQUMsQ0FBRyxDQUFiLENBQWdCQSxDQUFDLENBQUdELElBQUksQ0FBQ0UsTUFBekIsQ0FBaUNELENBQUMsRUFBbEMsQ0FBc0MsQ0FDcENELElBQUksQ0FBQ0MsQ0FBRCxDQUFKLENBQVFFLEtBQVIsQ0FBZ0IsS0FDakIsQ0FDRixDQUdETixLQUFLLENBQUNPLEtBQU4sQ0FBWUMsT0FBWixDQUFvQixDQUNsQjNCLEtBQUssQ0FBRSxRQURXLENBRWxCNEIsS0FBSyxDQUFFLG1DQUZXLENBR2xCSCxLQUFLLENBQUUsS0FIVyxDQUlsQkksSUFBSSxDQUFFLE9BSlksQ0FBcEIsRUFPQVYsS0FBSyxDQUFDTyxLQUFOLENBQVlDLE9BQVosQ0FBb0IsQ0FDbEIzQixLQUFLLENBQUUsUUFEVyxDQUVsQjRCLEtBQUssQ0FBRSxnQ0FGVyxDQUdsQkgsS0FBSyxDQUFFLEtBSFcsQ0FJbEJJLElBQUksQ0FBRSxPQUpZLENBQXBCLEVBT0FWLEtBQUssQ0FBQ08sS0FBTixDQUFZQyxPQUFaLENBQW9CLENBQ2xCM0IsS0FBSyxDQUFFLGtCQURXLENBRWxCNEIsS0FBSyxDQUNILDJHQUhnQixDQUlsQkgsS0FBSyxDQUFFLEtBSlcsQ0FLbEJJLElBQUksQ0FBRSxPQUxZLENBQXBCLEVBUUFWLEtBQUssQ0FBQ08sS0FBTixDQUFZQyxPQUFaLENBQW9CLENBQ2xCM0IsS0FBSyxDQUFFLGFBRFcsQ0FFbEI0QixLQUFLLENBQUUsTUFGVyxDQUdsQkgsS0FBSyxDQUFFLEtBSFcsQ0FJbEJJLElBQUksQ0FBRSxPQUpZLENBQXBCLEVBT0EsR0FBTUMsQ0FBQUEsU0FBUyxDQUFHLEdBQUlmLENBQUFBLFNBQUosQ0FBY0ksS0FBZCxDQUFsQixDQUdBTCxNQUFNLENBQUNpQixPQUFQLENBQWVDLGdCQUFmLEdBR0EsR0FBTUMsQ0FBQUEsS0FBSyxDQUFHbkIsTUFBTSxDQUFDaUIsT0FBUCxDQUFlRyxHQUFmLENBQW1CQyxNQUFqQyxDQUNBLEdBQUlDLENBQUFBLE1BQU0sQ0FBRyxFQUFiLENBQ0EsR0FBSUMsQ0FBQUEsS0FBSyxDQUFHLE9BQVosQ0FDQSxJQUFLLEdBQUlkLENBQUFBLEVBQUMsQ0FBRyxDQUFiLENBQWdCQSxFQUFDLENBQUdVLEtBQUssQ0FBQ1QsTUFBMUIsQ0FBa0NELEVBQUMsRUFBbkMsQ0FBdUMsQ0FDckMsR0FBTWUsQ0FBQUEsU0FBUyxDQUFHUixTQUFTLENBQUNTLGFBQVYsQ0FBd0JOLEtBQUssQ0FBQ1YsRUFBRCxDQUE3QixDQUFrQ2MsS0FBbEMsQ0FBbEIsQ0FDQSxJQUFLLEdBQUlHLENBQUFBLENBQUMsQ0FBRyxDQUFiLENBQWdCQSxDQUFDLENBQUdGLFNBQVMsQ0FBQ0YsTUFBVixDQUFpQlosTUFBckMsQ0FBNkNnQixDQUFDLEVBQTlDLENBQWtELENBQ2hESixNQUFNLENBQUNLLElBQVAsQ0FBWUgsU0FBUyxDQUFDRixNQUFWLENBQWlCSSxDQUFqQixDQUFaLENBQ0QsQ0FDREosTUFBTSxDQUFDSyxJQUFQLENBQVksQ0FBRXJDLElBQUksQ0FBRSxNQUFSLENBQWdCRSxLQUFLLENBQUUsSUFBdkIsQ0FBWixFQUNBK0IsS0FBSyxDQUFHQyxTQUFTLENBQUNELEtBQ25CLENBR0QsR0FBTUgsQ0FBQUEsR0FBRyxDQUFHcEIsTUFBTSxDQUFDaUIsT0FBUCxDQUFlRyxHQUEzQixDQUNBLEdBQUlRLENBQUFBLFFBQVEsQ0FBRyxDQUFmLENBQ0EsSUFBSyxHQUFJbkIsQ0FBQUEsR0FBQyxDQUFHLENBQWIsQ0FBZ0JBLEdBQUMsQ0FBR2EsTUFBTSxDQUFDWixNQUEzQixDQUFtQ0QsR0FBQyxFQUFwQyxDQUF3QyxDQUN0Q2EsTUFBTSxDQUFDYixHQUFELENBQU4sQ0FBVXJCLFFBQVYsQ0FBcUJnQyxHQUFHLENBQUNTLGVBQUosQ0FBb0JELFFBQXBCLENBQXJCLENBQ0FBLFFBQVEsRUFBSU4sTUFBTSxDQUFDYixHQUFELENBQU4sQ0FBVWpCLEtBQVYsQ0FBZ0JrQixNQUM3QixDQUdEWSxNQUFNLENBQUdBLE1BQU0sQ0FBQ1EsTUFBUCxDQUFjLFNBQVU1QyxLQUFWLENBQWlCLENBQ3RDLE1BQU9BLENBQUFBLEtBQUssQ0FBQ0ksSUFBTixHQUFlLFNBQWYsRUFBNEIsQ0FBQyxRQUFReUMsSUFBUixDQUFhN0MsS0FBSyxDQUFDTSxLQUFuQixDQUNyQyxDQUZRLENBQVQsQ0FLQSxHQUFNd0MsQ0FBQUEsV0FBVyxDQUFHLEVBQXBCLENBQ0EsR0FBTUMsQ0FBQUEsWUFBWSxDQUFHLEVBQXJCLENBR0EsSUFBSyxHQUFJeEIsQ0FBQUEsR0FBQyxDQUFHLENBQWIsQ0FBZ0JBLEdBQUMsQ0FBR2EsTUFBTSxDQUFDWixNQUEzQixDQUFtQ0QsR0FBQyxFQUFwQyxDQUF3QyxDQUV0QyxHQUFNdkIsQ0FBQUEsS0FBSyxDQUFHb0MsTUFBTSxDQUFDYixHQUFELENBQXBCLENBQ0EsR0FBTW5CLENBQUFBLElBQUksQ0FBR0osS0FBSyxDQUFDSSxJQUFuQixDQUNBLEdBQU1FLENBQUFBLEtBQUssQ0FBR04sS0FBSyxDQUFDTSxLQUFwQixDQUdBLEdBQUlBLEtBQUssR0FBSyxHQUFWLEVBQWlCQSxLQUFLLEdBQUssR0FBM0IsRUFBa0NBLEtBQUssR0FBSyxHQUFoRCxDQUFxRCxDQUNuRHlDLFlBQVksQ0FBQ04sSUFBYixDQUFrQnpDLEtBQWxCLEVBQ0EsUUFDRCxDQUdELEdBQUlNLEtBQUssR0FBSyxHQUFWLEVBQWlCQSxLQUFLLEdBQUssR0FBM0IsRUFBa0NBLEtBQUssR0FBSyxHQUFoRCxDQUFxRCxDQUVuRCxHQUFJeUMsWUFBWSxDQUFDdkIsTUFBYixHQUF3QixDQUE1QixDQUErQixDQUM3QnNCLFdBQVcsQ0FBQ0wsSUFBWixDQUFpQjFDLHVCQUF1QixDQUFDQyxLQUFELENBQXhDLEVBQ0EsUUFDRCxDQUdELEdBQU1nRCxDQUFBQSxXQUFXLENBQUdELFlBQVksQ0FBQ0UsR0FBYixFQUFwQixDQUVBLEdBQU1DLENBQUFBLEVBQUUsQ0FDTDVDLEtBQUssR0FBSyxHQUFWLEVBQWlCMEMsV0FBVyxDQUFDMUMsS0FBWixHQUFzQixHQUF4QyxFQUNDQSxLQUFLLEdBQUssR0FBVixFQUFpQjBDLFdBQVcsQ0FBQzFDLEtBQVosR0FBc0IsR0FEeEMsRUFFQ0EsS0FBSyxHQUFLLEdBQVYsRUFBaUIwQyxXQUFXLENBQUMxQyxLQUFaLEdBQXNCLEdBSDFDLENBS0EsR0FBSSxDQUFDNEMsRUFBTCxDQUFTLENBQ1BKLFdBQVcsQ0FBQ0wsSUFBWixDQUFpQjFDLHVCQUF1QixDQUFDQyxLQUFELENBQXhDLEVBQ0E4QyxXQUFXLENBQUNMLElBQVosQ0FBaUJsQyx1QkFBdUIsQ0FBQ3lDLFdBQUQsQ0FBeEMsRUFDQSxRQUNELENBQ0YsQ0FFRCxHQUFJekIsR0FBQyxDQUFHLENBQVIsQ0FBVyxDQUNULEdBQU00QixDQUFBQSxHQUFHLENBQUdmLE1BQU0sQ0FBQ2IsR0FBQyxDQUFHLENBQUwsQ0FBbEIsQ0FDQSxHQUFNNkIsQ0FBQUEsR0FBRyxDQUFHaEIsTUFBTSxDQUFDYixHQUFELENBQWxCLENBQ0EsR0FBTThCLENBQUFBLE9BQU8sQ0FBR04sWUFBWSxDQUFDQSxZQUFZLENBQUN2QixNQUFiLENBQXNCLENBQXZCLENBQVosRUFBeUMsRUFBekQsQ0FHQSxHQUNFMkIsR0FBRyxDQUFDakQsUUFBSixDQUFhRCxHQUFiLEdBQXFCbUQsR0FBRyxDQUFDbEQsUUFBSixDQUFhRCxHQUFsQyxFQUNBUyxRQUFRLENBQUN5QyxHQUFELENBRFIsRUFFQXpDLFFBQVEsQ0FBQzBDLEdBQUQsQ0FIVixDQUlFLENBQ0FOLFdBQVcsQ0FBQ0wsSUFBWixDQUFpQmpDLFVBQVUsQ0FBQyxRQUFELENBQVc0QyxHQUFYLENBQTNCLEVBQ0EsUUFDRCxDQUdELEdBQ0VELEdBQUcsQ0FBQ2pELFFBQUosQ0FBYUQsR0FBYixHQUFxQm1ELEdBQUcsQ0FBQ2xELFFBQUosQ0FBYUQsR0FBbEMsRUFDQVUsVUFBVSxDQUFDd0MsR0FBRCxDQURWLEVBRUF4QyxVQUFVLENBQUN5QyxHQUFELENBRlYsRUFHQSxDQUFDeEMsZUFBZSxDQUFDd0MsR0FBRCxDQUpsQixDQUtFLENBQ0FOLFdBQVcsQ0FBQ0wsSUFBWixDQUFpQmpDLFVBQVUsQ0FBQyxVQUFELENBQWE0QyxHQUFiLENBQTNCLEVBQ0EsUUFDRCxDQUdELEdBQUlELEdBQUcsQ0FBQzdDLEtBQUosR0FBYyxHQUFkLEVBQXFCOEMsR0FBRyxDQUFDOUMsS0FBSixHQUFjLEdBQW5DLEVBQTBDK0MsT0FBTyxDQUFDL0MsS0FBUixHQUFrQixHQUFoRSxDQUFxRSxDQUNuRXdDLFdBQVcsQ0FBQ0wsSUFBWixDQUFpQmpDLFVBQVUsQ0FBQyxPQUFELENBQVU0QyxHQUFWLENBQWUsU0FBZixDQUEzQixFQUNBLFFBQ0QsQ0FHRCxHQUNFRCxHQUFHLENBQUM3QyxLQUFKLEdBQWMsR0FBZCxHQUNDOEMsR0FBRyxDQUFDOUMsS0FBSixHQUFjLEdBQWQsRUFBcUI4QyxHQUFHLENBQUM5QyxLQUFKLEdBQWMsR0FBbkMsRUFBMEM4QyxHQUFHLENBQUM5QyxLQUFKLEdBQWMsR0FEekQsQ0FERixDQUdFLENBQ0F3QyxXQUFXLENBQUNMLElBQVosQ0FBaUJqQyxVQUFVLENBQUMsT0FBRCxDQUFVMkMsR0FBVixDQUFlLFNBQWYsQ0FBM0IsRUFDQSxRQUNELENBQ0YsQ0FDRixDQUdELElBQUssR0FBSTVCLENBQUFBLEdBQUMsQ0FBRyxDQUFiLENBQWdCQSxHQUFDLENBQUd3QixZQUFZLENBQUN2QixNQUFqQyxDQUF5Q0QsR0FBQyxFQUExQyxDQUE4QyxDQUM1Q3VCLFdBQVcsQ0FBQ0wsSUFBWixDQUFpQmxDLHVCQUF1QixDQUFDd0MsWUFBWSxDQUFDeEIsR0FBRCxDQUFiLENBQXhDLENBQ0QsQ0FHRFQsTUFBTSxDQUFDaUIsT0FBUCxDQUFldUIsY0FBZixDQUE4QlIsV0FBOUIsQ0FDRCxDQXhLRCxDQTBLQSxHQUFNUyxDQUFBQSxxQkFBcUIsQ0FBRyxRQUF4QkEsQ0FBQUEscUJBQXdCLEVBQVksQ0FDeEMsR0FBSUMsQ0FBQUEsRUFBRSxDQUFHQyxRQUFRLENBQUNDLGFBQWxCLENBQ0EsTUFBT0YsRUFBRSxFQUFJLElBQWIsQ0FBbUIsQ0FDakIsR0FBSUEsRUFBRSxDQUFDRyxHQUFILEVBQVVILEVBQUUsQ0FBQ0csR0FBSCxDQUFPN0MsTUFBckIsQ0FBNkIsQ0FDM0IsTUFBTzBDLENBQUFBLEVBQUUsQ0FBQ0csR0FBSCxDQUFPN0MsTUFDZixDQUNEMEMsRUFBRSxDQUFHQSxFQUFFLENBQUNJLGFBQ1QsQ0FDRCxNQUFPLEtBQ1IsQ0FURCxDQVdBLEdBQU1DLENBQUFBLGlCQUFpQixDQUFHLFFBQXBCQSxDQUFBQSxpQkFBb0IsQ0FBVS9DLE1BQVYsQ0FBa0IsQ0FDMUMsR0FBSUEsTUFBTSxDQUFDZ0QsdUJBQVgsQ0FBb0MsQ0FDbEMsTUFDRCxDQUVELEdBQUksQ0FBQ2hELE1BQU0sQ0FBQ2xCLFFBQVAsQ0FBZ0JrRCxXQUFyQixDQUFrQyxDQUNoQyxNQUNELENBR0QsR0FBTWlCLENBQUFBLFFBQVEsQ0FBRyxFQUFqQixDQUNBQSxRQUFRLENBQUNDLE1BQVQsQ0FBa0JsRSxJQUFJLENBQUNtRSxTQUFMLENBQWVDLElBQWYsQ0FBb0JwRCxNQUFwQixDQUFsQixDQUNBaUQsUUFBUSxDQUFDSSxPQUFULENBQW1CLFNBQVVDLEtBQVYsQ0FBaUIsQ0FDbEMsSUFBSyxHQUFNL0MsQ0FBQUEsR0FBWCxHQUFrQjBDLENBQUFBLFFBQWxCLENBQTRCLENBQzFCLEtBQUtNLEdBQUwsQ0FBU2hELEdBQVQsQ0FBYzBDLFFBQVEsQ0FBQzFDLEdBQUQsQ0FBdEIsQ0FDRCxDQUNGLENBSmtCLENBSWpCNkMsSUFKaUIsQ0FJWnBELE1BSlksQ0FBbkIsQ0FNQSxJQUFLLEdBQU1PLENBQUFBLEdBQVgsR0FBa0IwQyxDQUFBQSxRQUFsQixDQUE0QixDQUMxQmpELE1BQU0sQ0FBQ3dELEVBQVAsQ0FBVWpELEdBQVYsQ0FBZTBDLFFBQVEsQ0FBQzFDLEdBQUQsQ0FBdkIsQ0FDRCxDQUVEUCxNQUFNLENBQUN5RCxnQkFBUCxDQUEwQjFELFFBQVEsQ0FBQ3FELElBQVQsQ0FBY3BELE1BQWQsQ0FBMUIsQ0FFQUEsTUFBTSxDQUFDZ0QsdUJBQVAsQ0FBaUMsQ0FDbEMsQ0F6QkQsQ0EyQkEsS0FBS0csU0FBTCxDQUFpQixTQUFVTyxJQUFWLENBQWdCLENBQy9CLEdBQUksQ0FBQyxLQUFLNUUsUUFBTCxDQUFja0QsV0FBbkIsQ0FBZ0MsQ0FDOUIsTUFDRCxDQUVEMkIsWUFBWSxDQUFDLEtBQUtDLG1CQUFOLENBQVosQ0FDQSxLQUFLM0MsT0FBTCxDQUFhQyxnQkFBYixHQUNBLEtBQUswQyxtQkFBTCxDQUEyQkMsVUFBVSxDQUFDLEtBQUtKLGdCQUFOLENBQXdCLElBQXhCLENBQ3RDLENBUkQsQ0FVQSxLQUFLSyxVQUFMLENBQWtCLFNBQVVSLEtBQVYsQ0FBaUIsQ0FDakMsR0FBTXRELENBQUFBLE1BQU0sQ0FBR3lDLHFCQUFxQixFQUFwQyxDQUNBLEdBQUl6QyxNQUFNLEVBQUksSUFBZCxDQUFvQixDQUNsQitDLGlCQUFpQixDQUFDL0MsTUFBRCxDQUFqQixDQUNBMkMsUUFBUSxDQUFDb0IsbUJBQVQsQ0FBNkIsU0FBN0IsQ0FBd0MsS0FBS0QsVUFBN0MsQ0FDRCxDQUNGLENBTkQsQ0FRQW5CLFFBQVEsQ0FBQ3FCLGdCQUFULENBQTBCLFNBQTFCLENBQXFDLEtBQUtGLFVBQTFDLENBQ0QsQ0FyU0QiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWwgYWNlICovXG5cbmNvbnN0IFR1dG9yaWFsRGlhZ25vc3RpY3MgPSBmdW5jdGlvbiAodHV0b3JpYWwpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICB0aGlzLiR0dXRvcmlhbCA9IHR1dG9yaWFsXG4gIGNvbnN0IHNlbGYgPSB0aGlzXG5cbiAgY29uc3QgdW5tYXRjaGVkQ2xvc2luZ0JyYWNrZXQgPSBmdW5jdGlvbiAodG9rZW4pIHtcbiAgICByZXR1cm4ge1xuICAgICAgcm93OiB0b2tlbi5wb3NpdGlvbi5yb3csXG4gICAgICBjb2x1bW46IHRva2VuLnBvc2l0aW9uLmNvbHVtbixcbiAgICAgIHR5cGU6ICdlcnJvcicsXG4gICAgICB0ZXh0OiBcInVubWF0Y2hlZCBjbG9zaW5nIGJyYWNrZXQgJ1wiICsgdG9rZW4udmFsdWUgKyBcIidcIlxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IHVubWF0Y2hlZE9wZW5pbmdCcmFja2V0ID0gZnVuY3Rpb24gKHRva2VuKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJvdzogdG9rZW4ucG9zaXRpb24ucm93LFxuICAgICAgY29sdW1uOiB0b2tlbi5wb3NpdGlvbi5jb2x1bW4sXG4gICAgICB0eXBlOiAnZXJyb3InLFxuICAgICAgdGV4dDogXCJ1bm1hdGNoZWQgb3BlbmluZyBicmFja2V0ICdcIiArIHRva2VuLnZhbHVlICsgXCInXCJcbiAgICB9XG4gIH1cblxuICBjb25zdCB1bmV4cGVjdGVkID0gZnVuY3Rpb24gKHN5bWJvbCwgdG9rZW4sIHR5cGUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcm93OiB0b2tlbi5wb3NpdGlvbi5yb3csXG4gICAgICBjb2x1bW46IHRva2VuLnBvc2l0aW9uLmNvbHVtbixcbiAgICAgIHR5cGU6IHR5cGUgfHwgJ2Vycm9yJyxcbiAgICAgIHRleHQ6ICd1bmV4cGVjdGVkICcgKyBzeW1ib2wgKyBcIiAnXCIgKyB0b2tlbi52YWx1ZSArIFwiJ1wiXG4gICAgfVxuICB9XG5cbiAgY29uc3QgaXNTeW1ib2wgPSBmdW5jdGlvbiAodG9rZW4pIHtcbiAgICAvLyB0aGlzIGlzIGEga2x1ZGdlIHNvIHRoYXQgJ2luJyBpcyB0cmVhdGVkIGFzIHRob3VnaCBpdCB3ZXJlIGFuXG4gICAgLy8gb3BlcmF0b3IgYnkgdGhlIGRpYWdub3N0aWNzIHN5c3RlbVxuICAgIGNvbnN0IHZhbHVlID0gdG9rZW4udmFsdWUgfHwgJydcbiAgICBpZiAodmFsdWUgPT09ICdpbicpIHtcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cblxuICAgIGNvbnN0IHR5cGUgPSB0b2tlbi50eXBlIHx8ICcnXG4gICAgcmV0dXJuIChcbiAgICAgIHR5cGUgPT09ICdzdHJpbmcnIHx8XG4gICAgICB0eXBlID09PSAnY29uc3RhbnQubnVtZXJpYycgfHxcbiAgICAgIHR5cGUgPT09ICdjb25zdGFudC5sYW5ndWFnZS5ib29sZWFuJyB8fFxuICAgICAgdHlwZSA9PT0gJ2lkZW50aWZpZXInIHx8XG4gICAgICB0eXBlID09PSAna2V5d29yZCcgfHxcbiAgICAgIHR5cGUgPT09ICd2YXJpYWJsZS5sYW5ndWFnZSdcbiAgICApXG4gIH1cblxuICBjb25zdCBpc09wZXJhdG9yID0gZnVuY3Rpb24gKHRva2VuKSB7XG4gICAgY29uc3QgdHlwZSA9IHRva2VuLnR5cGUgfHwgJydcbiAgICByZXR1cm4gdHlwZSA9PT0gJ2tleXdvcmQub3BlcmF0b3InXG4gIH1cblxuICBjb25zdCBpc1VuYXJ5T3BlcmF0b3IgPSBmdW5jdGlvbiAodG9rZW4pIHtcbiAgICBjb25zdCB2YWx1ZSA9IHRva2VuLnZhbHVlIHx8ICcnXG4gICAgcmV0dXJuIChcbiAgICAgIHZhbHVlID09PSAnKycgfHxcbiAgICAgIHZhbHVlID09PSAnLScgfHxcbiAgICAgIHZhbHVlID09PSAnficgfHxcbiAgICAgIHZhbHVlID09PSAnIScgfHxcbiAgICAgIHZhbHVlID09PSAnPydcbiAgICApXG4gIH1cblxuICBjb25zdCBkaWFnbm9zZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAvLyBhbGlhcyBlZGl0b3JcbiAgICBjb25zdCBlZGl0b3IgPSB0aGlzXG5cbiAgICAvLyBjcmVhdGUgdG9rZW5pemVyIC0tIHdlIGRvIHRoaXMgbWFudWFsbHkgYXMgd2UgZG8gbm90XG4gICAgLy8gd2FudCBBY2UgdG8gbWVyZ2UgYnJhY2tldHMgc2l0dGluZyB0b2dldGhlclxuICAgIGNvbnN0IFRva2VuaXplciA9IGFjZS5yZXF1aXJlKCdhY2UvdG9rZW5pemVyJykuVG9rZW5pemVyXG4gICAgY29uc3QgUkhpZ2hsaWdodFJ1bGVzID0gYWNlLnJlcXVpcmUoJ2FjZS9tb2RlL3JfaGlnaGxpZ2h0X3J1bGVzJylcbiAgICAgIC5SSGlnaGxpZ2h0UnVsZXNcbiAgICBjb25zdCBydWxlcyA9IG5ldyBSSGlnaGxpZ2h0UnVsZXMoKS5nZXRSdWxlcygpXG4gICAgZm9yIChjb25zdCBrZXkgaW4gcnVsZXMpIHtcbiAgICAgIGNvbnN0IHJ1bGUgPSBydWxlc1trZXldXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJ1bGUubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgcnVsZVtpXS5tZXJnZSA9IGZhbHNlXG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gZml4IHVwIHJ1bGVzXG4gICAgcnVsZXMuc3RhcnQudW5zaGlmdCh7XG4gICAgICB0b2tlbjogJ3N0cmluZycsXG4gICAgICByZWdleDogJ1wiKD86KD86XFxcXFxcXFwuKXwoPzpbXlwiXFxcXFxcXFxdKSkqP1wiJyxcbiAgICAgIG1lcmdlOiBmYWxzZSxcbiAgICAgIG5leHQ6ICdzdGFydCdcbiAgICB9KVxuXG4gICAgcnVsZXMuc3RhcnQudW5zaGlmdCh7XG4gICAgICB0b2tlbjogJ3N0cmluZycsXG4gICAgICByZWdleDogXCInKD86KD86XFxcXFxcXFwuKXwoPzpbXidcXFxcXFxcXF0pKSo/J1wiLFxuICAgICAgbWVyZ2U6IGZhbHNlLFxuICAgICAgbmV4dDogJ3N0YXJ0J1xuICAgIH0pXG5cbiAgICBydWxlcy5zdGFydC51bnNoaWZ0KHtcbiAgICAgIHRva2VuOiAna2V5d29yZC5vcGVyYXRvcicsXG4gICAgICByZWdleDpcbiAgICAgICAgJzo6Onw6Onw6PXwlJXw+PXw8PXw9PXwhPXxcXFxcfD58XFxcXC0+fDxcXFxcLXw8PFxcXFwtfFxcXFx8XFxcXHx8JiZ8PXxcXFxcK3xcXFxcLXxcXFxcKlxcXFwqP3wvfFxcXFxefD58PHwhfCZ8XFxcXHx8fnxcXFxcJHw6fEB8XFxcXD8nLFxuICAgICAgbWVyZ2U6IGZhbHNlLFxuICAgICAgbmV4dDogJ3N0YXJ0J1xuICAgIH0pXG5cbiAgICBydWxlcy5zdGFydC51bnNoaWZ0KHtcbiAgICAgIHRva2VuOiAncHVuY3R1YXRpb24nLFxuICAgICAgcmVnZXg6ICdbOyxdJyxcbiAgICAgIG1lcmdlOiBmYWxzZSxcbiAgICAgIG5leHQ6ICdzdGFydCdcbiAgICB9KVxuXG4gICAgY29uc3QgdG9rZW5pemVyID0gbmV3IFRva2VuaXplcihydWxlcylcblxuICAgIC8vIGNsZWFyIG9sZCBkaWFnbm9zdGljc1xuICAgIGVkaXRvci5zZXNzaW9uLmNsZWFyQW5ub3RhdGlvbnMoKVxuXG4gICAgLy8gcmV0cmlldmUgY29udGVudHMgYW5kIHRva2VuaXplXG4gICAgY29uc3QgbGluZXMgPSBlZGl0b3Iuc2Vzc2lvbi5kb2MuJGxpbmVzXG4gICAgbGV0IHRva2VucyA9IFtdXG4gICAgbGV0IHN0YXRlID0gJ3N0YXJ0J1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGluZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IHRva2VuaXplZCA9IHRva2VuaXplci5nZXRMaW5lVG9rZW5zKGxpbmVzW2ldLCBzdGF0ZSlcbiAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgdG9rZW5pemVkLnRva2Vucy5sZW5ndGg7IGorKykge1xuICAgICAgICB0b2tlbnMucHVzaCh0b2tlbml6ZWQudG9rZW5zW2pdKVxuICAgICAgfVxuICAgICAgdG9rZW5zLnB1c2goeyB0eXBlOiAndGV4dCcsIHZhbHVlOiAnXFxuJyB9KVxuICAgICAgc3RhdGUgPSB0b2tlbml6ZWQuc3RhdGVcbiAgICB9XG5cbiAgICAvLyBhZGQgcm93LCBjb2x1bW4gdG8gZWFjaCB0b2tlblxuICAgIGNvbnN0IGRvYyA9IGVkaXRvci5zZXNzaW9uLmRvY1xuICAgIGxldCBkb2NJbmRleCA9IDBcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgICAgdG9rZW5zW2ldLnBvc2l0aW9uID0gZG9jLmluZGV4VG9Qb3NpdGlvbihkb2NJbmRleClcbiAgICAgIGRvY0luZGV4ICs9IHRva2Vuc1tpXS52YWx1ZS5sZW5ndGhcbiAgICB9XG5cbiAgICAvLyByZW1vdmUgd2hpdGVzcGFjZSwgY29tbWVudHMgKG5vdCByZWxldmFudCBmb3Igc3ludGF4IGRpYWdub3N0aWNzKVxuICAgIHRva2VucyA9IHRva2Vucy5maWx0ZXIoZnVuY3Rpb24gKHRva2VuKSB7XG4gICAgICByZXR1cm4gdG9rZW4udHlwZSAhPT0gJ2NvbW1lbnQnICYmICEvXlxccyskLy50ZXN0KHRva2VuLnZhbHVlKVxuICAgIH0pXG5cbiAgICAvLyBzdGF0ZSByZWxhdGVkIHRvIG91ciBzaW1wbGUgZGlhZ25vc3RpY3MgZW5naW5lXG4gICAgY29uc3QgZGlhZ25vc3RpY3MgPSBbXVxuICAgIGNvbnN0IGJyYWNrZXRTdGFjayA9IFtdXG5cbiAgICAvLyBpdGVyYXRlIHRocm91Z2ggdG9rZW5zIGFuZCBsb29rIGZvciBpbnZhbGlkIHNlcXVlbmNlc1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAvLyB1cGRhdGUgbG9jYWwgc3RhdGVcbiAgICAgIGNvbnN0IHRva2VuID0gdG9rZW5zW2ldXG4gICAgICBjb25zdCB0eXBlID0gdG9rZW4udHlwZSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgICBjb25zdCB2YWx1ZSA9IHRva2VuLnZhbHVlXG5cbiAgICAgIC8vIGhhbmRsZSBsZWZ0IGJyYWNrZXRzXG4gICAgICBpZiAodmFsdWUgPT09ICcoJyB8fCB2YWx1ZSA9PT0gJ3snIHx8IHZhbHVlID09PSAnWycpIHtcbiAgICAgICAgYnJhY2tldFN0YWNrLnB1c2godG9rZW4pXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIC8vIGhhbmRsZSByaWdodCBicmFja2V0c1xuICAgICAgaWYgKHZhbHVlID09PSAnKScgfHwgdmFsdWUgPT09ICd9JyB8fCB2YWx1ZSA9PT0gJ10nKSB7XG4gICAgICAgIC8vIGVtcHR5IGJyYWNrZXQgc3RhY2s6IHNpZ25hbCB1bm1hdGNoZWRcbiAgICAgICAgaWYgKGJyYWNrZXRTdGFjay5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICBkaWFnbm9zdGljcy5wdXNoKHVubWF0Y2hlZENsb3NpbmdCcmFja2V0KHRva2VuKSlcbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gcG9wIG9mZiBmcm9tIGJyYWNrZXQgc3RhY2sgYW5kIHZlcmlmeVxuICAgICAgICBjb25zdCBvcGVuQnJhY2tldCA9IGJyYWNrZXRTdGFjay5wb3AoKVxuXG4gICAgICAgIGNvbnN0IG9rID1cbiAgICAgICAgICAodmFsdWUgPT09ICcpJyAmJiBvcGVuQnJhY2tldC52YWx1ZSA9PT0gJygnKSB8fFxuICAgICAgICAgICh2YWx1ZSA9PT0gJ10nICYmIG9wZW5CcmFja2V0LnZhbHVlID09PSAnWycpIHx8XG4gICAgICAgICAgKHZhbHVlID09PSAnfScgJiYgb3BlbkJyYWNrZXQudmFsdWUgPT09ICd7JylcblxuICAgICAgICBpZiAoIW9rKSB7XG4gICAgICAgICAgZGlhZ25vc3RpY3MucHVzaCh1bm1hdGNoZWRDbG9zaW5nQnJhY2tldCh0b2tlbikpXG4gICAgICAgICAgZGlhZ25vc3RpY3MucHVzaCh1bm1hdGNoZWRPcGVuaW5nQnJhY2tldChvcGVuQnJhY2tldCkpXG4gICAgICAgICAgY29udGludWVcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoaSA+IDApIHtcbiAgICAgICAgY29uc3QgbGhzID0gdG9rZW5zW2kgLSAxXVxuICAgICAgICBjb25zdCByaHMgPSB0b2tlbnNbaV1cbiAgICAgICAgY29uc3QgYnJhY2tldCA9IGJyYWNrZXRTdGFja1ticmFja2V0U3RhY2subGVuZ3RoIC0gMV0gfHwge31cblxuICAgICAgICAvLyBpZiB3ZSBoYXZlIHR3byBzeW1ib2xzIGluIGEgcm93IHdpdGggbm8gYmluYXJ5IG9wZXJhdG9yIGluIGJldHdlZW4sIHN5bnRheCBlcnJvclxuICAgICAgICBpZiAoXG4gICAgICAgICAgbGhzLnBvc2l0aW9uLnJvdyA9PT0gcmhzLnBvc2l0aW9uLnJvdyAmJlxuICAgICAgICAgIGlzU3ltYm9sKGxocykgJiZcbiAgICAgICAgICBpc1N5bWJvbChyaHMpXG4gICAgICAgICkge1xuICAgICAgICAgIGRpYWdub3N0aWNzLnB1c2godW5leHBlY3RlZCgnc3ltYm9sJywgcmhzKSlcbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gaWYgd2UgaGF2ZSBhbiBvcGVyYXRvciBmb2xsb3dlZCBieSBhIGJpbmFyeS1vbmx5IG9wZXJhdG9yLCBzeW50YXggZXJyb3JcbiAgICAgICAgaWYgKFxuICAgICAgICAgIGxocy5wb3NpdGlvbi5yb3cgPT09IHJocy5wb3NpdGlvbi5yb3cgJiZcbiAgICAgICAgICBpc09wZXJhdG9yKGxocykgJiZcbiAgICAgICAgICBpc09wZXJhdG9yKHJocykgJiZcbiAgICAgICAgICAhaXNVbmFyeU9wZXJhdG9yKHJocylcbiAgICAgICAgKSB7XG4gICAgICAgICAgZGlhZ25vc3RpY3MucHVzaCh1bmV4cGVjdGVkKCdvcGVyYXRvcicsIHJocykpXG4gICAgICAgICAgY29udGludWVcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGlmIHdlIGhhdmUgbXVsdGlwbGUgY29tbWFzIGluIGEgcm93IHdpdGhpbiBhIHBhcmVudGhldGljYWwgY29udGV4dCwgd2FyblxuICAgICAgICBpZiAobGhzLnZhbHVlID09PSAnLCcgJiYgcmhzLnZhbHVlID09PSAnLCcgJiYgYnJhY2tldC52YWx1ZSA9PT0gJygnKSB7XG4gICAgICAgICAgZGlhZ25vc3RpY3MucHVzaCh1bmV4cGVjdGVkKCdjb21tYScsIHJocywgJ3dhcm5pbmcnKSlcbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gaWYgd2UgaGF2ZSBhIGNvbW1hIHByZWNlZGluZyBhIGNsb3NpbmcgYnJhY2tldCwgd2FyblxuICAgICAgICBpZiAoXG4gICAgICAgICAgbGhzLnZhbHVlID09PSAnLCcgJiZcbiAgICAgICAgICAocmhzLnZhbHVlID09PSAnfScgfHwgcmhzLnZhbHVlID09PSAnKScgfHwgcmhzLnZhbHVlID09PSAnXScpXG4gICAgICAgICkge1xuICAgICAgICAgIGRpYWdub3N0aWNzLnB1c2godW5leHBlY3RlZCgnY29tbWEnLCBsaHMsICd3YXJuaW5nJykpXG4gICAgICAgICAgY29udGludWVcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIGlmIHdlIHN0aWxsIGhhdmUgdGhpbmdzIG9uIHRoZSBicmFja2V0IHN0YWNrLCB0aGV5J3JlIHVubWF0Y2hlZFxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYnJhY2tldFN0YWNrLmxlbmd0aDsgaSsrKSB7XG4gICAgICBkaWFnbm9zdGljcy5wdXNoKHVubWF0Y2hlZE9wZW5pbmdCcmFja2V0KGJyYWNrZXRTdGFja1tpXSkpXG4gICAgfVxuXG4gICAgLy8gc2lnbmFsIGRpYWdub3N0aWNzIHRvIEFjZVxuICAgIGVkaXRvci5zZXNzaW9uLnNldEFubm90YXRpb25zKGRpYWdub3N0aWNzKVxuICB9XG5cbiAgY29uc3QgZmluZEFjdGl2ZUFjZUluc3RhbmNlID0gZnVuY3Rpb24gKCkge1xuICAgIGxldCBlbCA9IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnRcbiAgICB3aGlsZSAoZWwgIT0gbnVsbCkge1xuICAgICAgaWYgKGVsLmVudiAmJiBlbC5lbnYuZWRpdG9yKSB7XG4gICAgICAgIHJldHVybiBlbC5lbnYuZWRpdG9yXG4gICAgICB9XG4gICAgICBlbCA9IGVsLnBhcmVudEVsZW1lbnRcbiAgICB9XG4gICAgcmV0dXJuIG51bGxcbiAgfVxuXG4gIGNvbnN0IGVuc3VyZUluaXRpYWxpemVkID0gZnVuY3Rpb24gKGVkaXRvcikge1xuICAgIGlmIChlZGl0b3IuJGRpYWdub3N0aWNzSW5pdGlhbGl6ZWQpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGlmICghZWRpdG9yLnR1dG9yaWFsLmRpYWdub3N0aWNzKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICAvLyByZWdpc3RlciBoYW5kbGVyc1xuICAgIGNvbnN0IGhhbmRsZXJzID0ge31cbiAgICBoYW5kbGVycy5jaGFuZ2UgPSBzZWxmLiRvbkNoYW5nZS5iaW5kKGVkaXRvcilcbiAgICBoYW5kbGVycy5kZXN0cm95ID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBmb3IgKGNvbnN0IGtleSBpbiBoYW5kbGVycykge1xuICAgICAgICB0aGlzLm9mZihrZXksIGhhbmRsZXJzW2tleV0pXG4gICAgICB9XG4gICAgfS5iaW5kKGVkaXRvcilcblxuICAgIGZvciAoY29uc3Qga2V5IGluIGhhbmRsZXJzKSB7XG4gICAgICBlZGl0b3Iub24oa2V5LCBoYW5kbGVyc1trZXldKVxuICAgIH1cblxuICAgIGVkaXRvci4kbGl2ZURpYWdub3N0aWNzID0gZGlhZ25vc2UuYmluZChlZGl0b3IpXG5cbiAgICBlZGl0b3IuJGRpYWdub3N0aWNzSW5pdGlhbGl6ZWQgPSAxXG4gIH1cblxuICB0aGlzLiRvbkNoYW5nZSA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgaWYgKCF0aGlzLnR1dG9yaWFsLmRpYWdub3N0aWNzKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBjbGVhclRpbWVvdXQodGhpcy4kZGlhZ25vc3RpY3NUaW1lcklkKVxuICAgIHRoaXMuc2Vzc2lvbi5jbGVhckFubm90YXRpb25zKClcbiAgICB0aGlzLiRkaWFnbm9zdGljc1RpbWVySWQgPSBzZXRUaW1lb3V0KHRoaXMuJGxpdmVEaWFnbm9zdGljcywgMTAwMClcbiAgfVxuXG4gIHRoaXMuJG9uS2V5RG93biA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgIGNvbnN0IGVkaXRvciA9IGZpbmRBY3RpdmVBY2VJbnN0YW5jZSgpXG4gICAgaWYgKGVkaXRvciAhPSBudWxsKSB7XG4gICAgICBlbnN1cmVJbml0aWFsaXplZChlZGl0b3IpXG4gICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy4kb25LZXlEb3duKVxuICAgIH1cbiAgfVxuXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLiRvbktleURvd24pXG59XG4iXX0=